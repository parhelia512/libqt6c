#pragma once
#ifndef SRCQT6C_LIBQGRAPHICSEFFECT_H
#define SRCQT6C_LIBQGRAPHICSEFFECT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqanystringview.h"
#include "libqbindingstorage.h"
#include "libqbrush.h"
#include "libqevent.h"
#include "libqcolor.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include "libqpainter.h"
#include "libqpixmap.h"
#include "libqpoint.h"
#include "libqrect.h"
#include <string.h>
#include "libqthread.h"
#include "libqvariant.h"

QGraphicsEffect* q_graphicseffect_new();
QGraphicsEffect* q_graphicseffect_new2(void* parent);
QMetaObject* q_graphicseffect_meta_object(void* self);
void* q_graphicseffect_metacast(void* self, const char* param1);
int32_t q_graphicseffect_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicseffect_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicseffect_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicseffect_tr(const char* s);
QRectF* q_graphicseffect_bounding_rect_for(void* self, void* sourceRect);
void q_graphicseffect_on_bounding_rect_for(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_graphicseffect_qbase_bounding_rect_for(void* self, void* sourceRect);
QRectF* q_graphicseffect_bounding_rect(void* self);
bool q_graphicseffect_is_enabled(void* self);
void q_graphicseffect_set_enabled(void* self, bool enable);
void q_graphicseffect_update(void* self);
void q_graphicseffect_enabled_changed(void* self, bool enabled);
void q_graphicseffect_on_enabled_changed(void* self, void (*slot)(void*, bool));
void q_graphicseffect_draw(void* self, void* painter);
void q_graphicseffect_on_draw(void* self, void (*slot)(void*, void*));
void q_graphicseffect_qbase_draw(void* self, void* painter);
void q_graphicseffect_source_changed(void* self, int64_t flags);
void q_graphicseffect_on_source_changed(void* self, void (*slot)(void*, int64_t));
void q_graphicseffect_qbase_source_changed(void* self, int64_t flags);
void q_graphicseffect_update_bounding_rect(void* self);
void q_graphicseffect_on_update_bounding_rect(void* self, void (*slot)());
void q_graphicseffect_qbase_update_bounding_rect(void* self);
bool q_graphicseffect_source_is_pixmap(void* self);
void q_graphicseffect_on_source_is_pixmap(void* self, bool (*slot)());
bool q_graphicseffect_qbase_source_is_pixmap(void* self);
QRectF* q_graphicseffect_source_bounding_rect(void* self);
void q_graphicseffect_on_source_bounding_rect(void* self, QRectF* (*slot)());
QRectF* q_graphicseffect_qbase_source_bounding_rect(void* self);
void q_graphicseffect_draw_source(void* self, void* painter);
void q_graphicseffect_on_draw_source(void* self, void (*slot)(void*, void*));
void q_graphicseffect_qbase_draw_source(void* self, void* painter);
QPixmap* q_graphicseffect_source_pixmap(void* self);
void q_graphicseffect_on_source_pixmap(void* self, QPixmap* (*slot)());
QPixmap* q_graphicseffect_qbase_source_pixmap(void* self);
const char* q_graphicseffect_tr2(const char* s, const char* c);
const char* q_graphicseffect_tr3(const char* s, const char* c, int n);
QRectF* q_graphicseffect_source_bounding_rect1(void* self, int64_t system);
void q_graphicseffect_on_source_bounding_rect1(void* self, QRectF* (*slot)(void*, int64_t));
QRectF* q_graphicseffect_qbase_source_bounding_rect1(void* self, int64_t system);
QPixmap* q_graphicseffect_source_pixmap1(void* self, int64_t system);
void q_graphicseffect_on_source_pixmap1(void* self, QPixmap* (*slot)(void*, int64_t));
QPixmap* q_graphicseffect_qbase_source_pixmap1(void* self, int64_t system);
QPixmap* q_graphicseffect_source_pixmap2(void* self, int64_t system, void* offset);
void q_graphicseffect_on_source_pixmap2(void* self, QPixmap* (*slot)(void*, int64_t, void*));
QPixmap* q_graphicseffect_qbase_source_pixmap2(void* self, int64_t system, void* offset);
QPixmap* q_graphicseffect_source_pixmap3(void* self, int64_t system, void* offset, int64_t mode);
void q_graphicseffect_on_source_pixmap3(void* self, QPixmap* (*slot)(void*, int64_t, void*, int64_t));
QPixmap* q_graphicseffect_qbase_source_pixmap3(void* self, int64_t system, void* offset, int64_t mode);
const char* q_graphicseffect_object_name(void* self);
void q_graphicseffect_set_object_name(void* self, const char* name);
bool q_graphicseffect_is_widget_type(void* self);
bool q_graphicseffect_is_window_type(void* self);
bool q_graphicseffect_is_quick_item_type(void* self);
bool q_graphicseffect_signals_blocked(void* self);
bool q_graphicseffect_block_signals(void* self, bool b);
QThread* q_graphicseffect_thread(void* self);
void q_graphicseffect_move_to_thread(void* self, void* thread);
int32_t q_graphicseffect_start_timer(void* self, int interval);
void q_graphicseffect_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicseffect_children(void* self);
void q_graphicseffect_set_parent(void* self, void* parent);
void q_graphicseffect_install_event_filter(void* self, void* filterObj);
void q_graphicseffect_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicseffect_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicseffect_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicseffect_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicseffect_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicseffect_dump_object_tree(void* self);
void q_graphicseffect_dump_object_info(void* self);
bool q_graphicseffect_set_property(void* self, const char* name, void* value);
QVariant* q_graphicseffect_property(void* self, const char* name);
const char** q_graphicseffect_dynamic_property_names(void* self);
QBindingStorage* q_graphicseffect_binding_storage(void* self);
QBindingStorage* q_graphicseffect_binding_storage2(void* self);
void q_graphicseffect_destroyed(void* self);
void q_graphicseffect_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicseffect_parent(void* self);
bool q_graphicseffect_inherits(void* self, const char* classname);
void q_graphicseffect_delete_later(void* self);
int32_t q_graphicseffect_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicseffect_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicseffect_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicseffect_destroyed1(void* self, void* param1);
void q_graphicseffect_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_graphicseffect_event(void* self, void* event);
bool q_graphicseffect_qbase_event(void* self, void* event);
void q_graphicseffect_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicseffect_event_filter(void* self, void* watched, void* event);
bool q_graphicseffect_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicseffect_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicseffect_timer_event(void* self, void* event);
void q_graphicseffect_qbase_timer_event(void* self, void* event);
void q_graphicseffect_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicseffect_child_event(void* self, void* event);
void q_graphicseffect_qbase_child_event(void* self, void* event);
void q_graphicseffect_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicseffect_custom_event(void* self, void* event);
void q_graphicseffect_qbase_custom_event(void* self, void* event);
void q_graphicseffect_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicseffect_connect_notify(void* self, void* signal);
void q_graphicseffect_qbase_connect_notify(void* self, void* signal);
void q_graphicseffect_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicseffect_disconnect_notify(void* self, void* signal);
void q_graphicseffect_qbase_disconnect_notify(void* self, void* signal);
void q_graphicseffect_on_disconnect_notify(void* self, void (*slot)(void*, void*));
QObject* q_graphicseffect_sender(void* self);
QObject* q_graphicseffect_qbase_sender(void* self);
void q_graphicseffect_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicseffect_sender_signal_index(void* self);
int32_t q_graphicseffect_qbase_sender_signal_index(void* self);
void q_graphicseffect_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicseffect_receivers(void* self, const char* signal);
int32_t q_graphicseffect_qbase_receivers(void* self, const char* signal);
void q_graphicseffect_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicseffect_is_signal_connected(void* self, void* signal);
bool q_graphicseffect_qbase_is_signal_connected(void* self, void* signal);
void q_graphicseffect_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicseffect_delete(void* self);

QGraphicsColorizeEffect* q_graphicscolorizeeffect_new();
QGraphicsColorizeEffect* q_graphicscolorizeeffect_new2(void* parent);
QMetaObject* q_graphicscolorizeeffect_meta_object(void* self);
void* q_graphicscolorizeeffect_metacast(void* self, const char* param1);
int32_t q_graphicscolorizeeffect_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicscolorizeeffect_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicscolorizeeffect_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicscolorizeeffect_tr(const char* s);
QColor* q_graphicscolorizeeffect_color(void* self);
double q_graphicscolorizeeffect_strength(void* self);
void q_graphicscolorizeeffect_set_color(void* self, void* c);
void q_graphicscolorizeeffect_set_strength(void* self, double strength);
void q_graphicscolorizeeffect_color_changed(void* self, void* color);
void q_graphicscolorizeeffect_on_color_changed(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_strength_changed(void* self, double strength);
void q_graphicscolorizeeffect_on_strength_changed(void* self, void (*slot)(void*, double));
void q_graphicscolorizeeffect_draw(void* self, void* painter);
void q_graphicscolorizeeffect_on_draw(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_qbase_draw(void* self, void* painter);
const char* q_graphicscolorizeeffect_tr2(const char* s, const char* c);
const char* q_graphicscolorizeeffect_tr3(const char* s, const char* c, int n);
QRectF* q_graphicscolorizeeffect_bounding_rect(void* self);
bool q_graphicscolorizeeffect_is_enabled(void* self);
void q_graphicscolorizeeffect_set_enabled(void* self, bool enable);
void q_graphicscolorizeeffect_update(void* self);
void q_graphicscolorizeeffect_enabled_changed(void* self, bool enabled);
void q_graphicscolorizeeffect_on_enabled_changed(void* self, void (*slot)(void*, bool));
const char* q_graphicscolorizeeffect_object_name(void* self);
void q_graphicscolorizeeffect_set_object_name(void* self, const char* name);
bool q_graphicscolorizeeffect_is_widget_type(void* self);
bool q_graphicscolorizeeffect_is_window_type(void* self);
bool q_graphicscolorizeeffect_is_quick_item_type(void* self);
bool q_graphicscolorizeeffect_signals_blocked(void* self);
bool q_graphicscolorizeeffect_block_signals(void* self, bool b);
QThread* q_graphicscolorizeeffect_thread(void* self);
void q_graphicscolorizeeffect_move_to_thread(void* self, void* thread);
int32_t q_graphicscolorizeeffect_start_timer(void* self, int interval);
void q_graphicscolorizeeffect_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicscolorizeeffect_children(void* self);
void q_graphicscolorizeeffect_set_parent(void* self, void* parent);
void q_graphicscolorizeeffect_install_event_filter(void* self, void* filterObj);
void q_graphicscolorizeeffect_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicscolorizeeffect_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicscolorizeeffect_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicscolorizeeffect_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicscolorizeeffect_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicscolorizeeffect_dump_object_tree(void* self);
void q_graphicscolorizeeffect_dump_object_info(void* self);
bool q_graphicscolorizeeffect_set_property(void* self, const char* name, void* value);
QVariant* q_graphicscolorizeeffect_property(void* self, const char* name);
const char** q_graphicscolorizeeffect_dynamic_property_names(void* self);
QBindingStorage* q_graphicscolorizeeffect_binding_storage(void* self);
QBindingStorage* q_graphicscolorizeeffect_binding_storage2(void* self);
void q_graphicscolorizeeffect_destroyed(void* self);
void q_graphicscolorizeeffect_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicscolorizeeffect_parent(void* self);
bool q_graphicscolorizeeffect_inherits(void* self, const char* classname);
void q_graphicscolorizeeffect_delete_later(void* self);
int32_t q_graphicscolorizeeffect_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicscolorizeeffect_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicscolorizeeffect_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicscolorizeeffect_destroyed1(void* self, void* param1);
void q_graphicscolorizeeffect_on_destroyed1(void* self, void (*slot)(void*, void*));
QRectF* q_graphicscolorizeeffect_bounding_rect_for(void* self, void* sourceRect);
QRectF* q_graphicscolorizeeffect_qbase_bounding_rect_for(void* self, void* sourceRect);
void q_graphicscolorizeeffect_on_bounding_rect_for(void* self, QRectF* (*slot)(void*, void*));
void q_graphicscolorizeeffect_source_changed(void* self, int64_t flags);
void q_graphicscolorizeeffect_qbase_source_changed(void* self, int64_t flags);
void q_graphicscolorizeeffect_on_source_changed(void* self, void (*slot)(void*, int64_t));
bool q_graphicscolorizeeffect_event(void* self, void* event);
bool q_graphicscolorizeeffect_qbase_event(void* self, void* event);
void q_graphicscolorizeeffect_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicscolorizeeffect_event_filter(void* self, void* watched, void* event);
bool q_graphicscolorizeeffect_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicscolorizeeffect_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicscolorizeeffect_timer_event(void* self, void* event);
void q_graphicscolorizeeffect_qbase_timer_event(void* self, void* event);
void q_graphicscolorizeeffect_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_child_event(void* self, void* event);
void q_graphicscolorizeeffect_qbase_child_event(void* self, void* event);
void q_graphicscolorizeeffect_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_custom_event(void* self, void* event);
void q_graphicscolorizeeffect_qbase_custom_event(void* self, void* event);
void q_graphicscolorizeeffect_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_connect_notify(void* self, void* signal);
void q_graphicscolorizeeffect_qbase_connect_notify(void* self, void* signal);
void q_graphicscolorizeeffect_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_disconnect_notify(void* self, void* signal);
void q_graphicscolorizeeffect_qbase_disconnect_notify(void* self, void* signal);
void q_graphicscolorizeeffect_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicscolorizeeffect_update_bounding_rect(void* self);
void q_graphicscolorizeeffect_qbase_update_bounding_rect(void* self);
void q_graphicscolorizeeffect_on_update_bounding_rect(void* self, void (*slot)());
bool q_graphicscolorizeeffect_source_is_pixmap(void* self);
bool q_graphicscolorizeeffect_qbase_source_is_pixmap(void* self);
void q_graphicscolorizeeffect_on_source_is_pixmap(void* self, bool (*slot)());
QRectF* q_graphicscolorizeeffect_source_bounding_rect(void* self);
QRectF* q_graphicscolorizeeffect_qbase_source_bounding_rect(void* self);
void q_graphicscolorizeeffect_on_source_bounding_rect(void* self, QRectF* (*slot)());
void q_graphicscolorizeeffect_draw_source(void* self, void* painter);
void q_graphicscolorizeeffect_qbase_draw_source(void* self, void* painter);
void q_graphicscolorizeeffect_on_draw_source(void* self, void (*slot)(void*, void*));
QPixmap* q_graphicscolorizeeffect_source_pixmap(void* self);
QPixmap* q_graphicscolorizeeffect_qbase_source_pixmap(void* self);
void q_graphicscolorizeeffect_on_source_pixmap(void* self, QPixmap* (*slot)());
QObject* q_graphicscolorizeeffect_sender(void* self);
QObject* q_graphicscolorizeeffect_qbase_sender(void* self);
void q_graphicscolorizeeffect_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicscolorizeeffect_sender_signal_index(void* self);
int32_t q_graphicscolorizeeffect_qbase_sender_signal_index(void* self);
void q_graphicscolorizeeffect_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicscolorizeeffect_receivers(void* self, const char* signal);
int32_t q_graphicscolorizeeffect_qbase_receivers(void* self, const char* signal);
void q_graphicscolorizeeffect_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicscolorizeeffect_is_signal_connected(void* self, void* signal);
bool q_graphicscolorizeeffect_qbase_is_signal_connected(void* self, void* signal);
void q_graphicscolorizeeffect_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicscolorizeeffect_delete(void* self);

QGraphicsBlurEffect* q_graphicsblureffect_new();
QGraphicsBlurEffect* q_graphicsblureffect_new2(void* parent);
QMetaObject* q_graphicsblureffect_meta_object(void* self);
void* q_graphicsblureffect_metacast(void* self, const char* param1);
int32_t q_graphicsblureffect_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicsblureffect_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicsblureffect_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicsblureffect_tr(const char* s);
QRectF* q_graphicsblureffect_bounding_rect_for(void* self, void* rect);
void q_graphicsblureffect_on_bounding_rect_for(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_graphicsblureffect_qbase_bounding_rect_for(void* self, void* rect);
double q_graphicsblureffect_blur_radius(void* self);
int64_t q_graphicsblureffect_blur_hints(void* self);
void q_graphicsblureffect_set_blur_radius(void* self, double blurRadius);
void q_graphicsblureffect_set_blur_hints(void* self, int64_t hints);
void q_graphicsblureffect_blur_radius_changed(void* self, double blurRadius);
void q_graphicsblureffect_on_blur_radius_changed(void* self, void (*slot)(void*, double));
void q_graphicsblureffect_blur_hints_changed(void* self, int64_t hints);
void q_graphicsblureffect_on_blur_hints_changed(void* self, void (*slot)(void*, int64_t));
void q_graphicsblureffect_draw(void* self, void* painter);
void q_graphicsblureffect_on_draw(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_qbase_draw(void* self, void* painter);
const char* q_graphicsblureffect_tr2(const char* s, const char* c);
const char* q_graphicsblureffect_tr3(const char* s, const char* c, int n);
QRectF* q_graphicsblureffect_bounding_rect(void* self);
bool q_graphicsblureffect_is_enabled(void* self);
void q_graphicsblureffect_set_enabled(void* self, bool enable);
void q_graphicsblureffect_update(void* self);
void q_graphicsblureffect_enabled_changed(void* self, bool enabled);
void q_graphicsblureffect_on_enabled_changed(void* self, void (*slot)(void*, bool));
const char* q_graphicsblureffect_object_name(void* self);
void q_graphicsblureffect_set_object_name(void* self, const char* name);
bool q_graphicsblureffect_is_widget_type(void* self);
bool q_graphicsblureffect_is_window_type(void* self);
bool q_graphicsblureffect_is_quick_item_type(void* self);
bool q_graphicsblureffect_signals_blocked(void* self);
bool q_graphicsblureffect_block_signals(void* self, bool b);
QThread* q_graphicsblureffect_thread(void* self);
void q_graphicsblureffect_move_to_thread(void* self, void* thread);
int32_t q_graphicsblureffect_start_timer(void* self, int interval);
void q_graphicsblureffect_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicsblureffect_children(void* self);
void q_graphicsblureffect_set_parent(void* self, void* parent);
void q_graphicsblureffect_install_event_filter(void* self, void* filterObj);
void q_graphicsblureffect_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicsblureffect_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicsblureffect_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicsblureffect_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicsblureffect_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicsblureffect_dump_object_tree(void* self);
void q_graphicsblureffect_dump_object_info(void* self);
bool q_graphicsblureffect_set_property(void* self, const char* name, void* value);
QVariant* q_graphicsblureffect_property(void* self, const char* name);
const char** q_graphicsblureffect_dynamic_property_names(void* self);
QBindingStorage* q_graphicsblureffect_binding_storage(void* self);
QBindingStorage* q_graphicsblureffect_binding_storage2(void* self);
void q_graphicsblureffect_destroyed(void* self);
void q_graphicsblureffect_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicsblureffect_parent(void* self);
bool q_graphicsblureffect_inherits(void* self, const char* classname);
void q_graphicsblureffect_delete_later(void* self);
int32_t q_graphicsblureffect_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicsblureffect_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicsblureffect_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicsblureffect_destroyed1(void* self, void* param1);
void q_graphicsblureffect_on_destroyed1(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_source_changed(void* self, int64_t flags);
void q_graphicsblureffect_qbase_source_changed(void* self, int64_t flags);
void q_graphicsblureffect_on_source_changed(void* self, void (*slot)(void*, int64_t));
bool q_graphicsblureffect_event(void* self, void* event);
bool q_graphicsblureffect_qbase_event(void* self, void* event);
void q_graphicsblureffect_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicsblureffect_event_filter(void* self, void* watched, void* event);
bool q_graphicsblureffect_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicsblureffect_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicsblureffect_timer_event(void* self, void* event);
void q_graphicsblureffect_qbase_timer_event(void* self, void* event);
void q_graphicsblureffect_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_child_event(void* self, void* event);
void q_graphicsblureffect_qbase_child_event(void* self, void* event);
void q_graphicsblureffect_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_custom_event(void* self, void* event);
void q_graphicsblureffect_qbase_custom_event(void* self, void* event);
void q_graphicsblureffect_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_connect_notify(void* self, void* signal);
void q_graphicsblureffect_qbase_connect_notify(void* self, void* signal);
void q_graphicsblureffect_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_disconnect_notify(void* self, void* signal);
void q_graphicsblureffect_qbase_disconnect_notify(void* self, void* signal);
void q_graphicsblureffect_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsblureffect_update_bounding_rect(void* self);
void q_graphicsblureffect_qbase_update_bounding_rect(void* self);
void q_graphicsblureffect_on_update_bounding_rect(void* self, void (*slot)());
bool q_graphicsblureffect_source_is_pixmap(void* self);
bool q_graphicsblureffect_qbase_source_is_pixmap(void* self);
void q_graphicsblureffect_on_source_is_pixmap(void* self, bool (*slot)());
QRectF* q_graphicsblureffect_source_bounding_rect(void* self);
QRectF* q_graphicsblureffect_qbase_source_bounding_rect(void* self);
void q_graphicsblureffect_on_source_bounding_rect(void* self, QRectF* (*slot)());
void q_graphicsblureffect_draw_source(void* self, void* painter);
void q_graphicsblureffect_qbase_draw_source(void* self, void* painter);
void q_graphicsblureffect_on_draw_source(void* self, void (*slot)(void*, void*));
QPixmap* q_graphicsblureffect_source_pixmap(void* self);
QPixmap* q_graphicsblureffect_qbase_source_pixmap(void* self);
void q_graphicsblureffect_on_source_pixmap(void* self, QPixmap* (*slot)());
QObject* q_graphicsblureffect_sender(void* self);
QObject* q_graphicsblureffect_qbase_sender(void* self);
void q_graphicsblureffect_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicsblureffect_sender_signal_index(void* self);
int32_t q_graphicsblureffect_qbase_sender_signal_index(void* self);
void q_graphicsblureffect_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicsblureffect_receivers(void* self, const char* signal);
int32_t q_graphicsblureffect_qbase_receivers(void* self, const char* signal);
void q_graphicsblureffect_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicsblureffect_is_signal_connected(void* self, void* signal);
bool q_graphicsblureffect_qbase_is_signal_connected(void* self, void* signal);
void q_graphicsblureffect_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicsblureffect_delete(void* self);

QGraphicsDropShadowEffect* q_graphicsdropshadoweffect_new();
QGraphicsDropShadowEffect* q_graphicsdropshadoweffect_new2(void* parent);
QMetaObject* q_graphicsdropshadoweffect_meta_object(void* self);
void* q_graphicsdropshadoweffect_metacast(void* self, const char* param1);
int32_t q_graphicsdropshadoweffect_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicsdropshadoweffect_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicsdropshadoweffect_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicsdropshadoweffect_tr(const char* s);
QRectF* q_graphicsdropshadoweffect_bounding_rect_for(void* self, void* rect);
void q_graphicsdropshadoweffect_on_bounding_rect_for(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_graphicsdropshadoweffect_qbase_bounding_rect_for(void* self, void* rect);
QPointF* q_graphicsdropshadoweffect_offset(void* self);
double q_graphicsdropshadoweffect_x_offset(void* self);
double q_graphicsdropshadoweffect_y_offset(void* self);
double q_graphicsdropshadoweffect_blur_radius(void* self);
QColor* q_graphicsdropshadoweffect_color(void* self);
void q_graphicsdropshadoweffect_set_offset(void* self, void* ofs);
void q_graphicsdropshadoweffect_set_offset2(void* self, double dx, double dy);
void q_graphicsdropshadoweffect_set_offset_with_qreal(void* self, double d);
void q_graphicsdropshadoweffect_set_x_offset(void* self, double dx);
void q_graphicsdropshadoweffect_set_y_offset(void* self, double dy);
void q_graphicsdropshadoweffect_set_blur_radius(void* self, double blurRadius);
void q_graphicsdropshadoweffect_set_color(void* self, void* color);
void q_graphicsdropshadoweffect_offset_changed(void* self, void* offset);
void q_graphicsdropshadoweffect_on_offset_changed(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_blur_radius_changed(void* self, double blurRadius);
void q_graphicsdropshadoweffect_on_blur_radius_changed(void* self, void (*slot)(void*, double));
void q_graphicsdropshadoweffect_color_changed(void* self, void* color);
void q_graphicsdropshadoweffect_on_color_changed(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_draw(void* self, void* painter);
void q_graphicsdropshadoweffect_on_draw(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_qbase_draw(void* self, void* painter);
const char* q_graphicsdropshadoweffect_tr2(const char* s, const char* c);
const char* q_graphicsdropshadoweffect_tr3(const char* s, const char* c, int n);
QRectF* q_graphicsdropshadoweffect_bounding_rect(void* self);
bool q_graphicsdropshadoweffect_is_enabled(void* self);
void q_graphicsdropshadoweffect_set_enabled(void* self, bool enable);
void q_graphicsdropshadoweffect_update(void* self);
void q_graphicsdropshadoweffect_enabled_changed(void* self, bool enabled);
void q_graphicsdropshadoweffect_on_enabled_changed(void* self, void (*slot)(void*, bool));
const char* q_graphicsdropshadoweffect_object_name(void* self);
void q_graphicsdropshadoweffect_set_object_name(void* self, const char* name);
bool q_graphicsdropshadoweffect_is_widget_type(void* self);
bool q_graphicsdropshadoweffect_is_window_type(void* self);
bool q_graphicsdropshadoweffect_is_quick_item_type(void* self);
bool q_graphicsdropshadoweffect_signals_blocked(void* self);
bool q_graphicsdropshadoweffect_block_signals(void* self, bool b);
QThread* q_graphicsdropshadoweffect_thread(void* self);
void q_graphicsdropshadoweffect_move_to_thread(void* self, void* thread);
int32_t q_graphicsdropshadoweffect_start_timer(void* self, int interval);
void q_graphicsdropshadoweffect_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicsdropshadoweffect_children(void* self);
void q_graphicsdropshadoweffect_set_parent(void* self, void* parent);
void q_graphicsdropshadoweffect_install_event_filter(void* self, void* filterObj);
void q_graphicsdropshadoweffect_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicsdropshadoweffect_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicsdropshadoweffect_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicsdropshadoweffect_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicsdropshadoweffect_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicsdropshadoweffect_dump_object_tree(void* self);
void q_graphicsdropshadoweffect_dump_object_info(void* self);
bool q_graphicsdropshadoweffect_set_property(void* self, const char* name, void* value);
QVariant* q_graphicsdropshadoweffect_property(void* self, const char* name);
const char** q_graphicsdropshadoweffect_dynamic_property_names(void* self);
QBindingStorage* q_graphicsdropshadoweffect_binding_storage(void* self);
QBindingStorage* q_graphicsdropshadoweffect_binding_storage2(void* self);
void q_graphicsdropshadoweffect_destroyed(void* self);
void q_graphicsdropshadoweffect_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicsdropshadoweffect_parent(void* self);
bool q_graphicsdropshadoweffect_inherits(void* self, const char* classname);
void q_graphicsdropshadoweffect_delete_later(void* self);
int32_t q_graphicsdropshadoweffect_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicsdropshadoweffect_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicsdropshadoweffect_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicsdropshadoweffect_destroyed1(void* self, void* param1);
void q_graphicsdropshadoweffect_on_destroyed1(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_source_changed(void* self, int64_t flags);
void q_graphicsdropshadoweffect_qbase_source_changed(void* self, int64_t flags);
void q_graphicsdropshadoweffect_on_source_changed(void* self, void (*slot)(void*, int64_t));
bool q_graphicsdropshadoweffect_event(void* self, void* event);
bool q_graphicsdropshadoweffect_qbase_event(void* self, void* event);
void q_graphicsdropshadoweffect_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicsdropshadoweffect_event_filter(void* self, void* watched, void* event);
bool q_graphicsdropshadoweffect_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicsdropshadoweffect_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicsdropshadoweffect_timer_event(void* self, void* event);
void q_graphicsdropshadoweffect_qbase_timer_event(void* self, void* event);
void q_graphicsdropshadoweffect_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_child_event(void* self, void* event);
void q_graphicsdropshadoweffect_qbase_child_event(void* self, void* event);
void q_graphicsdropshadoweffect_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_custom_event(void* self, void* event);
void q_graphicsdropshadoweffect_qbase_custom_event(void* self, void* event);
void q_graphicsdropshadoweffect_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_connect_notify(void* self, void* signal);
void q_graphicsdropshadoweffect_qbase_connect_notify(void* self, void* signal);
void q_graphicsdropshadoweffect_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_disconnect_notify(void* self, void* signal);
void q_graphicsdropshadoweffect_qbase_disconnect_notify(void* self, void* signal);
void q_graphicsdropshadoweffect_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsdropshadoweffect_update_bounding_rect(void* self);
void q_graphicsdropshadoweffect_qbase_update_bounding_rect(void* self);
void q_graphicsdropshadoweffect_on_update_bounding_rect(void* self, void (*slot)());
bool q_graphicsdropshadoweffect_source_is_pixmap(void* self);
bool q_graphicsdropshadoweffect_qbase_source_is_pixmap(void* self);
void q_graphicsdropshadoweffect_on_source_is_pixmap(void* self, bool (*slot)());
QRectF* q_graphicsdropshadoweffect_source_bounding_rect(void* self);
QRectF* q_graphicsdropshadoweffect_qbase_source_bounding_rect(void* self);
void q_graphicsdropshadoweffect_on_source_bounding_rect(void* self, QRectF* (*slot)());
void q_graphicsdropshadoweffect_draw_source(void* self, void* painter);
void q_graphicsdropshadoweffect_qbase_draw_source(void* self, void* painter);
void q_graphicsdropshadoweffect_on_draw_source(void* self, void (*slot)(void*, void*));
QPixmap* q_graphicsdropshadoweffect_source_pixmap(void* self);
QPixmap* q_graphicsdropshadoweffect_qbase_source_pixmap(void* self);
void q_graphicsdropshadoweffect_on_source_pixmap(void* self, QPixmap* (*slot)());
QObject* q_graphicsdropshadoweffect_sender(void* self);
QObject* q_graphicsdropshadoweffect_qbase_sender(void* self);
void q_graphicsdropshadoweffect_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicsdropshadoweffect_sender_signal_index(void* self);
int32_t q_graphicsdropshadoweffect_qbase_sender_signal_index(void* self);
void q_graphicsdropshadoweffect_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicsdropshadoweffect_receivers(void* self, const char* signal);
int32_t q_graphicsdropshadoweffect_qbase_receivers(void* self, const char* signal);
void q_graphicsdropshadoweffect_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicsdropshadoweffect_is_signal_connected(void* self, void* signal);
bool q_graphicsdropshadoweffect_qbase_is_signal_connected(void* self, void* signal);
void q_graphicsdropshadoweffect_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicsdropshadoweffect_delete(void* self);

QGraphicsOpacityEffect* q_graphicsopacityeffect_new();
QGraphicsOpacityEffect* q_graphicsopacityeffect_new2(void* parent);
QMetaObject* q_graphicsopacityeffect_meta_object(void* self);
void* q_graphicsopacityeffect_metacast(void* self, const char* param1);
int32_t q_graphicsopacityeffect_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicsopacityeffect_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicsopacityeffect_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicsopacityeffect_tr(const char* s);
double q_graphicsopacityeffect_opacity(void* self);
QBrush* q_graphicsopacityeffect_opacity_mask(void* self);
void q_graphicsopacityeffect_set_opacity(void* self, double opacity);
void q_graphicsopacityeffect_set_opacity_mask(void* self, void* mask);
void q_graphicsopacityeffect_opacity_changed(void* self, double opacity);
void q_graphicsopacityeffect_on_opacity_changed(void* self, void (*slot)(void*, double));
void q_graphicsopacityeffect_opacity_mask_changed(void* self, void* mask);
void q_graphicsopacityeffect_on_opacity_mask_changed(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_draw(void* self, void* painter);
void q_graphicsopacityeffect_on_draw(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_qbase_draw(void* self, void* painter);
const char* q_graphicsopacityeffect_tr2(const char* s, const char* c);
const char* q_graphicsopacityeffect_tr3(const char* s, const char* c, int n);
QRectF* q_graphicsopacityeffect_bounding_rect(void* self);
bool q_graphicsopacityeffect_is_enabled(void* self);
void q_graphicsopacityeffect_set_enabled(void* self, bool enable);
void q_graphicsopacityeffect_update(void* self);
void q_graphicsopacityeffect_enabled_changed(void* self, bool enabled);
void q_graphicsopacityeffect_on_enabled_changed(void* self, void (*slot)(void*, bool));
const char* q_graphicsopacityeffect_object_name(void* self);
void q_graphicsopacityeffect_set_object_name(void* self, const char* name);
bool q_graphicsopacityeffect_is_widget_type(void* self);
bool q_graphicsopacityeffect_is_window_type(void* self);
bool q_graphicsopacityeffect_is_quick_item_type(void* self);
bool q_graphicsopacityeffect_signals_blocked(void* self);
bool q_graphicsopacityeffect_block_signals(void* self, bool b);
QThread* q_graphicsopacityeffect_thread(void* self);
void q_graphicsopacityeffect_move_to_thread(void* self, void* thread);
int32_t q_graphicsopacityeffect_start_timer(void* self, int interval);
void q_graphicsopacityeffect_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicsopacityeffect_children(void* self);
void q_graphicsopacityeffect_set_parent(void* self, void* parent);
void q_graphicsopacityeffect_install_event_filter(void* self, void* filterObj);
void q_graphicsopacityeffect_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicsopacityeffect_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicsopacityeffect_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicsopacityeffect_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicsopacityeffect_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicsopacityeffect_dump_object_tree(void* self);
void q_graphicsopacityeffect_dump_object_info(void* self);
bool q_graphicsopacityeffect_set_property(void* self, const char* name, void* value);
QVariant* q_graphicsopacityeffect_property(void* self, const char* name);
const char** q_graphicsopacityeffect_dynamic_property_names(void* self);
QBindingStorage* q_graphicsopacityeffect_binding_storage(void* self);
QBindingStorage* q_graphicsopacityeffect_binding_storage2(void* self);
void q_graphicsopacityeffect_destroyed(void* self);
void q_graphicsopacityeffect_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicsopacityeffect_parent(void* self);
bool q_graphicsopacityeffect_inherits(void* self, const char* classname);
void q_graphicsopacityeffect_delete_later(void* self);
int32_t q_graphicsopacityeffect_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicsopacityeffect_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicsopacityeffect_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicsopacityeffect_destroyed1(void* self, void* param1);
void q_graphicsopacityeffect_on_destroyed1(void* self, void (*slot)(void*, void*));
QRectF* q_graphicsopacityeffect_bounding_rect_for(void* self, void* sourceRect);
QRectF* q_graphicsopacityeffect_qbase_bounding_rect_for(void* self, void* sourceRect);
void q_graphicsopacityeffect_on_bounding_rect_for(void* self, QRectF* (*slot)(void*, void*));
void q_graphicsopacityeffect_source_changed(void* self, int64_t flags);
void q_graphicsopacityeffect_qbase_source_changed(void* self, int64_t flags);
void q_graphicsopacityeffect_on_source_changed(void* self, void (*slot)(void*, int64_t));
bool q_graphicsopacityeffect_event(void* self, void* event);
bool q_graphicsopacityeffect_qbase_event(void* self, void* event);
void q_graphicsopacityeffect_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicsopacityeffect_event_filter(void* self, void* watched, void* event);
bool q_graphicsopacityeffect_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicsopacityeffect_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicsopacityeffect_timer_event(void* self, void* event);
void q_graphicsopacityeffect_qbase_timer_event(void* self, void* event);
void q_graphicsopacityeffect_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_child_event(void* self, void* event);
void q_graphicsopacityeffect_qbase_child_event(void* self, void* event);
void q_graphicsopacityeffect_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_custom_event(void* self, void* event);
void q_graphicsopacityeffect_qbase_custom_event(void* self, void* event);
void q_graphicsopacityeffect_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_connect_notify(void* self, void* signal);
void q_graphicsopacityeffect_qbase_connect_notify(void* self, void* signal);
void q_graphicsopacityeffect_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_disconnect_notify(void* self, void* signal);
void q_graphicsopacityeffect_qbase_disconnect_notify(void* self, void* signal);
void q_graphicsopacityeffect_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsopacityeffect_update_bounding_rect(void* self);
void q_graphicsopacityeffect_qbase_update_bounding_rect(void* self);
void q_graphicsopacityeffect_on_update_bounding_rect(void* self, void (*slot)());
bool q_graphicsopacityeffect_source_is_pixmap(void* self);
bool q_graphicsopacityeffect_qbase_source_is_pixmap(void* self);
void q_graphicsopacityeffect_on_source_is_pixmap(void* self, bool (*slot)());
QRectF* q_graphicsopacityeffect_source_bounding_rect(void* self);
QRectF* q_graphicsopacityeffect_qbase_source_bounding_rect(void* self);
void q_graphicsopacityeffect_on_source_bounding_rect(void* self, QRectF* (*slot)());
void q_graphicsopacityeffect_draw_source(void* self, void* painter);
void q_graphicsopacityeffect_qbase_draw_source(void* self, void* painter);
void q_graphicsopacityeffect_on_draw_source(void* self, void (*slot)(void*, void*));
QPixmap* q_graphicsopacityeffect_source_pixmap(void* self);
QPixmap* q_graphicsopacityeffect_qbase_source_pixmap(void* self);
void q_graphicsopacityeffect_on_source_pixmap(void* self, QPixmap* (*slot)());
QObject* q_graphicsopacityeffect_sender(void* self);
QObject* q_graphicsopacityeffect_qbase_sender(void* self);
void q_graphicsopacityeffect_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicsopacityeffect_sender_signal_index(void* self);
int32_t q_graphicsopacityeffect_qbase_sender_signal_index(void* self);
void q_graphicsopacityeffect_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicsopacityeffect_receivers(void* self, const char* signal);
int32_t q_graphicsopacityeffect_qbase_receivers(void* self, const char* signal);
void q_graphicsopacityeffect_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicsopacityeffect_is_signal_connected(void* self, void* signal);
bool q_graphicsopacityeffect_qbase_is_signal_connected(void* self, void* signal);
void q_graphicsopacityeffect_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicsopacityeffect_delete(void* self);

/// https://doc.qt.io/qt-6/qgraphicseffect.html#types

typedef enum {
    QGRAPHICSEFFECT_CHANGEFLAG_SOURCEATTACHED = 1,
    QGRAPHICSEFFECT_CHANGEFLAG_SOURCEDETACHED = 2,
    QGRAPHICSEFFECT_CHANGEFLAG_SOURCEBOUNDINGRECTCHANGED = 4,
    QGRAPHICSEFFECT_CHANGEFLAG_SOURCEINVALIDATED = 8
} QGraphicsEffect__ChangeFlag;

typedef enum {
    QGRAPHICSEFFECT_PIXMAPPADMODE_NOPAD = 0,
    QGRAPHICSEFFECT_PIXMAPPADMODE_PADTOTRANSPARENTBORDER = 1,
    QGRAPHICSEFFECT_PIXMAPPADMODE_PADTOEFFECTIVEBOUNDINGRECT = 2
} QGraphicsEffect__PixmapPadMode;

typedef enum {
    QGRAPHICSBLUREFFECT_BLURHINT_PERFORMANCEHINT = 0,
    QGRAPHICSBLUREFFECT_BLURHINT_QUALITYHINT = 1,
    QGRAPHICSBLUREFFECT_BLURHINT_ANIMATIONHINT = 2
} QGraphicsBlurEffect__BlurHint;

#endif
