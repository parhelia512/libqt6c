#pragma once
#ifndef SRCQT6C_LIBQBOXLAYOUT_H
#define SRCQT6C_LIBQBOXLAYOUT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqanystringview.h"
#include "libqbindingstorage.h"
#include "libqevent.h"
#include "libqlayout.h"
#include "libqlayoutitem.h"
#include "libqmargins.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include "libqrect.h"
#include "libqsize.h"
#include <string.h>
#include "libqthread.h"
#include "libqvariant.h"
#include "libqwidget.h"

QBoxLayout* q_boxlayout_new(int64_t param1);
QBoxLayout* q_boxlayout_new2(int64_t param1, void* parent);
QMetaObject* q_boxlayout_meta_object(void* self);
void* q_boxlayout_metacast(void* self, const char* param1);
int32_t q_boxlayout_metacall(void* self, int64_t param1, int param2, void* param3);
void q_boxlayout_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_boxlayout_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_boxlayout_tr(const char* s);
int64_t q_boxlayout_direction(void* self);
void q_boxlayout_set_direction(void* self, int64_t direction);
void q_boxlayout_add_spacing(void* self, int size);
void q_boxlayout_add_stretch(void* self);
void q_boxlayout_add_spacer_item(void* self, void* spacerItem);
void q_boxlayout_add_widget(void* self, void* param1);
void q_boxlayout_add_layout(void* self, void* layout);
void q_boxlayout_add_strut(void* self, int param1);
void q_boxlayout_add_item(void* self, void* param1);
void q_boxlayout_on_add_item(void* self, void (*slot)(void*, void*));
void q_boxlayout_qbase_add_item(void* self, void* param1);
void q_boxlayout_insert_spacing(void* self, int index, int size);
void q_boxlayout_insert_stretch(void* self, int index);
void q_boxlayout_insert_spacer_item(void* self, int index, void* spacerItem);
void q_boxlayout_insert_widget(void* self, int index, void* widget);
void q_boxlayout_insert_layout(void* self, int index, void* layout);
void q_boxlayout_insert_item(void* self, int index, void* param2);
int32_t q_boxlayout_spacing(void* self);
void q_boxlayout_on_spacing(void* self, int32_t (*slot)());
int32_t q_boxlayout_qbase_spacing(void* self);
void q_boxlayout_set_spacing(void* self, int spacing);
void q_boxlayout_on_set_spacing(void* self, void (*slot)(void*, int));
void q_boxlayout_qbase_set_spacing(void* self, int spacing);
bool q_boxlayout_set_stretch_factor(void* self, void* w, int stretch);
bool q_boxlayout_set_stretch_factor2(void* self, void* l, int stretch);
void q_boxlayout_set_stretch(void* self, int index, int stretch);
int32_t q_boxlayout_stretch(void* self, int index);
QSize* q_boxlayout_size_hint(void* self);
void q_boxlayout_on_size_hint(void* self, QSize* (*slot)());
QSize* q_boxlayout_qbase_size_hint(void* self);
QSize* q_boxlayout_minimum_size(void* self);
void q_boxlayout_on_minimum_size(void* self, QSize* (*slot)());
QSize* q_boxlayout_qbase_minimum_size(void* self);
QSize* q_boxlayout_maximum_size(void* self);
void q_boxlayout_on_maximum_size(void* self, QSize* (*slot)());
QSize* q_boxlayout_qbase_maximum_size(void* self);
bool q_boxlayout_has_height_for_width(void* self);
void q_boxlayout_on_has_height_for_width(void* self, bool (*slot)());
bool q_boxlayout_qbase_has_height_for_width(void* self);
int32_t q_boxlayout_height_for_width(void* self, int param1);
void q_boxlayout_on_height_for_width(void* self, int32_t (*slot)(void*, int));
int32_t q_boxlayout_qbase_height_for_width(void* self, int param1);
int32_t q_boxlayout_minimum_height_for_width(void* self, int param1);
void q_boxlayout_on_minimum_height_for_width(void* self, int32_t (*slot)(void*, int));
int32_t q_boxlayout_qbase_minimum_height_for_width(void* self, int param1);
int64_t q_boxlayout_expanding_directions(void* self);
void q_boxlayout_on_expanding_directions(void* self, int64_t (*slot)());
int64_t q_boxlayout_qbase_expanding_directions(void* self);
void q_boxlayout_invalidate(void* self);
void q_boxlayout_on_invalidate(void* self, void (*slot)());
void q_boxlayout_qbase_invalidate(void* self);
QLayoutItem* q_boxlayout_item_at(void* self, int param1);
void q_boxlayout_on_item_at(void* self, QLayoutItem* (*slot)(void*, int));
QLayoutItem* q_boxlayout_qbase_item_at(void* self, int param1);
QLayoutItem* q_boxlayout_take_at(void* self, int param1);
void q_boxlayout_on_take_at(void* self, QLayoutItem* (*slot)(void*, int));
QLayoutItem* q_boxlayout_qbase_take_at(void* self, int param1);
int32_t q_boxlayout_count(void* self);
void q_boxlayout_on_count(void* self, int32_t (*slot)());
int32_t q_boxlayout_qbase_count(void* self);
void q_boxlayout_set_geometry(void* self, void* geometry);
void q_boxlayout_on_set_geometry(void* self, void (*slot)(void*, void*));
void q_boxlayout_qbase_set_geometry(void* self, void* geometry);
const char* q_boxlayout_tr2(const char* s, const char* c);
const char* q_boxlayout_tr3(const char* s, const char* c, int n);
void q_boxlayout_add_stretch1(void* self, int stretch);
void q_boxlayout_add_widget2(void* self, void* param1, int stretch);
void q_boxlayout_add_widget3(void* self, void* param1, int stretch, int64_t alignment);
void q_boxlayout_add_layout2(void* self, void* layout, int stretch);
void q_boxlayout_insert_stretch2(void* self, int index, int stretch);
void q_boxlayout_insert_widget3(void* self, int index, void* widget, int stretch);
void q_boxlayout_insert_widget4(void* self, int index, void* widget, int stretch, int64_t alignment);
void q_boxlayout_insert_layout3(void* self, int index, void* layout, int stretch);
void q_boxlayout_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_boxlayout_set_contents_margins_with_margins(void* self, void* margins);
void q_boxlayout_unset_contents_margins(void* self);
void q_boxlayout_get_contents_margins(void* self, int* left, int* top, int* right, int* bottom);
QMargins* q_boxlayout_contents_margins(void* self);
QRect* q_boxlayout_contents_rect(void* self);
bool q_boxlayout_set_alignment(void* self, void* w, int64_t alignment);
bool q_boxlayout_set_alignment2(void* self, void* l, int64_t alignment);
void q_boxlayout_set_size_constraint(void* self, int64_t sizeConstraint);
int64_t q_boxlayout_size_constraint(void* self);
void q_boxlayout_set_menu_bar(void* self, void* w);
QWidget* q_boxlayout_menu_bar(void* self);
QWidget* q_boxlayout_parent_widget(void* self);
bool q_boxlayout_activate(void* self);
void q_boxlayout_update(void* self);
void q_boxlayout_remove_widget(void* self, void* w);
void q_boxlayout_remove_item(void* self, void* param1);
int32_t q_boxlayout_index_of_with_q_layout_item(void* self, void* param1);
void q_boxlayout_on_index_of_with_q_layout_item(void* self, int32_t (*slot)(void*, void*));
int32_t q_boxlayout_qbase_index_of_with_q_layout_item(void* self, void* param1);
int32_t q_boxlayout_total_minimum_height_for_width(void* self, int w);
int32_t q_boxlayout_total_height_for_width(void* self, int w);
QSize* q_boxlayout_total_minimum_size(void* self);
QSize* q_boxlayout_total_maximum_size(void* self);
QSize* q_boxlayout_total_size_hint(void* self);
void q_boxlayout_set_enabled(void* self, bool enabled);
bool q_boxlayout_is_enabled(void* self);
QSize* q_boxlayout_closest_acceptable_size(void* w, void* s);
const char* q_boxlayout_object_name(void* self);
void q_boxlayout_set_object_name(void* self, const char* name);
bool q_boxlayout_is_widget_type(void* self);
bool q_boxlayout_is_window_type(void* self);
bool q_boxlayout_is_quick_item_type(void* self);
bool q_boxlayout_signals_blocked(void* self);
bool q_boxlayout_block_signals(void* self, bool b);
QThread* q_boxlayout_thread(void* self);
void q_boxlayout_move_to_thread(void* self, void* thread);
int32_t q_boxlayout_start_timer(void* self, int interval);
void q_boxlayout_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_boxlayout_children(void* self);
void q_boxlayout_set_parent(void* self, void* parent);
void q_boxlayout_install_event_filter(void* self, void* filterObj);
void q_boxlayout_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_boxlayout_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_boxlayout_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_boxlayout_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_boxlayout_disconnect_with_q_meta_object_connection(void* param1);
void q_boxlayout_dump_object_tree(void* self);
void q_boxlayout_dump_object_info(void* self);
bool q_boxlayout_set_property(void* self, const char* name, void* value);
QVariant* q_boxlayout_property(void* self, const char* name);
const char** q_boxlayout_dynamic_property_names(void* self);
QBindingStorage* q_boxlayout_binding_storage(void* self);
QBindingStorage* q_boxlayout_binding_storage2(void* self);
void q_boxlayout_destroyed(void* self);
void q_boxlayout_on_destroyed(void* self, void (*slot)(void*));
QObject* q_boxlayout_parent(void* self);
bool q_boxlayout_inherits(void* self, const char* classname);
void q_boxlayout_delete_later(void* self);
int32_t q_boxlayout_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_boxlayout_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_boxlayout_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_boxlayout_destroyed1(void* self, void* param1);
void q_boxlayout_on_destroyed1(void* self, void (*slot)(void*, void*));
int64_t q_boxlayout_alignment(void* self);
QRect* q_boxlayout_geometry(void* self);
QRect* q_boxlayout_qbase_geometry(void* self);
void q_boxlayout_on_geometry(void* self, QRect* (*slot)());
int32_t q_boxlayout_index_of(void* self, void* param1);
int32_t q_boxlayout_qbase_index_of(void* self, void* param1);
void q_boxlayout_on_index_of(void* self, int32_t (*slot)(void*, void*));
bool q_boxlayout_is_empty(void* self);
bool q_boxlayout_qbase_is_empty(void* self);
void q_boxlayout_on_is_empty(void* self, bool (*slot)());
int64_t q_boxlayout_control_types(void* self);
int64_t q_boxlayout_qbase_control_types(void* self);
void q_boxlayout_on_control_types(void* self, int64_t (*slot)());
QLayoutItem* q_boxlayout_replace_widget(void* self, void* from, void* to, int64_t options);
QLayoutItem* q_boxlayout_qbase_replace_widget(void* self, void* from, void* to, int64_t options);
void q_boxlayout_on_replace_widget(void* self, QLayoutItem* (*slot)(void*, void*, void*, int64_t));
QLayout* q_boxlayout_layout(void* self);
QLayout* q_boxlayout_qbase_layout(void* self);
void q_boxlayout_on_layout(void* self, QLayout* (*slot)());
void q_boxlayout_child_event(void* self, void* e);
void q_boxlayout_qbase_child_event(void* self, void* e);
void q_boxlayout_on_child_event(void* self, void (*slot)(void*, void*));
bool q_boxlayout_event(void* self, void* event);
bool q_boxlayout_qbase_event(void* self, void* event);
void q_boxlayout_on_event(void* self, bool (*slot)(void*, void*));
bool q_boxlayout_event_filter(void* self, void* watched, void* event);
bool q_boxlayout_qbase_event_filter(void* self, void* watched, void* event);
void q_boxlayout_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_boxlayout_timer_event(void* self, void* event);
void q_boxlayout_qbase_timer_event(void* self, void* event);
void q_boxlayout_on_timer_event(void* self, void (*slot)(void*, void*));
void q_boxlayout_custom_event(void* self, void* event);
void q_boxlayout_qbase_custom_event(void* self, void* event);
void q_boxlayout_on_custom_event(void* self, void (*slot)(void*, void*));
void q_boxlayout_connect_notify(void* self, void* signal);
void q_boxlayout_qbase_connect_notify(void* self, void* signal);
void q_boxlayout_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_boxlayout_disconnect_notify(void* self, void* signal);
void q_boxlayout_qbase_disconnect_notify(void* self, void* signal);
void q_boxlayout_on_disconnect_notify(void* self, void (*slot)(void*, void*));
QWidget* q_boxlayout_widget(void* self);
QWidget* q_boxlayout_qbase_widget(void* self);
void q_boxlayout_on_widget(void* self, QWidget* (*slot)());
QSpacerItem* q_boxlayout_spacer_item(void* self);
QSpacerItem* q_boxlayout_qbase_spacer_item(void* self);
void q_boxlayout_on_spacer_item(void* self, QSpacerItem* (*slot)());
void q_boxlayout_widget_event(void* self, void* param1);
void q_boxlayout_qbase_widget_event(void* self, void* param1);
void q_boxlayout_on_widget_event(void* self, void (*slot)(void*, void*));
void q_boxlayout_add_child_layout(void* self, void* l);
void q_boxlayout_qbase_add_child_layout(void* self, void* l);
void q_boxlayout_on_add_child_layout(void* self, void (*slot)(void*, void*));
void q_boxlayout_add_child_widget(void* self, void* w);
void q_boxlayout_qbase_add_child_widget(void* self, void* w);
void q_boxlayout_on_add_child_widget(void* self, void (*slot)(void*, void*));
bool q_boxlayout_adopt_layout(void* self, void* layout);
bool q_boxlayout_qbase_adopt_layout(void* self, void* layout);
void q_boxlayout_on_adopt_layout(void* self, bool (*slot)(void*, void*));
QRect* q_boxlayout_alignment_rect(void* self, void* param1);
QRect* q_boxlayout_qbase_alignment_rect(void* self, void* param1);
void q_boxlayout_on_alignment_rect(void* self, QRect* (*slot)(void*, void*));
QObject* q_boxlayout_sender(void* self);
QObject* q_boxlayout_qbase_sender(void* self);
void q_boxlayout_on_sender(void* self, QObject* (*slot)());
int32_t q_boxlayout_sender_signal_index(void* self);
int32_t q_boxlayout_qbase_sender_signal_index(void* self);
void q_boxlayout_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_boxlayout_receivers(void* self, const char* signal);
int32_t q_boxlayout_qbase_receivers(void* self, const char* signal);
void q_boxlayout_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_boxlayout_is_signal_connected(void* self, void* signal);
bool q_boxlayout_qbase_is_signal_connected(void* self, void* signal);
void q_boxlayout_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_boxlayout_delete(void* self);

QHBoxLayout* q_hboxlayout_new(void* parent);
QHBoxLayout* q_hboxlayout_new2();
QMetaObject* q_hboxlayout_meta_object(void* self);
void* q_hboxlayout_metacast(void* self, const char* param1);
int32_t q_hboxlayout_metacall(void* self, int64_t param1, int param2, void* param3);
void q_hboxlayout_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_hboxlayout_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_hboxlayout_tr(const char* s);
const char* q_hboxlayout_tr2(const char* s, const char* c);
const char* q_hboxlayout_tr3(const char* s, const char* c, int n);
int64_t q_hboxlayout_direction(void* self);
void q_hboxlayout_set_direction(void* self, int64_t direction);
void q_hboxlayout_add_spacing(void* self, int size);
void q_hboxlayout_add_stretch(void* self);
void q_hboxlayout_add_spacer_item(void* self, void* spacerItem);
void q_hboxlayout_add_widget(void* self, void* param1);
void q_hboxlayout_add_layout(void* self, void* layout);
void q_hboxlayout_add_strut(void* self, int param1);
void q_hboxlayout_insert_spacing(void* self, int index, int size);
void q_hboxlayout_insert_stretch(void* self, int index);
void q_hboxlayout_insert_spacer_item(void* self, int index, void* spacerItem);
void q_hboxlayout_insert_widget(void* self, int index, void* widget);
void q_hboxlayout_insert_layout(void* self, int index, void* layout);
void q_hboxlayout_insert_item(void* self, int index, void* param2);
bool q_hboxlayout_set_stretch_factor(void* self, void* w, int stretch);
bool q_hboxlayout_set_stretch_factor2(void* self, void* l, int stretch);
void q_hboxlayout_set_stretch(void* self, int index, int stretch);
int32_t q_hboxlayout_stretch(void* self, int index);
void q_hboxlayout_add_stretch1(void* self, int stretch);
void q_hboxlayout_add_widget2(void* self, void* param1, int stretch);
void q_hboxlayout_add_widget3(void* self, void* param1, int stretch, int64_t alignment);
void q_hboxlayout_add_layout2(void* self, void* layout, int stretch);
void q_hboxlayout_insert_stretch2(void* self, int index, int stretch);
void q_hboxlayout_insert_widget3(void* self, int index, void* widget, int stretch);
void q_hboxlayout_insert_widget4(void* self, int index, void* widget, int stretch, int64_t alignment);
void q_hboxlayout_insert_layout3(void* self, int index, void* layout, int stretch);
void q_hboxlayout_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_hboxlayout_set_contents_margins_with_margins(void* self, void* margins);
void q_hboxlayout_unset_contents_margins(void* self);
void q_hboxlayout_get_contents_margins(void* self, int* left, int* top, int* right, int* bottom);
QMargins* q_hboxlayout_contents_margins(void* self);
QRect* q_hboxlayout_contents_rect(void* self);
bool q_hboxlayout_set_alignment(void* self, void* w, int64_t alignment);
bool q_hboxlayout_set_alignment2(void* self, void* l, int64_t alignment);
void q_hboxlayout_set_size_constraint(void* self, int64_t sizeConstraint);
int64_t q_hboxlayout_size_constraint(void* self);
void q_hboxlayout_set_menu_bar(void* self, void* w);
QWidget* q_hboxlayout_menu_bar(void* self);
QWidget* q_hboxlayout_parent_widget(void* self);
bool q_hboxlayout_activate(void* self);
void q_hboxlayout_update(void* self);
void q_hboxlayout_remove_widget(void* self, void* w);
void q_hboxlayout_remove_item(void* self, void* param1);
int32_t q_hboxlayout_index_of_with_q_layout_item(void* self, void* param1);
void q_hboxlayout_on_index_of_with_q_layout_item(void* self, int32_t (*slot)(void*, void*));
int32_t q_hboxlayout_qbase_index_of_with_q_layout_item(void* self, void* param1);
int32_t q_hboxlayout_total_minimum_height_for_width(void* self, int w);
int32_t q_hboxlayout_total_height_for_width(void* self, int w);
QSize* q_hboxlayout_total_minimum_size(void* self);
QSize* q_hboxlayout_total_maximum_size(void* self);
QSize* q_hboxlayout_total_size_hint(void* self);
void q_hboxlayout_set_enabled(void* self, bool enabled);
bool q_hboxlayout_is_enabled(void* self);
QSize* q_hboxlayout_closest_acceptable_size(void* w, void* s);
const char* q_hboxlayout_object_name(void* self);
void q_hboxlayout_set_object_name(void* self, const char* name);
bool q_hboxlayout_is_widget_type(void* self);
bool q_hboxlayout_is_window_type(void* self);
bool q_hboxlayout_is_quick_item_type(void* self);
bool q_hboxlayout_signals_blocked(void* self);
bool q_hboxlayout_block_signals(void* self, bool b);
QThread* q_hboxlayout_thread(void* self);
void q_hboxlayout_move_to_thread(void* self, void* thread);
int32_t q_hboxlayout_start_timer(void* self, int interval);
void q_hboxlayout_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_hboxlayout_children(void* self);
void q_hboxlayout_set_parent(void* self, void* parent);
void q_hboxlayout_install_event_filter(void* self, void* filterObj);
void q_hboxlayout_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_hboxlayout_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_hboxlayout_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_hboxlayout_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_hboxlayout_disconnect_with_q_meta_object_connection(void* param1);
void q_hboxlayout_dump_object_tree(void* self);
void q_hboxlayout_dump_object_info(void* self);
bool q_hboxlayout_set_property(void* self, const char* name, void* value);
QVariant* q_hboxlayout_property(void* self, const char* name);
const char** q_hboxlayout_dynamic_property_names(void* self);
QBindingStorage* q_hboxlayout_binding_storage(void* self);
QBindingStorage* q_hboxlayout_binding_storage2(void* self);
void q_hboxlayout_destroyed(void* self);
void q_hboxlayout_on_destroyed(void* self, void (*slot)(void*));
QObject* q_hboxlayout_parent(void* self);
bool q_hboxlayout_inherits(void* self, const char* classname);
void q_hboxlayout_delete_later(void* self);
int32_t q_hboxlayout_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_hboxlayout_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_hboxlayout_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_hboxlayout_destroyed1(void* self, void* param1);
void q_hboxlayout_on_destroyed1(void* self, void (*slot)(void*, void*));
int64_t q_hboxlayout_alignment(void* self);
void q_hboxlayout_add_item(void* self, void* param1);
void q_hboxlayout_qbase_add_item(void* self, void* param1);
void q_hboxlayout_on_add_item(void* self, void (*slot)(void*, void*));
int32_t q_hboxlayout_spacing(void* self);
int32_t q_hboxlayout_qbase_spacing(void* self);
void q_hboxlayout_on_spacing(void* self, int32_t (*slot)());
void q_hboxlayout_set_spacing(void* self, int spacing);
void q_hboxlayout_qbase_set_spacing(void* self, int spacing);
void q_hboxlayout_on_set_spacing(void* self, void (*slot)(void*, int));
QSize* q_hboxlayout_size_hint(void* self);
QSize* q_hboxlayout_qbase_size_hint(void* self);
void q_hboxlayout_on_size_hint(void* self, QSize* (*slot)());
QSize* q_hboxlayout_minimum_size(void* self);
QSize* q_hboxlayout_qbase_minimum_size(void* self);
void q_hboxlayout_on_minimum_size(void* self, QSize* (*slot)());
QSize* q_hboxlayout_maximum_size(void* self);
QSize* q_hboxlayout_qbase_maximum_size(void* self);
void q_hboxlayout_on_maximum_size(void* self, QSize* (*slot)());
bool q_hboxlayout_has_height_for_width(void* self);
bool q_hboxlayout_qbase_has_height_for_width(void* self);
void q_hboxlayout_on_has_height_for_width(void* self, bool (*slot)());
int32_t q_hboxlayout_height_for_width(void* self, int param1);
int32_t q_hboxlayout_qbase_height_for_width(void* self, int param1);
void q_hboxlayout_on_height_for_width(void* self, int32_t (*slot)(void*, int));
int32_t q_hboxlayout_minimum_height_for_width(void* self, int param1);
int32_t q_hboxlayout_qbase_minimum_height_for_width(void* self, int param1);
void q_hboxlayout_on_minimum_height_for_width(void* self, int32_t (*slot)(void*, int));
int64_t q_hboxlayout_expanding_directions(void* self);
int64_t q_hboxlayout_qbase_expanding_directions(void* self);
void q_hboxlayout_on_expanding_directions(void* self, int64_t (*slot)());
void q_hboxlayout_invalidate(void* self);
void q_hboxlayout_qbase_invalidate(void* self);
void q_hboxlayout_on_invalidate(void* self, void (*slot)());
QLayoutItem* q_hboxlayout_item_at(void* self, int param1);
QLayoutItem* q_hboxlayout_qbase_item_at(void* self, int param1);
void q_hboxlayout_on_item_at(void* self, QLayoutItem* (*slot)(void*, int));
QLayoutItem* q_hboxlayout_take_at(void* self, int param1);
QLayoutItem* q_hboxlayout_qbase_take_at(void* self, int param1);
void q_hboxlayout_on_take_at(void* self, QLayoutItem* (*slot)(void*, int));
int32_t q_hboxlayout_count(void* self);
int32_t q_hboxlayout_qbase_count(void* self);
void q_hboxlayout_on_count(void* self, int32_t (*slot)());
void q_hboxlayout_set_geometry(void* self, void* geometry);
void q_hboxlayout_qbase_set_geometry(void* self, void* geometry);
void q_hboxlayout_on_set_geometry(void* self, void (*slot)(void*, void*));
QRect* q_hboxlayout_geometry(void* self);
QRect* q_hboxlayout_qbase_geometry(void* self);
void q_hboxlayout_on_geometry(void* self, QRect* (*slot)());
int32_t q_hboxlayout_index_of(void* self, void* param1);
int32_t q_hboxlayout_qbase_index_of(void* self, void* param1);
void q_hboxlayout_on_index_of(void* self, int32_t (*slot)(void*, void*));
bool q_hboxlayout_is_empty(void* self);
bool q_hboxlayout_qbase_is_empty(void* self);
void q_hboxlayout_on_is_empty(void* self, bool (*slot)());
int64_t q_hboxlayout_control_types(void* self);
int64_t q_hboxlayout_qbase_control_types(void* self);
void q_hboxlayout_on_control_types(void* self, int64_t (*slot)());
QLayoutItem* q_hboxlayout_replace_widget(void* self, void* from, void* to, int64_t options);
QLayoutItem* q_hboxlayout_qbase_replace_widget(void* self, void* from, void* to, int64_t options);
void q_hboxlayout_on_replace_widget(void* self, QLayoutItem* (*slot)(void*, void*, void*, int64_t));
QLayout* q_hboxlayout_layout(void* self);
QLayout* q_hboxlayout_qbase_layout(void* self);
void q_hboxlayout_on_layout(void* self, QLayout* (*slot)());
void q_hboxlayout_child_event(void* self, void* e);
void q_hboxlayout_qbase_child_event(void* self, void* e);
void q_hboxlayout_on_child_event(void* self, void (*slot)(void*, void*));
bool q_hboxlayout_event(void* self, void* event);
bool q_hboxlayout_qbase_event(void* self, void* event);
void q_hboxlayout_on_event(void* self, bool (*slot)(void*, void*));
bool q_hboxlayout_event_filter(void* self, void* watched, void* event);
bool q_hboxlayout_qbase_event_filter(void* self, void* watched, void* event);
void q_hboxlayout_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_hboxlayout_timer_event(void* self, void* event);
void q_hboxlayout_qbase_timer_event(void* self, void* event);
void q_hboxlayout_on_timer_event(void* self, void (*slot)(void*, void*));
void q_hboxlayout_custom_event(void* self, void* event);
void q_hboxlayout_qbase_custom_event(void* self, void* event);
void q_hboxlayout_on_custom_event(void* self, void (*slot)(void*, void*));
void q_hboxlayout_connect_notify(void* self, void* signal);
void q_hboxlayout_qbase_connect_notify(void* self, void* signal);
void q_hboxlayout_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_hboxlayout_disconnect_notify(void* self, void* signal);
void q_hboxlayout_qbase_disconnect_notify(void* self, void* signal);
void q_hboxlayout_on_disconnect_notify(void* self, void (*slot)(void*, void*));
QWidget* q_hboxlayout_widget(void* self);
QWidget* q_hboxlayout_qbase_widget(void* self);
void q_hboxlayout_on_widget(void* self, QWidget* (*slot)());
QSpacerItem* q_hboxlayout_spacer_item(void* self);
QSpacerItem* q_hboxlayout_qbase_spacer_item(void* self);
void q_hboxlayout_on_spacer_item(void* self, QSpacerItem* (*slot)());
void q_hboxlayout_widget_event(void* self, void* param1);
void q_hboxlayout_qbase_widget_event(void* self, void* param1);
void q_hboxlayout_on_widget_event(void* self, void (*slot)(void*, void*));
void q_hboxlayout_add_child_layout(void* self, void* l);
void q_hboxlayout_qbase_add_child_layout(void* self, void* l);
void q_hboxlayout_on_add_child_layout(void* self, void (*slot)(void*, void*));
void q_hboxlayout_add_child_widget(void* self, void* w);
void q_hboxlayout_qbase_add_child_widget(void* self, void* w);
void q_hboxlayout_on_add_child_widget(void* self, void (*slot)(void*, void*));
bool q_hboxlayout_adopt_layout(void* self, void* layout);
bool q_hboxlayout_qbase_adopt_layout(void* self, void* layout);
void q_hboxlayout_on_adopt_layout(void* self, bool (*slot)(void*, void*));
QRect* q_hboxlayout_alignment_rect(void* self, void* param1);
QRect* q_hboxlayout_qbase_alignment_rect(void* self, void* param1);
void q_hboxlayout_on_alignment_rect(void* self, QRect* (*slot)(void*, void*));
QObject* q_hboxlayout_sender(void* self);
QObject* q_hboxlayout_qbase_sender(void* self);
void q_hboxlayout_on_sender(void* self, QObject* (*slot)());
int32_t q_hboxlayout_sender_signal_index(void* self);
int32_t q_hboxlayout_qbase_sender_signal_index(void* self);
void q_hboxlayout_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_hboxlayout_receivers(void* self, const char* signal);
int32_t q_hboxlayout_qbase_receivers(void* self, const char* signal);
void q_hboxlayout_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_hboxlayout_is_signal_connected(void* self, void* signal);
bool q_hboxlayout_qbase_is_signal_connected(void* self, void* signal);
void q_hboxlayout_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_hboxlayout_delete(void* self);

QVBoxLayout* q_vboxlayout_new(void* parent);
QVBoxLayout* q_vboxlayout_new2();
QMetaObject* q_vboxlayout_meta_object(void* self);
void* q_vboxlayout_metacast(void* self, const char* param1);
int32_t q_vboxlayout_metacall(void* self, int64_t param1, int param2, void* param3);
void q_vboxlayout_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_vboxlayout_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_vboxlayout_tr(const char* s);
const char* q_vboxlayout_tr2(const char* s, const char* c);
const char* q_vboxlayout_tr3(const char* s, const char* c, int n);
int64_t q_vboxlayout_direction(void* self);
void q_vboxlayout_set_direction(void* self, int64_t direction);
void q_vboxlayout_add_spacing(void* self, int size);
void q_vboxlayout_add_stretch(void* self);
void q_vboxlayout_add_spacer_item(void* self, void* spacerItem);
void q_vboxlayout_add_widget(void* self, void* param1);
void q_vboxlayout_add_layout(void* self, void* layout);
void q_vboxlayout_add_strut(void* self, int param1);
void q_vboxlayout_insert_spacing(void* self, int index, int size);
void q_vboxlayout_insert_stretch(void* self, int index);
void q_vboxlayout_insert_spacer_item(void* self, int index, void* spacerItem);
void q_vboxlayout_insert_widget(void* self, int index, void* widget);
void q_vboxlayout_insert_layout(void* self, int index, void* layout);
void q_vboxlayout_insert_item(void* self, int index, void* param2);
bool q_vboxlayout_set_stretch_factor(void* self, void* w, int stretch);
bool q_vboxlayout_set_stretch_factor2(void* self, void* l, int stretch);
void q_vboxlayout_set_stretch(void* self, int index, int stretch);
int32_t q_vboxlayout_stretch(void* self, int index);
void q_vboxlayout_add_stretch1(void* self, int stretch);
void q_vboxlayout_add_widget2(void* self, void* param1, int stretch);
void q_vboxlayout_add_widget3(void* self, void* param1, int stretch, int64_t alignment);
void q_vboxlayout_add_layout2(void* self, void* layout, int stretch);
void q_vboxlayout_insert_stretch2(void* self, int index, int stretch);
void q_vboxlayout_insert_widget3(void* self, int index, void* widget, int stretch);
void q_vboxlayout_insert_widget4(void* self, int index, void* widget, int stretch, int64_t alignment);
void q_vboxlayout_insert_layout3(void* self, int index, void* layout, int stretch);
void q_vboxlayout_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_vboxlayout_set_contents_margins_with_margins(void* self, void* margins);
void q_vboxlayout_unset_contents_margins(void* self);
void q_vboxlayout_get_contents_margins(void* self, int* left, int* top, int* right, int* bottom);
QMargins* q_vboxlayout_contents_margins(void* self);
QRect* q_vboxlayout_contents_rect(void* self);
bool q_vboxlayout_set_alignment(void* self, void* w, int64_t alignment);
bool q_vboxlayout_set_alignment2(void* self, void* l, int64_t alignment);
void q_vboxlayout_set_size_constraint(void* self, int64_t sizeConstraint);
int64_t q_vboxlayout_size_constraint(void* self);
void q_vboxlayout_set_menu_bar(void* self, void* w);
QWidget* q_vboxlayout_menu_bar(void* self);
QWidget* q_vboxlayout_parent_widget(void* self);
bool q_vboxlayout_activate(void* self);
void q_vboxlayout_update(void* self);
void q_vboxlayout_remove_widget(void* self, void* w);
void q_vboxlayout_remove_item(void* self, void* param1);
int32_t q_vboxlayout_index_of_with_q_layout_item(void* self, void* param1);
void q_vboxlayout_on_index_of_with_q_layout_item(void* self, int32_t (*slot)(void*, void*));
int32_t q_vboxlayout_qbase_index_of_with_q_layout_item(void* self, void* param1);
int32_t q_vboxlayout_total_minimum_height_for_width(void* self, int w);
int32_t q_vboxlayout_total_height_for_width(void* self, int w);
QSize* q_vboxlayout_total_minimum_size(void* self);
QSize* q_vboxlayout_total_maximum_size(void* self);
QSize* q_vboxlayout_total_size_hint(void* self);
void q_vboxlayout_set_enabled(void* self, bool enabled);
bool q_vboxlayout_is_enabled(void* self);
QSize* q_vboxlayout_closest_acceptable_size(void* w, void* s);
const char* q_vboxlayout_object_name(void* self);
void q_vboxlayout_set_object_name(void* self, const char* name);
bool q_vboxlayout_is_widget_type(void* self);
bool q_vboxlayout_is_window_type(void* self);
bool q_vboxlayout_is_quick_item_type(void* self);
bool q_vboxlayout_signals_blocked(void* self);
bool q_vboxlayout_block_signals(void* self, bool b);
QThread* q_vboxlayout_thread(void* self);
void q_vboxlayout_move_to_thread(void* self, void* thread);
int32_t q_vboxlayout_start_timer(void* self, int interval);
void q_vboxlayout_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_vboxlayout_children(void* self);
void q_vboxlayout_set_parent(void* self, void* parent);
void q_vboxlayout_install_event_filter(void* self, void* filterObj);
void q_vboxlayout_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_vboxlayout_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_vboxlayout_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_vboxlayout_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_vboxlayout_disconnect_with_q_meta_object_connection(void* param1);
void q_vboxlayout_dump_object_tree(void* self);
void q_vboxlayout_dump_object_info(void* self);
bool q_vboxlayout_set_property(void* self, const char* name, void* value);
QVariant* q_vboxlayout_property(void* self, const char* name);
const char** q_vboxlayout_dynamic_property_names(void* self);
QBindingStorage* q_vboxlayout_binding_storage(void* self);
QBindingStorage* q_vboxlayout_binding_storage2(void* self);
void q_vboxlayout_destroyed(void* self);
void q_vboxlayout_on_destroyed(void* self, void (*slot)(void*));
QObject* q_vboxlayout_parent(void* self);
bool q_vboxlayout_inherits(void* self, const char* classname);
void q_vboxlayout_delete_later(void* self);
int32_t q_vboxlayout_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_vboxlayout_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_vboxlayout_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_vboxlayout_destroyed1(void* self, void* param1);
void q_vboxlayout_on_destroyed1(void* self, void (*slot)(void*, void*));
int64_t q_vboxlayout_alignment(void* self);
void q_vboxlayout_add_item(void* self, void* param1);
void q_vboxlayout_qbase_add_item(void* self, void* param1);
void q_vboxlayout_on_add_item(void* self, void (*slot)(void*, void*));
int32_t q_vboxlayout_spacing(void* self);
int32_t q_vboxlayout_qbase_spacing(void* self);
void q_vboxlayout_on_spacing(void* self, int32_t (*slot)());
void q_vboxlayout_set_spacing(void* self, int spacing);
void q_vboxlayout_qbase_set_spacing(void* self, int spacing);
void q_vboxlayout_on_set_spacing(void* self, void (*slot)(void*, int));
QSize* q_vboxlayout_size_hint(void* self);
QSize* q_vboxlayout_qbase_size_hint(void* self);
void q_vboxlayout_on_size_hint(void* self, QSize* (*slot)());
QSize* q_vboxlayout_minimum_size(void* self);
QSize* q_vboxlayout_qbase_minimum_size(void* self);
void q_vboxlayout_on_minimum_size(void* self, QSize* (*slot)());
QSize* q_vboxlayout_maximum_size(void* self);
QSize* q_vboxlayout_qbase_maximum_size(void* self);
void q_vboxlayout_on_maximum_size(void* self, QSize* (*slot)());
bool q_vboxlayout_has_height_for_width(void* self);
bool q_vboxlayout_qbase_has_height_for_width(void* self);
void q_vboxlayout_on_has_height_for_width(void* self, bool (*slot)());
int32_t q_vboxlayout_height_for_width(void* self, int param1);
int32_t q_vboxlayout_qbase_height_for_width(void* self, int param1);
void q_vboxlayout_on_height_for_width(void* self, int32_t (*slot)(void*, int));
int32_t q_vboxlayout_minimum_height_for_width(void* self, int param1);
int32_t q_vboxlayout_qbase_minimum_height_for_width(void* self, int param1);
void q_vboxlayout_on_minimum_height_for_width(void* self, int32_t (*slot)(void*, int));
int64_t q_vboxlayout_expanding_directions(void* self);
int64_t q_vboxlayout_qbase_expanding_directions(void* self);
void q_vboxlayout_on_expanding_directions(void* self, int64_t (*slot)());
void q_vboxlayout_invalidate(void* self);
void q_vboxlayout_qbase_invalidate(void* self);
void q_vboxlayout_on_invalidate(void* self, void (*slot)());
QLayoutItem* q_vboxlayout_item_at(void* self, int param1);
QLayoutItem* q_vboxlayout_qbase_item_at(void* self, int param1);
void q_vboxlayout_on_item_at(void* self, QLayoutItem* (*slot)(void*, int));
QLayoutItem* q_vboxlayout_take_at(void* self, int param1);
QLayoutItem* q_vboxlayout_qbase_take_at(void* self, int param1);
void q_vboxlayout_on_take_at(void* self, QLayoutItem* (*slot)(void*, int));
int32_t q_vboxlayout_count(void* self);
int32_t q_vboxlayout_qbase_count(void* self);
void q_vboxlayout_on_count(void* self, int32_t (*slot)());
void q_vboxlayout_set_geometry(void* self, void* geometry);
void q_vboxlayout_qbase_set_geometry(void* self, void* geometry);
void q_vboxlayout_on_set_geometry(void* self, void (*slot)(void*, void*));
QRect* q_vboxlayout_geometry(void* self);
QRect* q_vboxlayout_qbase_geometry(void* self);
void q_vboxlayout_on_geometry(void* self, QRect* (*slot)());
int32_t q_vboxlayout_index_of(void* self, void* param1);
int32_t q_vboxlayout_qbase_index_of(void* self, void* param1);
void q_vboxlayout_on_index_of(void* self, int32_t (*slot)(void*, void*));
bool q_vboxlayout_is_empty(void* self);
bool q_vboxlayout_qbase_is_empty(void* self);
void q_vboxlayout_on_is_empty(void* self, bool (*slot)());
int64_t q_vboxlayout_control_types(void* self);
int64_t q_vboxlayout_qbase_control_types(void* self);
void q_vboxlayout_on_control_types(void* self, int64_t (*slot)());
QLayoutItem* q_vboxlayout_replace_widget(void* self, void* from, void* to, int64_t options);
QLayoutItem* q_vboxlayout_qbase_replace_widget(void* self, void* from, void* to, int64_t options);
void q_vboxlayout_on_replace_widget(void* self, QLayoutItem* (*slot)(void*, void*, void*, int64_t));
QLayout* q_vboxlayout_layout(void* self);
QLayout* q_vboxlayout_qbase_layout(void* self);
void q_vboxlayout_on_layout(void* self, QLayout* (*slot)());
void q_vboxlayout_child_event(void* self, void* e);
void q_vboxlayout_qbase_child_event(void* self, void* e);
void q_vboxlayout_on_child_event(void* self, void (*slot)(void*, void*));
bool q_vboxlayout_event(void* self, void* event);
bool q_vboxlayout_qbase_event(void* self, void* event);
void q_vboxlayout_on_event(void* self, bool (*slot)(void*, void*));
bool q_vboxlayout_event_filter(void* self, void* watched, void* event);
bool q_vboxlayout_qbase_event_filter(void* self, void* watched, void* event);
void q_vboxlayout_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_vboxlayout_timer_event(void* self, void* event);
void q_vboxlayout_qbase_timer_event(void* self, void* event);
void q_vboxlayout_on_timer_event(void* self, void (*slot)(void*, void*));
void q_vboxlayout_custom_event(void* self, void* event);
void q_vboxlayout_qbase_custom_event(void* self, void* event);
void q_vboxlayout_on_custom_event(void* self, void (*slot)(void*, void*));
void q_vboxlayout_connect_notify(void* self, void* signal);
void q_vboxlayout_qbase_connect_notify(void* self, void* signal);
void q_vboxlayout_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_vboxlayout_disconnect_notify(void* self, void* signal);
void q_vboxlayout_qbase_disconnect_notify(void* self, void* signal);
void q_vboxlayout_on_disconnect_notify(void* self, void (*slot)(void*, void*));
QWidget* q_vboxlayout_widget(void* self);
QWidget* q_vboxlayout_qbase_widget(void* self);
void q_vboxlayout_on_widget(void* self, QWidget* (*slot)());
QSpacerItem* q_vboxlayout_spacer_item(void* self);
QSpacerItem* q_vboxlayout_qbase_spacer_item(void* self);
void q_vboxlayout_on_spacer_item(void* self, QSpacerItem* (*slot)());
void q_vboxlayout_widget_event(void* self, void* param1);
void q_vboxlayout_qbase_widget_event(void* self, void* param1);
void q_vboxlayout_on_widget_event(void* self, void (*slot)(void*, void*));
void q_vboxlayout_add_child_layout(void* self, void* l);
void q_vboxlayout_qbase_add_child_layout(void* self, void* l);
void q_vboxlayout_on_add_child_layout(void* self, void (*slot)(void*, void*));
void q_vboxlayout_add_child_widget(void* self, void* w);
void q_vboxlayout_qbase_add_child_widget(void* self, void* w);
void q_vboxlayout_on_add_child_widget(void* self, void (*slot)(void*, void*));
bool q_vboxlayout_adopt_layout(void* self, void* layout);
bool q_vboxlayout_qbase_adopt_layout(void* self, void* layout);
void q_vboxlayout_on_adopt_layout(void* self, bool (*slot)(void*, void*));
QRect* q_vboxlayout_alignment_rect(void* self, void* param1);
QRect* q_vboxlayout_qbase_alignment_rect(void* self, void* param1);
void q_vboxlayout_on_alignment_rect(void* self, QRect* (*slot)(void*, void*));
QObject* q_vboxlayout_sender(void* self);
QObject* q_vboxlayout_qbase_sender(void* self);
void q_vboxlayout_on_sender(void* self, QObject* (*slot)());
int32_t q_vboxlayout_sender_signal_index(void* self);
int32_t q_vboxlayout_qbase_sender_signal_index(void* self);
void q_vboxlayout_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_vboxlayout_receivers(void* self, const char* signal);
int32_t q_vboxlayout_qbase_receivers(void* self, const char* signal);
void q_vboxlayout_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_vboxlayout_is_signal_connected(void* self, void* signal);
bool q_vboxlayout_qbase_is_signal_connected(void* self, void* signal);
void q_vboxlayout_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_vboxlayout_delete(void* self);

/// https://doc.qt.io/qt-6/qboxlayout.html#types

typedef enum {
    QBOXLAYOUT_DIRECTION_LEFTTORIGHT = 0,
    QBOXLAYOUT_DIRECTION_RIGHTTOLEFT = 1,
    QBOXLAYOUT_DIRECTION_TOPTOBOTTOM = 2,
    QBOXLAYOUT_DIRECTION_BOTTOMTOTOP = 3,
    QBOXLAYOUT_DIRECTION_DOWN = 2,
    QBOXLAYOUT_DIRECTION_UP = 3
} QBoxLayout__Direction;

#endif
