#pragma once
#ifndef SRCQT6C_LIBQWIZARD_H
#define SRCQT6C_LIBQWIZARD_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqabstractbutton.h"
#include "libqaction.h"
#include "libqevent.h"
#include "libqanystringview.h"
#include "libqbackingstore.h"
#include "libqbindingstorage.h"
#include "libqbitmap.h"
#include "libqcursor.h"
#include "libqdialog.h"
#include "libqfont.h"
#include "libqfontinfo.h"
#include "libqfontmetrics.h"
#include "libqgraphicseffect.h"
#include "libqgraphicsproxywidget.h"
#include "libqicon.h"
#include "libqkeysequence.h"
#include "libqlayout.h"
#include "libqlocale.h"
#include "libqmargins.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include "libqpaintdevice.h"
#include "libqpaintengine.h"
#include "libqpainter.h"
#include "libqpalette.h"
#include "libqpixmap.h"
#include "libqpoint.h"
#include "libqrect.h"
#include "libqregion.h"
#include "libqscreen.h"
#include "libqsize.h"
#include "libqsizepolicy.h"
#include <string.h>
#include "libqstyle.h"
#include "libqthread.h"
#include "libqvariant.h"
#include "libqwidget.h"
#include "libqwindow.h"

QWizard* q_wizard_new(void* parent);
QWizard* q_wizard_new2();
QWizard* q_wizard_new3(void* parent, int64_t flags);
QMetaObject* q_wizard_meta_object(void* self);
void* q_wizard_metacast(void* self, const char* param1);
int32_t q_wizard_metacall(void* self, int64_t param1, int param2, void* param3);
void q_wizard_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_wizard_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_wizard_tr(const char* s);
int32_t q_wizard_add_page(void* self, void* page);
void q_wizard_set_page(void* self, int id, void* page);
void q_wizard_remove_page(void* self, int id);
QWizardPage* q_wizard_page(void* self, int id);
bool q_wizard_has_visited_page(void* self, int id);
libqt_list /* of int */ q_wizard_visited_ids(void* self);
libqt_list /* of int */ q_wizard_page_ids(void* self);
void q_wizard_set_start_id(void* self, int id);
int32_t q_wizard_start_id(void* self);
QWizardPage* q_wizard_current_page(void* self);
int32_t q_wizard_current_id(void* self);
bool q_wizard_validate_current_page(void* self);
void q_wizard_on_validate_current_page(void* self, bool (*slot)());
bool q_wizard_qbase_validate_current_page(void* self);
int32_t q_wizard_next_id(void* self);
void q_wizard_on_next_id(void* self, int32_t (*slot)());
int32_t q_wizard_qbase_next_id(void* self);
void q_wizard_set_field(void* self, const char* name, void* value);
QVariant* q_wizard_field(void* self, const char* name);
void q_wizard_set_wizard_style(void* self, int64_t style);
int64_t q_wizard_wizard_style(void* self);
void q_wizard_set_option(void* self, int64_t option);
bool q_wizard_test_option(void* self, int64_t option);
void q_wizard_set_options(void* self, int64_t options);
int64_t q_wizard_options(void* self);
void q_wizard_set_button_text(void* self, int64_t which, const char* text);
const char* q_wizard_button_text(void* self, int64_t which);
void q_wizard_set_button_layout(void* self, int* layout[]);
void q_wizard_set_button(void* self, int64_t which, void* button);
QAbstractButton* q_wizard_button(void* self, int64_t which);
void q_wizard_set_title_format(void* self, int64_t format);
int64_t q_wizard_title_format(void* self);
void q_wizard_set_sub_title_format(void* self, int64_t format);
int64_t q_wizard_sub_title_format(void* self);
void q_wizard_set_pixmap(void* self, int64_t which, void* pixmap);
QPixmap* q_wizard_pixmap(void* self, int64_t which);
void q_wizard_set_side_widget(void* self, void* widget);
QWidget* q_wizard_side_widget(void* self);
void q_wizard_set_default_property(void* self, const char* className, const char* property, const char* changedSignal);
void q_wizard_set_visible(void* self, bool visible);
void q_wizard_on_set_visible(void* self, void (*slot)(void*, bool));
void q_wizard_qbase_set_visible(void* self, bool visible);
QSize* q_wizard_size_hint(void* self);
void q_wizard_on_size_hint(void* self, QSize* (*slot)());
QSize* q_wizard_qbase_size_hint(void* self);
void q_wizard_current_id_changed(void* self, int id);
void q_wizard_on_current_id_changed(void* self, void (*slot)(void*, int));
void q_wizard_help_requested(void* self);
void q_wizard_on_help_requested(void* self, void (*slot)(void*));
void q_wizard_custom_button_clicked(void* self, int which);
void q_wizard_on_custom_button_clicked(void* self, void (*slot)(void*, int));
void q_wizard_page_added(void* self, int id);
void q_wizard_on_page_added(void* self, void (*slot)(void*, int));
void q_wizard_page_removed(void* self, int id);
void q_wizard_on_page_removed(void* self, void (*slot)(void*, int));
void q_wizard_back(void* self);
void q_wizard_next(void* self);
void q_wizard_set_current_id(void* self, int id);
void q_wizard_restart(void* self);
bool q_wizard_event(void* self, void* event);
void q_wizard_on_event(void* self, bool (*slot)(void*, void*));
bool q_wizard_qbase_event(void* self, void* event);
void q_wizard_resize_event(void* self, void* event);
void q_wizard_on_resize_event(void* self, void (*slot)(void*, void*));
void q_wizard_qbase_resize_event(void* self, void* event);
void q_wizard_paint_event(void* self, void* event);
void q_wizard_on_paint_event(void* self, void (*slot)(void*, void*));
void q_wizard_qbase_paint_event(void* self, void* event);
void q_wizard_done(void* self, int result);
void q_wizard_on_done(void* self, void (*slot)(void*, int));
void q_wizard_qbase_done(void* self, int result);
void q_wizard_initialize_page(void* self, int id);
void q_wizard_on_initialize_page(void* self, void (*slot)(void*, int));
void q_wizard_qbase_initialize_page(void* self, int id);
void q_wizard_cleanup_page(void* self, int id);
void q_wizard_on_cleanup_page(void* self, void (*slot)(void*, int));
void q_wizard_qbase_cleanup_page(void* self, int id);
const char* q_wizard_tr2(const char* s, const char* c);
const char* q_wizard_tr3(const char* s, const char* c, int n);
void q_wizard_set_option2(void* self, int64_t option, bool on);
int32_t q_wizard_result(void* self);
void q_wizard_set_size_grip_enabled(void* self, bool sizeGripEnabled);
bool q_wizard_is_size_grip_enabled(void* self);
void q_wizard_set_modal(void* self, bool modal);
void q_wizard_set_result(void* self, int r);
void q_wizard_finished(void* self, int result);
void q_wizard_on_finished(void* self, void (*slot)(void*, int));
void q_wizard_accepted(void* self);
void q_wizard_on_accepted(void* self, void (*slot)(void*));
void q_wizard_rejected(void* self);
void q_wizard_on_rejected(void* self, void (*slot)(void*));
uintptr_t q_wizard_win_id(void* self);
void q_wizard_create_win_id(void* self);
uintptr_t q_wizard_internal_win_id(void* self);
uintptr_t q_wizard_effective_win_id(void* self);
QStyle* q_wizard_style(void* self);
void q_wizard_set_style(void* self, void* style);
bool q_wizard_is_top_level(void* self);
bool q_wizard_is_window(void* self);
bool q_wizard_is_modal(void* self);
int64_t q_wizard_window_modality(void* self);
void q_wizard_set_window_modality(void* self, int64_t windowModality);
bool q_wizard_is_enabled(void* self);
bool q_wizard_is_enabled_to(void* self, void* param1);
void q_wizard_set_enabled(void* self, bool enabled);
void q_wizard_set_disabled(void* self, bool disabled);
void q_wizard_set_window_modified(void* self, bool windowModified);
QRect* q_wizard_frame_geometry(void* self);
QRect* q_wizard_geometry(void* self);
QRect* q_wizard_normal_geometry(void* self);
int32_t q_wizard_x(void* self);
int32_t q_wizard_y(void* self);
QPoint* q_wizard_pos(void* self);
QSize* q_wizard_frame_size(void* self);
QSize* q_wizard_size(void* self);
int32_t q_wizard_width(void* self);
int32_t q_wizard_height(void* self);
QRect* q_wizard_rect(void* self);
QRect* q_wizard_children_rect(void* self);
QRegion* q_wizard_children_region(void* self);
QSize* q_wizard_minimum_size(void* self);
QSize* q_wizard_maximum_size(void* self);
int32_t q_wizard_minimum_width(void* self);
int32_t q_wizard_minimum_height(void* self);
int32_t q_wizard_maximum_width(void* self);
int32_t q_wizard_maximum_height(void* self);
void q_wizard_set_minimum_size(void* self, void* minimumSize);
void q_wizard_set_minimum_size2(void* self, int minw, int minh);
void q_wizard_set_maximum_size(void* self, void* maximumSize);
void q_wizard_set_maximum_size2(void* self, int maxw, int maxh);
void q_wizard_set_minimum_width(void* self, int minw);
void q_wizard_set_minimum_height(void* self, int minh);
void q_wizard_set_maximum_width(void* self, int maxw);
void q_wizard_set_maximum_height(void* self, int maxh);
QSize* q_wizard_size_increment(void* self);
void q_wizard_set_size_increment(void* self, void* sizeIncrement);
void q_wizard_set_size_increment2(void* self, int w, int h);
QSize* q_wizard_base_size(void* self);
void q_wizard_set_base_size(void* self, void* baseSize);
void q_wizard_set_base_size2(void* self, int basew, int baseh);
void q_wizard_set_fixed_size(void* self, void* fixedSize);
void q_wizard_set_fixed_size2(void* self, int w, int h);
void q_wizard_set_fixed_width(void* self, int w);
void q_wizard_set_fixed_height(void* self, int h);
QPointF* q_wizard_map_to_global(void* self, void* param1);
QPoint* q_wizard_map_to_global_with_q_point(void* self, void* param1);
QPointF* q_wizard_map_from_global(void* self, void* param1);
QPoint* q_wizard_map_from_global_with_q_point(void* self, void* param1);
QPointF* q_wizard_map_to_parent(void* self, void* param1);
QPoint* q_wizard_map_to_parent_with_q_point(void* self, void* param1);
QPointF* q_wizard_map_from_parent(void* self, void* param1);
QPoint* q_wizard_map_from_parent_with_q_point(void* self, void* param1);
QPointF* q_wizard_map_to(void* self, void* param1, void* param2);
QPoint* q_wizard_map_to2(void* self, void* param1, void* param2);
QPointF* q_wizard_map_from(void* self, void* param1, void* param2);
QPoint* q_wizard_map_from2(void* self, void* param1, void* param2);
QWidget* q_wizard_window(void* self);
QWidget* q_wizard_native_parent_widget(void* self);
QWidget* q_wizard_top_level_widget(void* self);
QPalette* q_wizard_palette(void* self);
void q_wizard_set_palette(void* self, void* palette);
void q_wizard_set_background_role(void* self, int64_t backgroundRole);
int64_t q_wizard_background_role(void* self);
void q_wizard_set_foreground_role(void* self, int64_t foregroundRole);
int64_t q_wizard_foreground_role(void* self);
QFont* q_wizard_font(void* self);
void q_wizard_set_font(void* self, void* font);
QFontMetrics* q_wizard_font_metrics(void* self);
QFontInfo* q_wizard_font_info(void* self);
QCursor* q_wizard_cursor(void* self);
void q_wizard_set_cursor(void* self, void* cursor);
void q_wizard_unset_cursor(void* self);
void q_wizard_set_mouse_tracking(void* self, bool enable);
bool q_wizard_has_mouse_tracking(void* self);
bool q_wizard_under_mouse(void* self);
void q_wizard_set_tablet_tracking(void* self, bool enable);
bool q_wizard_has_tablet_tracking(void* self);
void q_wizard_set_mask(void* self, void* mask);
void q_wizard_set_mask_with_mask(void* self, void* mask);
QRegion* q_wizard_mask(void* self);
void q_wizard_clear_mask(void* self);
void q_wizard_render(void* self, void* target);
void q_wizard_render_with_painter(void* self, void* painter);
QPixmap* q_wizard_grab(void* self);
QGraphicsEffect* q_wizard_graphics_effect(void* self);
void q_wizard_set_graphics_effect(void* self, void* effect);
void q_wizard_grab_gesture(void* self, int64_t typeVal);
void q_wizard_ungrab_gesture(void* self, int64_t typeVal);
void q_wizard_set_window_title(void* self, const char* windowTitle);
void q_wizard_set_style_sheet(void* self, const char* styleSheet);
const char* q_wizard_style_sheet(void* self);
const char* q_wizard_window_title(void* self);
void q_wizard_set_window_icon(void* self, void* icon);
QIcon* q_wizard_window_icon(void* self);
void q_wizard_set_window_icon_text(void* self, const char* windowIconText);
const char* q_wizard_window_icon_text(void* self);
void q_wizard_set_window_role(void* self, const char* windowRole);
const char* q_wizard_window_role(void* self);
void q_wizard_set_window_file_path(void* self, const char* filePath);
const char* q_wizard_window_file_path(void* self);
void q_wizard_set_window_opacity(void* self, double level);
double q_wizard_window_opacity(void* self);
bool q_wizard_is_window_modified(void* self);
void q_wizard_set_tool_tip(void* self, const char* toolTip);
const char* q_wizard_tool_tip(void* self);
void q_wizard_set_tool_tip_duration(void* self, int msec);
int32_t q_wizard_tool_tip_duration(void* self);
void q_wizard_set_status_tip(void* self, const char* statusTip);
const char* q_wizard_status_tip(void* self);
void q_wizard_set_whats_this(void* self, const char* whatsThis);
const char* q_wizard_whats_this(void* self);
const char* q_wizard_accessible_name(void* self);
void q_wizard_set_accessible_name(void* self, const char* name);
const char* q_wizard_accessible_description(void* self);
void q_wizard_set_accessible_description(void* self, const char* description);
void q_wizard_set_layout_direction(void* self, int64_t direction);
int64_t q_wizard_layout_direction(void* self);
void q_wizard_unset_layout_direction(void* self);
void q_wizard_set_locale(void* self, void* locale);
QLocale* q_wizard_locale(void* self);
void q_wizard_unset_locale(void* self);
bool q_wizard_is_right_to_left(void* self);
bool q_wizard_is_left_to_right(void* self);
void q_wizard_set_focus(void* self);
bool q_wizard_is_active_window(void* self);
void q_wizard_activate_window(void* self);
void q_wizard_clear_focus(void* self);
void q_wizard_set_focus_with_reason(void* self, int64_t reason);
int64_t q_wizard_focus_policy(void* self);
void q_wizard_set_focus_policy(void* self, int64_t policy);
bool q_wizard_has_focus(void* self);
void q_wizard_set_tab_order(void* param1, void* param2);
void q_wizard_set_focus_proxy(void* self, void* focusProxy);
QWidget* q_wizard_focus_proxy(void* self);
int64_t q_wizard_context_menu_policy(void* self);
void q_wizard_set_context_menu_policy(void* self, int64_t policy);
void q_wizard_grab_mouse(void* self);
void q_wizard_grab_mouse_with_q_cursor(void* self, void* param1);
void q_wizard_release_mouse(void* self);
void q_wizard_grab_keyboard(void* self);
void q_wizard_release_keyboard(void* self);
int32_t q_wizard_grab_shortcut(void* self, void* key);
void q_wizard_release_shortcut(void* self, int id);
void q_wizard_set_shortcut_enabled(void* self, int id);
void q_wizard_set_shortcut_auto_repeat(void* self, int id);
QWidget* q_wizard_mouse_grabber();
QWidget* q_wizard_keyboard_grabber();
bool q_wizard_updates_enabled(void* self);
void q_wizard_set_updates_enabled(void* self, bool enable);
QGraphicsProxyWidget* q_wizard_graphics_proxy_widget(void* self);
void q_wizard_update(void* self);
void q_wizard_repaint(void* self);
void q_wizard_update2(void* self, int x, int y, int w, int h);
void q_wizard_update_with_q_rect(void* self, void* param1);
void q_wizard_update_with_q_region(void* self, void* param1);
void q_wizard_repaint2(void* self, int x, int y, int w, int h);
void q_wizard_repaint_with_q_rect(void* self, void* param1);
void q_wizard_repaint_with_q_region(void* self, void* param1);
void q_wizard_set_hidden(void* self, bool hidden);
void q_wizard_show(void* self);
void q_wizard_hide(void* self);
void q_wizard_show_minimized(void* self);
void q_wizard_show_maximized(void* self);
void q_wizard_show_full_screen(void* self);
void q_wizard_show_normal(void* self);
bool q_wizard_close(void* self);
void q_wizard_raise(void* self);
void q_wizard_lower(void* self);
void q_wizard_stack_under(void* self, void* param1);
void q_wizard_move(void* self, int x, int y);
void q_wizard_move_with_q_point(void* self, void* param1);
void q_wizard_resize(void* self, int w, int h);
void q_wizard_resize_with_q_size(void* self, void* param1);
void q_wizard_set_geometry(void* self, int x, int y, int w, int h);
void q_wizard_set_geometry_with_geometry(void* self, void* geometry);
char* q_wizard_save_geometry(void* self);
bool q_wizard_restore_geometry(void* self, const char* geometry);
void q_wizard_adjust_size(void* self);
bool q_wizard_is_visible(void* self);
bool q_wizard_is_visible_to(void* self, void* param1);
bool q_wizard_is_hidden(void* self);
bool q_wizard_is_minimized(void* self);
bool q_wizard_is_maximized(void* self);
bool q_wizard_is_full_screen(void* self);
int64_t q_wizard_window_state(void* self);
void q_wizard_set_window_state(void* self, int64_t state);
void q_wizard_override_window_state(void* self, int64_t state);
QSizePolicy* q_wizard_size_policy(void* self);
void q_wizard_set_size_policy(void* self, void* sizePolicy);
void q_wizard_set_size_policy2(void* self, int64_t horizontal, int64_t vertical);
QRegion* q_wizard_visible_region(void* self);
void q_wizard_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_wizard_set_contents_margins_with_margins(void* self, void* margins);
QMargins* q_wizard_contents_margins(void* self);
QRect* q_wizard_contents_rect(void* self);
QLayout* q_wizard_layout(void* self);
void q_wizard_set_layout(void* self, void* layout);
void q_wizard_update_geometry(void* self);
void q_wizard_set_parent(void* self, void* parent);
void q_wizard_set_parent2(void* self, void* parent, int64_t f);
void q_wizard_scroll(void* self, int dx, int dy);
void q_wizard_scroll2(void* self, int dx, int dy, void* param3);
QWidget* q_wizard_focus_widget(void* self);
QWidget* q_wizard_next_in_focus_chain(void* self);
QWidget* q_wizard_previous_in_focus_chain(void* self);
bool q_wizard_accept_drops(void* self);
void q_wizard_set_accept_drops(void* self, bool on);
void q_wizard_add_action(void* self, void* action);
void q_wizard_add_actions(void* self, void* actions[]);
void q_wizard_insert_actions(void* self, void* before, void* actions[]);
void q_wizard_insert_action(void* self, void* before, void* action);
void q_wizard_remove_action(void* self, void* action);
libqt_list /* of QAction* */ q_wizard_actions(void* self);
QAction* q_wizard_add_action_with_text(void* self, const char* text);
QAction* q_wizard_add_action2(void* self, void* icon, const char* text);
QAction* q_wizard_add_action3(void* self, const char* text, void* shortcut);
QAction* q_wizard_add_action4(void* self, void* icon, const char* text, void* shortcut);
QWidget* q_wizard_parent_widget(void* self);
void q_wizard_set_window_flags(void* self, int64_t typeVal);
int64_t q_wizard_window_flags(void* self);
void q_wizard_set_window_flag(void* self, int64_t param1);
void q_wizard_override_window_flags(void* self, int64_t typeVal);
int64_t q_wizard_window_type(void* self);
QWidget* q_wizard_find(uint64_t param1);
QWidget* q_wizard_child_at(void* self, int x, int y);
QWidget* q_wizard_child_at_with_q_point(void* self, void* p);
void q_wizard_set_attribute(void* self, int64_t param1);
bool q_wizard_test_attribute(void* self, int64_t param1);
void q_wizard_ensure_polished(void* self);
bool q_wizard_is_ancestor_of(void* self, void* child);
bool q_wizard_auto_fill_background(void* self);
void q_wizard_set_auto_fill_background(void* self, bool enabled);
QBackingStore* q_wizard_backing_store(void* self);
QWindow* q_wizard_window_handle(void* self);
QScreen* q_wizard_screen(void* self);
void q_wizard_set_screen(void* self, void* screen);
QWidget* q_wizard_create_window_container(void* window);
void q_wizard_window_title_changed(void* self, const char* title);
void q_wizard_on_window_title_changed(void* self, void (*slot)(void*, const char*));
void q_wizard_window_icon_changed(void* self, void* icon);
void q_wizard_on_window_icon_changed(void* self, void (*slot)(void*, void*));
void q_wizard_window_icon_text_changed(void* self, const char* iconText);
void q_wizard_on_window_icon_text_changed(void* self, void (*slot)(void*, const char*));
void q_wizard_custom_context_menu_requested(void* self, void* pos);
void q_wizard_on_custom_context_menu_requested(void* self, void (*slot)(void*, void*));
int64_t q_wizard_input_method_hints(void* self);
void q_wizard_set_input_method_hints(void* self, int64_t hints);
void q_wizard_render2(void* self, void* target, void* targetOffset);
void q_wizard_render3(void* self, void* target, void* targetOffset, void* sourceRegion);
void q_wizard_render4(void* self, void* target, void* targetOffset, void* sourceRegion, int64_t renderFlags);
void q_wizard_render22(void* self, void* painter, void* targetOffset);
void q_wizard_render32(void* self, void* painter, void* targetOffset, void* sourceRegion);
void q_wizard_render42(void* self, void* painter, void* targetOffset, void* sourceRegion, int64_t renderFlags);
QPixmap* q_wizard_grab1(void* self, void* rectangle);
void q_wizard_grab_gesture2(void* self, int64_t typeVal, int64_t flags);
int32_t q_wizard_grab_shortcut2(void* self, void* key, int64_t context);
void q_wizard_set_shortcut_enabled2(void* self, int id, bool enable);
void q_wizard_set_shortcut_auto_repeat2(void* self, int id, bool enable);
void q_wizard_set_window_flag2(void* self, int64_t param1, bool on);
void q_wizard_set_attribute2(void* self, int64_t param1, bool on);
QWidget* q_wizard_create_window_container2(void* window, void* parent);
QWidget* q_wizard_create_window_container3(void* window, void* parent, int64_t flags);
const char* q_wizard_object_name(void* self);
void q_wizard_set_object_name(void* self, const char* name);
bool q_wizard_is_widget_type(void* self);
bool q_wizard_is_window_type(void* self);
bool q_wizard_is_quick_item_type(void* self);
bool q_wizard_signals_blocked(void* self);
bool q_wizard_block_signals(void* self, bool b);
QThread* q_wizard_thread(void* self);
void q_wizard_move_to_thread(void* self, void* thread);
int32_t q_wizard_start_timer(void* self, int interval);
void q_wizard_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_wizard_children(void* self);
void q_wizard_install_event_filter(void* self, void* filterObj);
void q_wizard_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_wizard_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_wizard_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_wizard_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_wizard_disconnect_with_q_meta_object_connection(void* param1);
void q_wizard_dump_object_tree(void* self);
void q_wizard_dump_object_info(void* self);
bool q_wizard_set_property(void* self, const char* name, void* value);
QVariant* q_wizard_property(void* self, const char* name);
const char** q_wizard_dynamic_property_names(void* self);
QBindingStorage* q_wizard_binding_storage(void* self);
QBindingStorage* q_wizard_binding_storage2(void* self);
void q_wizard_destroyed(void* self);
void q_wizard_on_destroyed(void* self, void (*slot)(void*));
QObject* q_wizard_parent(void* self);
bool q_wizard_inherits(void* self, const char* classname);
void q_wizard_delete_later(void* self);
int32_t q_wizard_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_wizard_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_wizard_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_wizard_destroyed1(void* self, void* param1);
void q_wizard_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_wizard_painting_active(void* self);
int32_t q_wizard_width_m_m(void* self);
int32_t q_wizard_height_m_m(void* self);
int32_t q_wizard_logical_dpi_x(void* self);
int32_t q_wizard_logical_dpi_y(void* self);
int32_t q_wizard_physical_dpi_x(void* self);
int32_t q_wizard_physical_dpi_y(void* self);
double q_wizard_device_pixel_ratio(void* self);
double q_wizard_device_pixel_ratio_f(void* self);
int32_t q_wizard_color_count(void* self);
int32_t q_wizard_depth(void* self);
double q_wizard_device_pixel_ratio_f_scale();
QSize* q_wizard_minimum_size_hint(void* self);
QSize* q_wizard_qbase_minimum_size_hint(void* self);
void q_wizard_on_minimum_size_hint(void* self, QSize* (*slot)());
void q_wizard_open(void* self);
void q_wizard_qbase_open(void* self);
void q_wizard_on_open(void* self, void (*slot)());
int32_t q_wizard_exec(void* self);
int32_t q_wizard_qbase_exec(void* self);
void q_wizard_on_exec(void* self, int32_t (*slot)());
void q_wizard_accept(void* self);
void q_wizard_qbase_accept(void* self);
void q_wizard_on_accept(void* self, void (*slot)());
void q_wizard_reject(void* self);
void q_wizard_qbase_reject(void* self);
void q_wizard_on_reject(void* self, void (*slot)());
void q_wizard_key_press_event(void* self, void* param1);
void q_wizard_qbase_key_press_event(void* self, void* param1);
void q_wizard_on_key_press_event(void* self, void (*slot)(void*, void*));
void q_wizard_close_event(void* self, void* param1);
void q_wizard_qbase_close_event(void* self, void* param1);
void q_wizard_on_close_event(void* self, void (*slot)(void*, void*));
void q_wizard_show_event(void* self, void* param1);
void q_wizard_qbase_show_event(void* self, void* param1);
void q_wizard_on_show_event(void* self, void (*slot)(void*, void*));
void q_wizard_context_menu_event(void* self, void* param1);
void q_wizard_qbase_context_menu_event(void* self, void* param1);
void q_wizard_on_context_menu_event(void* self, void (*slot)(void*, void*));
bool q_wizard_event_filter(void* self, void* param1, void* param2);
bool q_wizard_qbase_event_filter(void* self, void* param1, void* param2);
void q_wizard_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
int32_t q_wizard_dev_type(void* self);
int32_t q_wizard_qbase_dev_type(void* self);
void q_wizard_on_dev_type(void* self, int32_t (*slot)());
int32_t q_wizard_height_for_width(void* self, int param1);
int32_t q_wizard_qbase_height_for_width(void* self, int param1);
void q_wizard_on_height_for_width(void* self, int32_t (*slot)(void*, int));
bool q_wizard_has_height_for_width(void* self);
bool q_wizard_qbase_has_height_for_width(void* self);
void q_wizard_on_has_height_for_width(void* self, bool (*slot)());
QPaintEngine* q_wizard_paint_engine(void* self);
QPaintEngine* q_wizard_qbase_paint_engine(void* self);
void q_wizard_on_paint_engine(void* self, QPaintEngine* (*slot)());
void q_wizard_mouse_press_event(void* self, void* event);
void q_wizard_qbase_mouse_press_event(void* self, void* event);
void q_wizard_on_mouse_press_event(void* self, void (*slot)(void*, void*));
void q_wizard_mouse_release_event(void* self, void* event);
void q_wizard_qbase_mouse_release_event(void* self, void* event);
void q_wizard_on_mouse_release_event(void* self, void (*slot)(void*, void*));
void q_wizard_mouse_double_click_event(void* self, void* event);
void q_wizard_qbase_mouse_double_click_event(void* self, void* event);
void q_wizard_on_mouse_double_click_event(void* self, void (*slot)(void*, void*));
void q_wizard_mouse_move_event(void* self, void* event);
void q_wizard_qbase_mouse_move_event(void* self, void* event);
void q_wizard_on_mouse_move_event(void* self, void (*slot)(void*, void*));
void q_wizard_wheel_event(void* self, void* event);
void q_wizard_qbase_wheel_event(void* self, void* event);
void q_wizard_on_wheel_event(void* self, void (*slot)(void*, void*));
void q_wizard_key_release_event(void* self, void* event);
void q_wizard_qbase_key_release_event(void* self, void* event);
void q_wizard_on_key_release_event(void* self, void (*slot)(void*, void*));
void q_wizard_focus_in_event(void* self, void* event);
void q_wizard_qbase_focus_in_event(void* self, void* event);
void q_wizard_on_focus_in_event(void* self, void (*slot)(void*, void*));
void q_wizard_focus_out_event(void* self, void* event);
void q_wizard_qbase_focus_out_event(void* self, void* event);
void q_wizard_on_focus_out_event(void* self, void (*slot)(void*, void*));
void q_wizard_enter_event(void* self, void* event);
void q_wizard_qbase_enter_event(void* self, void* event);
void q_wizard_on_enter_event(void* self, void (*slot)(void*, void*));
void q_wizard_leave_event(void* self, void* event);
void q_wizard_qbase_leave_event(void* self, void* event);
void q_wizard_on_leave_event(void* self, void (*slot)(void*, void*));
void q_wizard_move_event(void* self, void* event);
void q_wizard_qbase_move_event(void* self, void* event);
void q_wizard_on_move_event(void* self, void (*slot)(void*, void*));
void q_wizard_tablet_event(void* self, void* event);
void q_wizard_qbase_tablet_event(void* self, void* event);
void q_wizard_on_tablet_event(void* self, void (*slot)(void*, void*));
void q_wizard_action_event(void* self, void* event);
void q_wizard_qbase_action_event(void* self, void* event);
void q_wizard_on_action_event(void* self, void (*slot)(void*, void*));
void q_wizard_drag_enter_event(void* self, void* event);
void q_wizard_qbase_drag_enter_event(void* self, void* event);
void q_wizard_on_drag_enter_event(void* self, void (*slot)(void*, void*));
void q_wizard_drag_move_event(void* self, void* event);
void q_wizard_qbase_drag_move_event(void* self, void* event);
void q_wizard_on_drag_move_event(void* self, void (*slot)(void*, void*));
void q_wizard_drag_leave_event(void* self, void* event);
void q_wizard_qbase_drag_leave_event(void* self, void* event);
void q_wizard_on_drag_leave_event(void* self, void (*slot)(void*, void*));
void q_wizard_drop_event(void* self, void* event);
void q_wizard_qbase_drop_event(void* self, void* event);
void q_wizard_on_drop_event(void* self, void (*slot)(void*, void*));
void q_wizard_hide_event(void* self, void* event);
void q_wizard_qbase_hide_event(void* self, void* event);
void q_wizard_on_hide_event(void* self, void (*slot)(void*, void*));
bool q_wizard_native_event(void* self, const char* eventType, void* message, intptr_t* result);
bool q_wizard_qbase_native_event(void* self, const char* eventType, void* message, intptr_t* result);
void q_wizard_on_native_event(void* self, bool (*slot)(void*, const char*, void*, intptr_t*));
void q_wizard_change_event(void* self, void* param1);
void q_wizard_qbase_change_event(void* self, void* param1);
void q_wizard_on_change_event(void* self, void (*slot)(void*, void*));
int32_t q_wizard_metric(void* self, int64_t param1);
int32_t q_wizard_qbase_metric(void* self, int64_t param1);
void q_wizard_on_metric(void* self, int32_t (*slot)(void*, int64_t));
void q_wizard_init_painter(void* self, void* painter);
void q_wizard_qbase_init_painter(void* self, void* painter);
void q_wizard_on_init_painter(void* self, void (*slot)(void*, void*));
QPaintDevice* q_wizard_redirected(void* self, void* offset);
QPaintDevice* q_wizard_qbase_redirected(void* self, void* offset);
void q_wizard_on_redirected(void* self, QPaintDevice* (*slot)(void*, void*));
QPainter* q_wizard_shared_painter(void* self);
QPainter* q_wizard_qbase_shared_painter(void* self);
void q_wizard_on_shared_painter(void* self, QPainter* (*slot)());
void q_wizard_input_method_event(void* self, void* param1);
void q_wizard_qbase_input_method_event(void* self, void* param1);
void q_wizard_on_input_method_event(void* self, void (*slot)(void*, void*));
QVariant* q_wizard_input_method_query(void* self, int64_t param1);
QVariant* q_wizard_qbase_input_method_query(void* self, int64_t param1);
void q_wizard_on_input_method_query(void* self, QVariant* (*slot)(void*, int64_t));
bool q_wizard_focus_next_prev_child(void* self, bool next);
bool q_wizard_qbase_focus_next_prev_child(void* self, bool next);
void q_wizard_on_focus_next_prev_child(void* self, bool (*slot)(void*, bool));
void q_wizard_timer_event(void* self, void* event);
void q_wizard_qbase_timer_event(void* self, void* event);
void q_wizard_on_timer_event(void* self, void (*slot)(void*, void*));
void q_wizard_child_event(void* self, void* event);
void q_wizard_qbase_child_event(void* self, void* event);
void q_wizard_on_child_event(void* self, void (*slot)(void*, void*));
void q_wizard_custom_event(void* self, void* event);
void q_wizard_qbase_custom_event(void* self, void* event);
void q_wizard_on_custom_event(void* self, void (*slot)(void*, void*));
void q_wizard_connect_notify(void* self, void* signal);
void q_wizard_qbase_connect_notify(void* self, void* signal);
void q_wizard_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_wizard_disconnect_notify(void* self, void* signal);
void q_wizard_qbase_disconnect_notify(void* self, void* signal);
void q_wizard_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_wizard_adjust_position(void* self, void* param1);
void q_wizard_qbase_adjust_position(void* self, void* param1);
void q_wizard_on_adjust_position(void* self, void (*slot)(void*, void*));
void q_wizard_update_micro_focus(void* self);
void q_wizard_qbase_update_micro_focus(void* self);
void q_wizard_on_update_micro_focus(void* self, void (*slot)());
void q_wizard_create(void* self);
void q_wizard_qbase_create(void* self);
void q_wizard_on_create(void* self, void (*slot)());
void q_wizard_destroy(void* self);
void q_wizard_qbase_destroy(void* self);
void q_wizard_on_destroy(void* self, void (*slot)());
bool q_wizard_focus_next_child(void* self);
bool q_wizard_qbase_focus_next_child(void* self);
void q_wizard_on_focus_next_child(void* self, bool (*slot)());
bool q_wizard_focus_previous_child(void* self);
bool q_wizard_qbase_focus_previous_child(void* self);
void q_wizard_on_focus_previous_child(void* self, bool (*slot)());
QObject* q_wizard_sender(void* self);
QObject* q_wizard_qbase_sender(void* self);
void q_wizard_on_sender(void* self, QObject* (*slot)());
int32_t q_wizard_sender_signal_index(void* self);
int32_t q_wizard_qbase_sender_signal_index(void* self);
void q_wizard_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_wizard_receivers(void* self, const char* signal);
int32_t q_wizard_qbase_receivers(void* self, const char* signal);
void q_wizard_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_wizard_is_signal_connected(void* self, void* signal);
bool q_wizard_qbase_is_signal_connected(void* self, void* signal);
void q_wizard_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_wizard_delete(void* self);

QWizardPage* q_wizardpage_new(void* parent);
QWizardPage* q_wizardpage_new2();
QMetaObject* q_wizardpage_meta_object(void* self);
void* q_wizardpage_metacast(void* self, const char* param1);
int32_t q_wizardpage_metacall(void* self, int64_t param1, int param2, void* param3);
void q_wizardpage_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_wizardpage_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_wizardpage_tr(const char* s);
void q_wizardpage_set_title(void* self, const char* title);
const char* q_wizardpage_title(void* self);
void q_wizardpage_set_sub_title(void* self, const char* subTitle);
const char* q_wizardpage_sub_title(void* self);
void q_wizardpage_set_pixmap(void* self, int64_t which, void* pixmap);
QPixmap* q_wizardpage_pixmap(void* self, int64_t which);
void q_wizardpage_set_final_page(void* self, bool finalPage);
bool q_wizardpage_is_final_page(void* self);
void q_wizardpage_set_commit_page(void* self, bool commitPage);
bool q_wizardpage_is_commit_page(void* self);
void q_wizardpage_set_button_text(void* self, int64_t which, const char* text);
const char* q_wizardpage_button_text(void* self, int64_t which);
void q_wizardpage_initialize_page(void* self);
void q_wizardpage_on_initialize_page(void* self, void (*slot)());
void q_wizardpage_qbase_initialize_page(void* self);
void q_wizardpage_cleanup_page(void* self);
void q_wizardpage_on_cleanup_page(void* self, void (*slot)());
void q_wizardpage_qbase_cleanup_page(void* self);
bool q_wizardpage_validate_page(void* self);
void q_wizardpage_on_validate_page(void* self, bool (*slot)());
bool q_wizardpage_qbase_validate_page(void* self);
bool q_wizardpage_is_complete(void* self);
void q_wizardpage_on_is_complete(void* self, bool (*slot)());
bool q_wizardpage_qbase_is_complete(void* self);
int32_t q_wizardpage_next_id(void* self);
void q_wizardpage_on_next_id(void* self, int32_t (*slot)());
int32_t q_wizardpage_qbase_next_id(void* self);
void q_wizardpage_complete_changed(void* self);
void q_wizardpage_on_complete_changed(void* self, void (*slot)(void*));
void q_wizardpage_set_field(void* self, const char* name, void* value);
void q_wizardpage_on_set_field(void* self, void (*slot)(void*, const char*, void*));
void q_wizardpage_qbase_set_field(void* self, const char* name, void* value);
QVariant* q_wizardpage_field(void* self, const char* name);
void q_wizardpage_on_field(void* self, QVariant* (*slot)(void*, const char*));
QVariant* q_wizardpage_qbase_field(void* self, const char* name);
void q_wizardpage_register_field(void* self, const char* name, void* widget);
void q_wizardpage_on_register_field(void* self, void (*slot)(void*, const char*, void*));
void q_wizardpage_qbase_register_field(void* self, const char* name, void* widget);
QWizard* q_wizardpage_wizard(void* self);
void q_wizardpage_on_wizard(void* self, QWizard* (*slot)());
QWizard* q_wizardpage_qbase_wizard(void* self);
const char* q_wizardpage_tr2(const char* s, const char* c);
const char* q_wizardpage_tr3(const char* s, const char* c, int n);
void q_wizardpage_register_field3(void* self, const char* name, void* widget, const char* property);
void q_wizardpage_on_register_field3(void* self, void (*slot)(void*, const char*, void*, const char*));
void q_wizardpage_qbase_register_field3(void* self, const char* name, void* widget, const char* property);
void q_wizardpage_register_field4(void* self, const char* name, void* widget, const char* property, const char* changedSignal);
void q_wizardpage_on_register_field4(void* self, void (*slot)(void*, const char*, void*, const char*, const char*));
void q_wizardpage_qbase_register_field4(void* self, const char* name, void* widget, const char* property, const char* changedSignal);
uintptr_t q_wizardpage_win_id(void* self);
void q_wizardpage_create_win_id(void* self);
uintptr_t q_wizardpage_internal_win_id(void* self);
uintptr_t q_wizardpage_effective_win_id(void* self);
QStyle* q_wizardpage_style(void* self);
void q_wizardpage_set_style(void* self, void* style);
bool q_wizardpage_is_top_level(void* self);
bool q_wizardpage_is_window(void* self);
bool q_wizardpage_is_modal(void* self);
int64_t q_wizardpage_window_modality(void* self);
void q_wizardpage_set_window_modality(void* self, int64_t windowModality);
bool q_wizardpage_is_enabled(void* self);
bool q_wizardpage_is_enabled_to(void* self, void* param1);
void q_wizardpage_set_enabled(void* self, bool enabled);
void q_wizardpage_set_disabled(void* self, bool disabled);
void q_wizardpage_set_window_modified(void* self, bool windowModified);
QRect* q_wizardpage_frame_geometry(void* self);
QRect* q_wizardpage_geometry(void* self);
QRect* q_wizardpage_normal_geometry(void* self);
int32_t q_wizardpage_x(void* self);
int32_t q_wizardpage_y(void* self);
QPoint* q_wizardpage_pos(void* self);
QSize* q_wizardpage_frame_size(void* self);
QSize* q_wizardpage_size(void* self);
int32_t q_wizardpage_width(void* self);
int32_t q_wizardpage_height(void* self);
QRect* q_wizardpage_rect(void* self);
QRect* q_wizardpage_children_rect(void* self);
QRegion* q_wizardpage_children_region(void* self);
QSize* q_wizardpage_minimum_size(void* self);
QSize* q_wizardpage_maximum_size(void* self);
int32_t q_wizardpage_minimum_width(void* self);
int32_t q_wizardpage_minimum_height(void* self);
int32_t q_wizardpage_maximum_width(void* self);
int32_t q_wizardpage_maximum_height(void* self);
void q_wizardpage_set_minimum_size(void* self, void* minimumSize);
void q_wizardpage_set_minimum_size2(void* self, int minw, int minh);
void q_wizardpage_set_maximum_size(void* self, void* maximumSize);
void q_wizardpage_set_maximum_size2(void* self, int maxw, int maxh);
void q_wizardpage_set_minimum_width(void* self, int minw);
void q_wizardpage_set_minimum_height(void* self, int minh);
void q_wizardpage_set_maximum_width(void* self, int maxw);
void q_wizardpage_set_maximum_height(void* self, int maxh);
QSize* q_wizardpage_size_increment(void* self);
void q_wizardpage_set_size_increment(void* self, void* sizeIncrement);
void q_wizardpage_set_size_increment2(void* self, int w, int h);
QSize* q_wizardpage_base_size(void* self);
void q_wizardpage_set_base_size(void* self, void* baseSize);
void q_wizardpage_set_base_size2(void* self, int basew, int baseh);
void q_wizardpage_set_fixed_size(void* self, void* fixedSize);
void q_wizardpage_set_fixed_size2(void* self, int w, int h);
void q_wizardpage_set_fixed_width(void* self, int w);
void q_wizardpage_set_fixed_height(void* self, int h);
QPointF* q_wizardpage_map_to_global(void* self, void* param1);
QPoint* q_wizardpage_map_to_global_with_q_point(void* self, void* param1);
QPointF* q_wizardpage_map_from_global(void* self, void* param1);
QPoint* q_wizardpage_map_from_global_with_q_point(void* self, void* param1);
QPointF* q_wizardpage_map_to_parent(void* self, void* param1);
QPoint* q_wizardpage_map_to_parent_with_q_point(void* self, void* param1);
QPointF* q_wizardpage_map_from_parent(void* self, void* param1);
QPoint* q_wizardpage_map_from_parent_with_q_point(void* self, void* param1);
QPointF* q_wizardpage_map_to(void* self, void* param1, void* param2);
QPoint* q_wizardpage_map_to2(void* self, void* param1, void* param2);
QPointF* q_wizardpage_map_from(void* self, void* param1, void* param2);
QPoint* q_wizardpage_map_from2(void* self, void* param1, void* param2);
QWidget* q_wizardpage_window(void* self);
QWidget* q_wizardpage_native_parent_widget(void* self);
QWidget* q_wizardpage_top_level_widget(void* self);
QPalette* q_wizardpage_palette(void* self);
void q_wizardpage_set_palette(void* self, void* palette);
void q_wizardpage_set_background_role(void* self, int64_t backgroundRole);
int64_t q_wizardpage_background_role(void* self);
void q_wizardpage_set_foreground_role(void* self, int64_t foregroundRole);
int64_t q_wizardpage_foreground_role(void* self);
QFont* q_wizardpage_font(void* self);
void q_wizardpage_set_font(void* self, void* font);
QFontMetrics* q_wizardpage_font_metrics(void* self);
QFontInfo* q_wizardpage_font_info(void* self);
QCursor* q_wizardpage_cursor(void* self);
void q_wizardpage_set_cursor(void* self, void* cursor);
void q_wizardpage_unset_cursor(void* self);
void q_wizardpage_set_mouse_tracking(void* self, bool enable);
bool q_wizardpage_has_mouse_tracking(void* self);
bool q_wizardpage_under_mouse(void* self);
void q_wizardpage_set_tablet_tracking(void* self, bool enable);
bool q_wizardpage_has_tablet_tracking(void* self);
void q_wizardpage_set_mask(void* self, void* mask);
void q_wizardpage_set_mask_with_mask(void* self, void* mask);
QRegion* q_wizardpage_mask(void* self);
void q_wizardpage_clear_mask(void* self);
void q_wizardpage_render(void* self, void* target);
void q_wizardpage_render_with_painter(void* self, void* painter);
QPixmap* q_wizardpage_grab(void* self);
QGraphicsEffect* q_wizardpage_graphics_effect(void* self);
void q_wizardpage_set_graphics_effect(void* self, void* effect);
void q_wizardpage_grab_gesture(void* self, int64_t typeVal);
void q_wizardpage_ungrab_gesture(void* self, int64_t typeVal);
void q_wizardpage_set_window_title(void* self, const char* windowTitle);
void q_wizardpage_set_style_sheet(void* self, const char* styleSheet);
const char* q_wizardpage_style_sheet(void* self);
const char* q_wizardpage_window_title(void* self);
void q_wizardpage_set_window_icon(void* self, void* icon);
QIcon* q_wizardpage_window_icon(void* self);
void q_wizardpage_set_window_icon_text(void* self, const char* windowIconText);
const char* q_wizardpage_window_icon_text(void* self);
void q_wizardpage_set_window_role(void* self, const char* windowRole);
const char* q_wizardpage_window_role(void* self);
void q_wizardpage_set_window_file_path(void* self, const char* filePath);
const char* q_wizardpage_window_file_path(void* self);
void q_wizardpage_set_window_opacity(void* self, double level);
double q_wizardpage_window_opacity(void* self);
bool q_wizardpage_is_window_modified(void* self);
void q_wizardpage_set_tool_tip(void* self, const char* toolTip);
const char* q_wizardpage_tool_tip(void* self);
void q_wizardpage_set_tool_tip_duration(void* self, int msec);
int32_t q_wizardpage_tool_tip_duration(void* self);
void q_wizardpage_set_status_tip(void* self, const char* statusTip);
const char* q_wizardpage_status_tip(void* self);
void q_wizardpage_set_whats_this(void* self, const char* whatsThis);
const char* q_wizardpage_whats_this(void* self);
const char* q_wizardpage_accessible_name(void* self);
void q_wizardpage_set_accessible_name(void* self, const char* name);
const char* q_wizardpage_accessible_description(void* self);
void q_wizardpage_set_accessible_description(void* self, const char* description);
void q_wizardpage_set_layout_direction(void* self, int64_t direction);
int64_t q_wizardpage_layout_direction(void* self);
void q_wizardpage_unset_layout_direction(void* self);
void q_wizardpage_set_locale(void* self, void* locale);
QLocale* q_wizardpage_locale(void* self);
void q_wizardpage_unset_locale(void* self);
bool q_wizardpage_is_right_to_left(void* self);
bool q_wizardpage_is_left_to_right(void* self);
void q_wizardpage_set_focus(void* self);
bool q_wizardpage_is_active_window(void* self);
void q_wizardpage_activate_window(void* self);
void q_wizardpage_clear_focus(void* self);
void q_wizardpage_set_focus_with_reason(void* self, int64_t reason);
int64_t q_wizardpage_focus_policy(void* self);
void q_wizardpage_set_focus_policy(void* self, int64_t policy);
bool q_wizardpage_has_focus(void* self);
void q_wizardpage_set_tab_order(void* param1, void* param2);
void q_wizardpage_set_focus_proxy(void* self, void* focusProxy);
QWidget* q_wizardpage_focus_proxy(void* self);
int64_t q_wizardpage_context_menu_policy(void* self);
void q_wizardpage_set_context_menu_policy(void* self, int64_t policy);
void q_wizardpage_grab_mouse(void* self);
void q_wizardpage_grab_mouse_with_q_cursor(void* self, void* param1);
void q_wizardpage_release_mouse(void* self);
void q_wizardpage_grab_keyboard(void* self);
void q_wizardpage_release_keyboard(void* self);
int32_t q_wizardpage_grab_shortcut(void* self, void* key);
void q_wizardpage_release_shortcut(void* self, int id);
void q_wizardpage_set_shortcut_enabled(void* self, int id);
void q_wizardpage_set_shortcut_auto_repeat(void* self, int id);
QWidget* q_wizardpage_mouse_grabber();
QWidget* q_wizardpage_keyboard_grabber();
bool q_wizardpage_updates_enabled(void* self);
void q_wizardpage_set_updates_enabled(void* self, bool enable);
QGraphicsProxyWidget* q_wizardpage_graphics_proxy_widget(void* self);
void q_wizardpage_update(void* self);
void q_wizardpage_repaint(void* self);
void q_wizardpage_update2(void* self, int x, int y, int w, int h);
void q_wizardpage_update_with_q_rect(void* self, void* param1);
void q_wizardpage_update_with_q_region(void* self, void* param1);
void q_wizardpage_repaint2(void* self, int x, int y, int w, int h);
void q_wizardpage_repaint_with_q_rect(void* self, void* param1);
void q_wizardpage_repaint_with_q_region(void* self, void* param1);
void q_wizardpage_set_hidden(void* self, bool hidden);
void q_wizardpage_show(void* self);
void q_wizardpage_hide(void* self);
void q_wizardpage_show_minimized(void* self);
void q_wizardpage_show_maximized(void* self);
void q_wizardpage_show_full_screen(void* self);
void q_wizardpage_show_normal(void* self);
bool q_wizardpage_close(void* self);
void q_wizardpage_raise(void* self);
void q_wizardpage_lower(void* self);
void q_wizardpage_stack_under(void* self, void* param1);
void q_wizardpage_move(void* self, int x, int y);
void q_wizardpage_move_with_q_point(void* self, void* param1);
void q_wizardpage_resize(void* self, int w, int h);
void q_wizardpage_resize_with_q_size(void* self, void* param1);
void q_wizardpage_set_geometry(void* self, int x, int y, int w, int h);
void q_wizardpage_set_geometry_with_geometry(void* self, void* geometry);
char* q_wizardpage_save_geometry(void* self);
bool q_wizardpage_restore_geometry(void* self, const char* geometry);
void q_wizardpage_adjust_size(void* self);
bool q_wizardpage_is_visible(void* self);
bool q_wizardpage_is_visible_to(void* self, void* param1);
bool q_wizardpage_is_hidden(void* self);
bool q_wizardpage_is_minimized(void* self);
bool q_wizardpage_is_maximized(void* self);
bool q_wizardpage_is_full_screen(void* self);
int64_t q_wizardpage_window_state(void* self);
void q_wizardpage_set_window_state(void* self, int64_t state);
void q_wizardpage_override_window_state(void* self, int64_t state);
QSizePolicy* q_wizardpage_size_policy(void* self);
void q_wizardpage_set_size_policy(void* self, void* sizePolicy);
void q_wizardpage_set_size_policy2(void* self, int64_t horizontal, int64_t vertical);
QRegion* q_wizardpage_visible_region(void* self);
void q_wizardpage_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_wizardpage_set_contents_margins_with_margins(void* self, void* margins);
QMargins* q_wizardpage_contents_margins(void* self);
QRect* q_wizardpage_contents_rect(void* self);
QLayout* q_wizardpage_layout(void* self);
void q_wizardpage_set_layout(void* self, void* layout);
void q_wizardpage_update_geometry(void* self);
void q_wizardpage_set_parent(void* self, void* parent);
void q_wizardpage_set_parent2(void* self, void* parent, int64_t f);
void q_wizardpage_scroll(void* self, int dx, int dy);
void q_wizardpage_scroll2(void* self, int dx, int dy, void* param3);
QWidget* q_wizardpage_focus_widget(void* self);
QWidget* q_wizardpage_next_in_focus_chain(void* self);
QWidget* q_wizardpage_previous_in_focus_chain(void* self);
bool q_wizardpage_accept_drops(void* self);
void q_wizardpage_set_accept_drops(void* self, bool on);
void q_wizardpage_add_action(void* self, void* action);
void q_wizardpage_add_actions(void* self, void* actions[]);
void q_wizardpage_insert_actions(void* self, void* before, void* actions[]);
void q_wizardpage_insert_action(void* self, void* before, void* action);
void q_wizardpage_remove_action(void* self, void* action);
libqt_list /* of QAction* */ q_wizardpage_actions(void* self);
QAction* q_wizardpage_add_action_with_text(void* self, const char* text);
QAction* q_wizardpage_add_action2(void* self, void* icon, const char* text);
QAction* q_wizardpage_add_action3(void* self, const char* text, void* shortcut);
QAction* q_wizardpage_add_action4(void* self, void* icon, const char* text, void* shortcut);
QWidget* q_wizardpage_parent_widget(void* self);
void q_wizardpage_set_window_flags(void* self, int64_t typeVal);
int64_t q_wizardpage_window_flags(void* self);
void q_wizardpage_set_window_flag(void* self, int64_t param1);
void q_wizardpage_override_window_flags(void* self, int64_t typeVal);
int64_t q_wizardpage_window_type(void* self);
QWidget* q_wizardpage_find(uint64_t param1);
QWidget* q_wizardpage_child_at(void* self, int x, int y);
QWidget* q_wizardpage_child_at_with_q_point(void* self, void* p);
void q_wizardpage_set_attribute(void* self, int64_t param1);
bool q_wizardpage_test_attribute(void* self, int64_t param1);
void q_wizardpage_ensure_polished(void* self);
bool q_wizardpage_is_ancestor_of(void* self, void* child);
bool q_wizardpage_auto_fill_background(void* self);
void q_wizardpage_set_auto_fill_background(void* self, bool enabled);
QBackingStore* q_wizardpage_backing_store(void* self);
QWindow* q_wizardpage_window_handle(void* self);
QScreen* q_wizardpage_screen(void* self);
void q_wizardpage_set_screen(void* self, void* screen);
QWidget* q_wizardpage_create_window_container(void* window);
void q_wizardpage_window_title_changed(void* self, const char* title);
void q_wizardpage_on_window_title_changed(void* self, void (*slot)(void*, const char*));
void q_wizardpage_window_icon_changed(void* self, void* icon);
void q_wizardpage_on_window_icon_changed(void* self, void (*slot)(void*, void*));
void q_wizardpage_window_icon_text_changed(void* self, const char* iconText);
void q_wizardpage_on_window_icon_text_changed(void* self, void (*slot)(void*, const char*));
void q_wizardpage_custom_context_menu_requested(void* self, void* pos);
void q_wizardpage_on_custom_context_menu_requested(void* self, void (*slot)(void*, void*));
int64_t q_wizardpage_input_method_hints(void* self);
void q_wizardpage_set_input_method_hints(void* self, int64_t hints);
void q_wizardpage_render2(void* self, void* target, void* targetOffset);
void q_wizardpage_render3(void* self, void* target, void* targetOffset, void* sourceRegion);
void q_wizardpage_render4(void* self, void* target, void* targetOffset, void* sourceRegion, int64_t renderFlags);
void q_wizardpage_render22(void* self, void* painter, void* targetOffset);
void q_wizardpage_render32(void* self, void* painter, void* targetOffset, void* sourceRegion);
void q_wizardpage_render42(void* self, void* painter, void* targetOffset, void* sourceRegion, int64_t renderFlags);
QPixmap* q_wizardpage_grab1(void* self, void* rectangle);
void q_wizardpage_grab_gesture2(void* self, int64_t typeVal, int64_t flags);
int32_t q_wizardpage_grab_shortcut2(void* self, void* key, int64_t context);
void q_wizardpage_set_shortcut_enabled2(void* self, int id, bool enable);
void q_wizardpage_set_shortcut_auto_repeat2(void* self, int id, bool enable);
void q_wizardpage_set_window_flag2(void* self, int64_t param1, bool on);
void q_wizardpage_set_attribute2(void* self, int64_t param1, bool on);
QWidget* q_wizardpage_create_window_container2(void* window, void* parent);
QWidget* q_wizardpage_create_window_container3(void* window, void* parent, int64_t flags);
const char* q_wizardpage_object_name(void* self);
void q_wizardpage_set_object_name(void* self, const char* name);
bool q_wizardpage_is_widget_type(void* self);
bool q_wizardpage_is_window_type(void* self);
bool q_wizardpage_is_quick_item_type(void* self);
bool q_wizardpage_signals_blocked(void* self);
bool q_wizardpage_block_signals(void* self, bool b);
QThread* q_wizardpage_thread(void* self);
void q_wizardpage_move_to_thread(void* self, void* thread);
int32_t q_wizardpage_start_timer(void* self, int interval);
void q_wizardpage_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_wizardpage_children(void* self);
void q_wizardpage_install_event_filter(void* self, void* filterObj);
void q_wizardpage_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_wizardpage_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_wizardpage_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_wizardpage_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_wizardpage_disconnect_with_q_meta_object_connection(void* param1);
void q_wizardpage_dump_object_tree(void* self);
void q_wizardpage_dump_object_info(void* self);
bool q_wizardpage_set_property(void* self, const char* name, void* value);
QVariant* q_wizardpage_property(void* self, const char* name);
const char** q_wizardpage_dynamic_property_names(void* self);
QBindingStorage* q_wizardpage_binding_storage(void* self);
QBindingStorage* q_wizardpage_binding_storage2(void* self);
void q_wizardpage_destroyed(void* self);
void q_wizardpage_on_destroyed(void* self, void (*slot)(void*));
QObject* q_wizardpage_parent(void* self);
bool q_wizardpage_inherits(void* self, const char* classname);
void q_wizardpage_delete_later(void* self);
int32_t q_wizardpage_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_wizardpage_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_wizardpage_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_wizardpage_destroyed1(void* self, void* param1);
void q_wizardpage_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_wizardpage_painting_active(void* self);
int32_t q_wizardpage_width_m_m(void* self);
int32_t q_wizardpage_height_m_m(void* self);
int32_t q_wizardpage_logical_dpi_x(void* self);
int32_t q_wizardpage_logical_dpi_y(void* self);
int32_t q_wizardpage_physical_dpi_x(void* self);
int32_t q_wizardpage_physical_dpi_y(void* self);
double q_wizardpage_device_pixel_ratio(void* self);
double q_wizardpage_device_pixel_ratio_f(void* self);
int32_t q_wizardpage_color_count(void* self);
int32_t q_wizardpage_depth(void* self);
double q_wizardpage_device_pixel_ratio_f_scale();
int32_t q_wizardpage_dev_type(void* self);
int32_t q_wizardpage_qbase_dev_type(void* self);
void q_wizardpage_on_dev_type(void* self, int32_t (*slot)());
void q_wizardpage_set_visible(void* self, bool visible);
void q_wizardpage_qbase_set_visible(void* self, bool visible);
void q_wizardpage_on_set_visible(void* self, void (*slot)(void*, bool));
QSize* q_wizardpage_size_hint(void* self);
QSize* q_wizardpage_qbase_size_hint(void* self);
void q_wizardpage_on_size_hint(void* self, QSize* (*slot)());
QSize* q_wizardpage_minimum_size_hint(void* self);
QSize* q_wizardpage_qbase_minimum_size_hint(void* self);
void q_wizardpage_on_minimum_size_hint(void* self, QSize* (*slot)());
int32_t q_wizardpage_height_for_width(void* self, int param1);
int32_t q_wizardpage_qbase_height_for_width(void* self, int param1);
void q_wizardpage_on_height_for_width(void* self, int32_t (*slot)(void*, int));
bool q_wizardpage_has_height_for_width(void* self);
bool q_wizardpage_qbase_has_height_for_width(void* self);
void q_wizardpage_on_has_height_for_width(void* self, bool (*slot)());
QPaintEngine* q_wizardpage_paint_engine(void* self);
QPaintEngine* q_wizardpage_qbase_paint_engine(void* self);
void q_wizardpage_on_paint_engine(void* self, QPaintEngine* (*slot)());
bool q_wizardpage_event(void* self, void* event);
bool q_wizardpage_qbase_event(void* self, void* event);
void q_wizardpage_on_event(void* self, bool (*slot)(void*, void*));
void q_wizardpage_mouse_press_event(void* self, void* event);
void q_wizardpage_qbase_mouse_press_event(void* self, void* event);
void q_wizardpage_on_mouse_press_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_mouse_release_event(void* self, void* event);
void q_wizardpage_qbase_mouse_release_event(void* self, void* event);
void q_wizardpage_on_mouse_release_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_mouse_double_click_event(void* self, void* event);
void q_wizardpage_qbase_mouse_double_click_event(void* self, void* event);
void q_wizardpage_on_mouse_double_click_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_mouse_move_event(void* self, void* event);
void q_wizardpage_qbase_mouse_move_event(void* self, void* event);
void q_wizardpage_on_mouse_move_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_wheel_event(void* self, void* event);
void q_wizardpage_qbase_wheel_event(void* self, void* event);
void q_wizardpage_on_wheel_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_key_press_event(void* self, void* event);
void q_wizardpage_qbase_key_press_event(void* self, void* event);
void q_wizardpage_on_key_press_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_key_release_event(void* self, void* event);
void q_wizardpage_qbase_key_release_event(void* self, void* event);
void q_wizardpage_on_key_release_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_focus_in_event(void* self, void* event);
void q_wizardpage_qbase_focus_in_event(void* self, void* event);
void q_wizardpage_on_focus_in_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_focus_out_event(void* self, void* event);
void q_wizardpage_qbase_focus_out_event(void* self, void* event);
void q_wizardpage_on_focus_out_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_enter_event(void* self, void* event);
void q_wizardpage_qbase_enter_event(void* self, void* event);
void q_wizardpage_on_enter_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_leave_event(void* self, void* event);
void q_wizardpage_qbase_leave_event(void* self, void* event);
void q_wizardpage_on_leave_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_paint_event(void* self, void* event);
void q_wizardpage_qbase_paint_event(void* self, void* event);
void q_wizardpage_on_paint_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_move_event(void* self, void* event);
void q_wizardpage_qbase_move_event(void* self, void* event);
void q_wizardpage_on_move_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_resize_event(void* self, void* event);
void q_wizardpage_qbase_resize_event(void* self, void* event);
void q_wizardpage_on_resize_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_close_event(void* self, void* event);
void q_wizardpage_qbase_close_event(void* self, void* event);
void q_wizardpage_on_close_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_context_menu_event(void* self, void* event);
void q_wizardpage_qbase_context_menu_event(void* self, void* event);
void q_wizardpage_on_context_menu_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_tablet_event(void* self, void* event);
void q_wizardpage_qbase_tablet_event(void* self, void* event);
void q_wizardpage_on_tablet_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_action_event(void* self, void* event);
void q_wizardpage_qbase_action_event(void* self, void* event);
void q_wizardpage_on_action_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_drag_enter_event(void* self, void* event);
void q_wizardpage_qbase_drag_enter_event(void* self, void* event);
void q_wizardpage_on_drag_enter_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_drag_move_event(void* self, void* event);
void q_wizardpage_qbase_drag_move_event(void* self, void* event);
void q_wizardpage_on_drag_move_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_drag_leave_event(void* self, void* event);
void q_wizardpage_qbase_drag_leave_event(void* self, void* event);
void q_wizardpage_on_drag_leave_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_drop_event(void* self, void* event);
void q_wizardpage_qbase_drop_event(void* self, void* event);
void q_wizardpage_on_drop_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_show_event(void* self, void* event);
void q_wizardpage_qbase_show_event(void* self, void* event);
void q_wizardpage_on_show_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_hide_event(void* self, void* event);
void q_wizardpage_qbase_hide_event(void* self, void* event);
void q_wizardpage_on_hide_event(void* self, void (*slot)(void*, void*));
bool q_wizardpage_native_event(void* self, const char* eventType, void* message, intptr_t* result);
bool q_wizardpage_qbase_native_event(void* self, const char* eventType, void* message, intptr_t* result);
void q_wizardpage_on_native_event(void* self, bool (*slot)(void*, const char*, void*, intptr_t*));
void q_wizardpage_change_event(void* self, void* param1);
void q_wizardpage_qbase_change_event(void* self, void* param1);
void q_wizardpage_on_change_event(void* self, void (*slot)(void*, void*));
int32_t q_wizardpage_metric(void* self, int64_t param1);
int32_t q_wizardpage_qbase_metric(void* self, int64_t param1);
void q_wizardpage_on_metric(void* self, int32_t (*slot)(void*, int64_t));
void q_wizardpage_init_painter(void* self, void* painter);
void q_wizardpage_qbase_init_painter(void* self, void* painter);
void q_wizardpage_on_init_painter(void* self, void (*slot)(void*, void*));
QPaintDevice* q_wizardpage_redirected(void* self, void* offset);
QPaintDevice* q_wizardpage_qbase_redirected(void* self, void* offset);
void q_wizardpage_on_redirected(void* self, QPaintDevice* (*slot)(void*, void*));
QPainter* q_wizardpage_shared_painter(void* self);
QPainter* q_wizardpage_qbase_shared_painter(void* self);
void q_wizardpage_on_shared_painter(void* self, QPainter* (*slot)());
void q_wizardpage_input_method_event(void* self, void* param1);
void q_wizardpage_qbase_input_method_event(void* self, void* param1);
void q_wizardpage_on_input_method_event(void* self, void (*slot)(void*, void*));
QVariant* q_wizardpage_input_method_query(void* self, int64_t param1);
QVariant* q_wizardpage_qbase_input_method_query(void* self, int64_t param1);
void q_wizardpage_on_input_method_query(void* self, QVariant* (*slot)(void*, int64_t));
bool q_wizardpage_focus_next_prev_child(void* self, bool next);
bool q_wizardpage_qbase_focus_next_prev_child(void* self, bool next);
void q_wizardpage_on_focus_next_prev_child(void* self, bool (*slot)(void*, bool));
bool q_wizardpage_event_filter(void* self, void* watched, void* event);
bool q_wizardpage_qbase_event_filter(void* self, void* watched, void* event);
void q_wizardpage_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_wizardpage_timer_event(void* self, void* event);
void q_wizardpage_qbase_timer_event(void* self, void* event);
void q_wizardpage_on_timer_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_child_event(void* self, void* event);
void q_wizardpage_qbase_child_event(void* self, void* event);
void q_wizardpage_on_child_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_custom_event(void* self, void* event);
void q_wizardpage_qbase_custom_event(void* self, void* event);
void q_wizardpage_on_custom_event(void* self, void (*slot)(void*, void*));
void q_wizardpage_connect_notify(void* self, void* signal);
void q_wizardpage_qbase_connect_notify(void* self, void* signal);
void q_wizardpage_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_wizardpage_disconnect_notify(void* self, void* signal);
void q_wizardpage_qbase_disconnect_notify(void* self, void* signal);
void q_wizardpage_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_wizardpage_update_micro_focus(void* self);
void q_wizardpage_qbase_update_micro_focus(void* self);
void q_wizardpage_on_update_micro_focus(void* self, void (*slot)());
void q_wizardpage_create(void* self);
void q_wizardpage_qbase_create(void* self);
void q_wizardpage_on_create(void* self, void (*slot)());
void q_wizardpage_destroy(void* self);
void q_wizardpage_qbase_destroy(void* self);
void q_wizardpage_on_destroy(void* self, void (*slot)());
bool q_wizardpage_focus_next_child(void* self);
bool q_wizardpage_qbase_focus_next_child(void* self);
void q_wizardpage_on_focus_next_child(void* self, bool (*slot)());
bool q_wizardpage_focus_previous_child(void* self);
bool q_wizardpage_qbase_focus_previous_child(void* self);
void q_wizardpage_on_focus_previous_child(void* self, bool (*slot)());
QObject* q_wizardpage_sender(void* self);
QObject* q_wizardpage_qbase_sender(void* self);
void q_wizardpage_on_sender(void* self, QObject* (*slot)());
int32_t q_wizardpage_sender_signal_index(void* self);
int32_t q_wizardpage_qbase_sender_signal_index(void* self);
void q_wizardpage_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_wizardpage_receivers(void* self, const char* signal);
int32_t q_wizardpage_qbase_receivers(void* self, const char* signal);
void q_wizardpage_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_wizardpage_is_signal_connected(void* self, void* signal);
bool q_wizardpage_qbase_is_signal_connected(void* self, void* signal);
void q_wizardpage_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_wizardpage_delete(void* self);

/// https://doc.qt.io/qt-6/qwizard.html#types

typedef enum {
    QWIZARD_WIZARDBUTTON_BACKBUTTON = 0,
    QWIZARD_WIZARDBUTTON_NEXTBUTTON = 1,
    QWIZARD_WIZARDBUTTON_COMMITBUTTON = 2,
    QWIZARD_WIZARDBUTTON_FINISHBUTTON = 3,
    QWIZARD_WIZARDBUTTON_CANCELBUTTON = 4,
    QWIZARD_WIZARDBUTTON_HELPBUTTON = 5,
    QWIZARD_WIZARDBUTTON_CUSTOMBUTTON1 = 6,
    QWIZARD_WIZARDBUTTON_CUSTOMBUTTON2 = 7,
    QWIZARD_WIZARDBUTTON_CUSTOMBUTTON3 = 8,
    QWIZARD_WIZARDBUTTON_STRETCH = 9,
    QWIZARD_WIZARDBUTTON_NOBUTTON = -1,
    QWIZARD_WIZARDBUTTON_NSTANDARDBUTTONS = 6,
    QWIZARD_WIZARDBUTTON_NBUTTONS = 9
} QWizard__WizardButton;

typedef enum {
    QWIZARD_WIZARDPIXMAP_WATERMARKPIXMAP = 0,
    QWIZARD_WIZARDPIXMAP_LOGOPIXMAP = 1,
    QWIZARD_WIZARDPIXMAP_BANNERPIXMAP = 2,
    QWIZARD_WIZARDPIXMAP_BACKGROUNDPIXMAP = 3,
    QWIZARD_WIZARDPIXMAP_NPIXMAPS = 4
} QWizard__WizardPixmap;

typedef enum {
    QWIZARD_WIZARDSTYLE_CLASSICSTYLE = 0,
    QWIZARD_WIZARDSTYLE_MODERNSTYLE = 1,
    QWIZARD_WIZARDSTYLE_MACSTYLE = 2,
    QWIZARD_WIZARDSTYLE_AEROSTYLE = 3,
    QWIZARD_WIZARDSTYLE_NSTYLES = 4
} QWizard__WizardStyle;

typedef enum {
    QWIZARD_WIZARDOPTION_INDEPENDENTPAGES = 1,
    QWIZARD_WIZARDOPTION_IGNORESUBTITLES = 2,
    QWIZARD_WIZARDOPTION_EXTENDEDWATERMARKPIXMAP = 4,
    QWIZARD_WIZARDOPTION_NODEFAULTBUTTON = 8,
    QWIZARD_WIZARDOPTION_NOBACKBUTTONONSTARTPAGE = 16,
    QWIZARD_WIZARDOPTION_NOBACKBUTTONONLASTPAGE = 32,
    QWIZARD_WIZARDOPTION_DISABLEDBACKBUTTONONLASTPAGE = 64,
    QWIZARD_WIZARDOPTION_HAVENEXTBUTTONONLASTPAGE = 128,
    QWIZARD_WIZARDOPTION_HAVEFINISHBUTTONONEARLYPAGES = 256,
    QWIZARD_WIZARDOPTION_NOCANCELBUTTON = 512,
    QWIZARD_WIZARDOPTION_CANCELBUTTONONLEFT = 1024,
    QWIZARD_WIZARDOPTION_HAVEHELPBUTTON = 2048,
    QWIZARD_WIZARDOPTION_HELPBUTTONONRIGHT = 4096,
    QWIZARD_WIZARDOPTION_HAVECUSTOMBUTTON1 = 8192,
    QWIZARD_WIZARDOPTION_HAVECUSTOMBUTTON2 = 16384,
    QWIZARD_WIZARDOPTION_HAVECUSTOMBUTTON3 = 32768,
    QWIZARD_WIZARDOPTION_NOCANCELBUTTONONLASTPAGE = 65536
} QWizard__WizardOption;

#endif
