#pragma once
#ifndef SRCQT6C_LIBQGRAPHICSWIDGET_H
#define SRCQT6C_LIBQGRAPHICSWIDGET_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqaction.h"
#include "libqanystringview.h"
#include "libqbindingstorage.h"
#include "libqevent.h"
#include "libqcursor.h"
#include "libqfont.h"
#include "libqgraphicseffect.h"
#include "libqgraphicsitem.h"
#include "libqgraphicslayout.h"
#include "libqgraphicslayoutitem.h"
#include "libqgraphicsscene.h"
#include "libqgraphicstransform.h"
#include "libqkeysequence.h"
#include "libqmargins.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include "libqpainter.h"
#include "libqpainterpath.h"
#include "libqpalette.h"
#include "libqpoint.h"
#include "libqrect.h"
#include "libqregion.h"
#include "libqsize.h"
#include "libqsizepolicy.h"
#include <string.h>
#include "libqstyle.h"
#include "libqstyleoption.h"
#include "libqthread.h"
#include "libqtransform.h"
#include "libqvariant.h"
#include "libqwidget.h"

QGraphicsWidget* q_graphicswidget_new();
QGraphicsWidget* q_graphicswidget_new2(void* parent);
QGraphicsWidget* q_graphicswidget_new3(void* parent, int64_t wFlags);
QMetaObject* q_graphicswidget_meta_object(void* self);
void* q_graphicswidget_metacast(void* self, const char* param1);
int32_t q_graphicswidget_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicswidget_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicswidget_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicswidget_tr(const char* s);
QGraphicsLayout* q_graphicswidget_layout(void* self);
void q_graphicswidget_set_layout(void* self, void* layout);
void q_graphicswidget_adjust_size(void* self);
int64_t q_graphicswidget_layout_direction(void* self);
void q_graphicswidget_set_layout_direction(void* self, int64_t direction);
void q_graphicswidget_unset_layout_direction(void* self);
QStyle* q_graphicswidget_style(void* self);
void q_graphicswidget_set_style(void* self, void* style);
QFont* q_graphicswidget_font(void* self);
void q_graphicswidget_set_font(void* self, void* font);
QPalette* q_graphicswidget_palette(void* self);
void q_graphicswidget_set_palette(void* self, void* palette);
bool q_graphicswidget_auto_fill_background(void* self);
void q_graphicswidget_set_auto_fill_background(void* self, bool enabled);
void q_graphicswidget_resize(void* self, void* size);
void q_graphicswidget_resize2(void* self, double w, double h);
QSizeF* q_graphicswidget_size(void* self);
void q_graphicswidget_set_geometry(void* self, void* rect);
void q_graphicswidget_on_set_geometry(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_set_geometry(void* self, void* rect);
void q_graphicswidget_set_geometry2(void* self, double x, double y, double w, double h);
QRectF* q_graphicswidget_rect(void* self);
void q_graphicswidget_set_contents_margins(void* self, double left, double top, double right, double bottom);
void q_graphicswidget_set_contents_margins_with_margins(void* self, void* margins);
void q_graphicswidget_get_contents_margins(void* self, double* left, double* top, double* right, double* bottom);
void q_graphicswidget_on_get_contents_margins(void* self, void (*slot)(void*, double*, double*, double*, double*));
void q_graphicswidget_qbase_get_contents_margins(void* self, double* left, double* top, double* right, double* bottom);
void q_graphicswidget_set_window_frame_margins(void* self, double left, double top, double right, double bottom);
void q_graphicswidget_set_window_frame_margins_with_margins(void* self, void* margins);
void q_graphicswidget_get_window_frame_margins(void* self, double* left, double* top, double* right, double* bottom);
void q_graphicswidget_unset_window_frame_margins(void* self);
QRectF* q_graphicswidget_window_frame_geometry(void* self);
QRectF* q_graphicswidget_window_frame_rect(void* self);
int64_t q_graphicswidget_window_flags(void* self);
int64_t q_graphicswidget_window_type(void* self);
void q_graphicswidget_set_window_flags(void* self, int64_t wFlags);
bool q_graphicswidget_is_active_window(void* self);
void q_graphicswidget_set_window_title(void* self, const char* title);
const char* q_graphicswidget_window_title(void* self);
int64_t q_graphicswidget_focus_policy(void* self);
void q_graphicswidget_set_focus_policy(void* self, int64_t policy);
void q_graphicswidget_set_tab_order(void* first, void* second);
QGraphicsWidget* q_graphicswidget_focus_widget(void* self);
int32_t q_graphicswidget_grab_shortcut(void* self, void* sequence);
void q_graphicswidget_release_shortcut(void* self, int id);
void q_graphicswidget_set_shortcut_enabled(void* self, int id);
void q_graphicswidget_set_shortcut_auto_repeat(void* self, int id);
void q_graphicswidget_add_action(void* self, void* action);
void q_graphicswidget_add_actions(void* self, void* actions[]);
void q_graphicswidget_insert_actions(void* self, void* before, void* actions[]);
void q_graphicswidget_insert_action(void* self, void* before, void* action);
void q_graphicswidget_remove_action(void* self, void* action);
libqt_list /* of QAction* */ q_graphicswidget_actions(void* self);
void q_graphicswidget_set_attribute(void* self, int64_t attribute);
bool q_graphicswidget_test_attribute(void* self, int64_t attribute);
int32_t q_graphicswidget_type(void* self);
void q_graphicswidget_on_type(void* self, int32_t (*slot)());
int32_t q_graphicswidget_qbase_type(void* self);
void q_graphicswidget_paint(void* self, void* painter, void* option, void* widget);
void q_graphicswidget_on_paint(void* self, void (*slot)(void*, void*, void*, void*));
void q_graphicswidget_qbase_paint(void* self, void* painter, void* option, void* widget);
void q_graphicswidget_paint_window_frame(void* self, void* painter, void* option, void* widget);
void q_graphicswidget_on_paint_window_frame(void* self, void (*slot)(void*, void*, void*, void*));
void q_graphicswidget_qbase_paint_window_frame(void* self, void* painter, void* option, void* widget);
QRectF* q_graphicswidget_bounding_rect(void* self);
void q_graphicswidget_on_bounding_rect(void* self, QRectF* (*slot)());
QRectF* q_graphicswidget_qbase_bounding_rect(void* self);
QPainterPath* q_graphicswidget_shape(void* self);
void q_graphicswidget_on_shape(void* self, QPainterPath* (*slot)());
QPainterPath* q_graphicswidget_qbase_shape(void* self);
void q_graphicswidget_geometry_changed(void* self);
void q_graphicswidget_on_geometry_changed(void* self, void (*slot)(void*));
void q_graphicswidget_layout_changed(void* self);
void q_graphicswidget_on_layout_changed(void* self, void (*slot)(void*));
bool q_graphicswidget_close(void* self);
void q_graphicswidget_init_style_option(void* self, void* option);
void q_graphicswidget_on_init_style_option(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_init_style_option(void* self, void* option);
QSizeF* q_graphicswidget_size_hint(void* self, int64_t which, void* constraint);
void q_graphicswidget_on_size_hint(void* self, QSizeF* (*slot)(void*, int64_t, void*));
QSizeF* q_graphicswidget_qbase_size_hint(void* self, int64_t which, void* constraint);
void q_graphicswidget_update_geometry(void* self);
void q_graphicswidget_on_update_geometry(void* self, void (*slot)());
void q_graphicswidget_qbase_update_geometry(void* self);
QVariant* q_graphicswidget_item_change(void* self, int64_t change, void* value);
void q_graphicswidget_on_item_change(void* self, QVariant* (*slot)(void*, int64_t, void*));
QVariant* q_graphicswidget_qbase_item_change(void* self, int64_t change, void* value);
QVariant* q_graphicswidget_property_change(void* self, const char* propertyName, void* value);
void q_graphicswidget_on_property_change(void* self, QVariant* (*slot)(void*, const char*, void*));
QVariant* q_graphicswidget_qbase_property_change(void* self, const char* propertyName, void* value);
bool q_graphicswidget_scene_event(void* self, void* event);
void q_graphicswidget_on_scene_event(void* self, bool (*slot)(void*, void*));
bool q_graphicswidget_qbase_scene_event(void* self, void* event);
bool q_graphicswidget_window_frame_event(void* self, void* e);
void q_graphicswidget_on_window_frame_event(void* self, bool (*slot)(void*, void*));
bool q_graphicswidget_qbase_window_frame_event(void* self, void* e);
int64_t q_graphicswidget_window_frame_section_at(void* self, void* pos);
void q_graphicswidget_on_window_frame_section_at(void* self, int64_t (*slot)(void*, void*));
int64_t q_graphicswidget_qbase_window_frame_section_at(void* self, void* pos);
bool q_graphicswidget_event(void* self, void* event);
void q_graphicswidget_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicswidget_qbase_event(void* self, void* event);
void q_graphicswidget_change_event(void* self, void* event);
void q_graphicswidget_on_change_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_change_event(void* self, void* event);
void q_graphicswidget_close_event(void* self, void* event);
void q_graphicswidget_on_close_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_close_event(void* self, void* event);
void q_graphicswidget_focus_in_event(void* self, void* event);
void q_graphicswidget_on_focus_in_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_focus_in_event(void* self, void* event);
bool q_graphicswidget_focus_next_prev_child(void* self, bool next);
void q_graphicswidget_on_focus_next_prev_child(void* self, bool (*slot)(void*, bool));
bool q_graphicswidget_qbase_focus_next_prev_child(void* self, bool next);
void q_graphicswidget_focus_out_event(void* self, void* event);
void q_graphicswidget_on_focus_out_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_focus_out_event(void* self, void* event);
void q_graphicswidget_hide_event(void* self, void* event);
void q_graphicswidget_on_hide_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_hide_event(void* self, void* event);
void q_graphicswidget_move_event(void* self, void* event);
void q_graphicswidget_on_move_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_move_event(void* self, void* event);
void q_graphicswidget_polish_event(void* self);
void q_graphicswidget_on_polish_event(void* self, void (*slot)());
void q_graphicswidget_qbase_polish_event(void* self);
void q_graphicswidget_resize_event(void* self, void* event);
void q_graphicswidget_on_resize_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_resize_event(void* self, void* event);
void q_graphicswidget_show_event(void* self, void* event);
void q_graphicswidget_on_show_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_show_event(void* self, void* event);
void q_graphicswidget_hover_move_event(void* self, void* event);
void q_graphicswidget_on_hover_move_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_hover_move_event(void* self, void* event);
void q_graphicswidget_hover_leave_event(void* self, void* event);
void q_graphicswidget_on_hover_leave_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_hover_leave_event(void* self, void* event);
void q_graphicswidget_grab_mouse_event(void* self, void* event);
void q_graphicswidget_on_grab_mouse_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_grab_mouse_event(void* self, void* event);
void q_graphicswidget_ungrab_mouse_event(void* self, void* event);
void q_graphicswidget_on_ungrab_mouse_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_ungrab_mouse_event(void* self, void* event);
void q_graphicswidget_grab_keyboard_event(void* self, void* event);
void q_graphicswidget_on_grab_keyboard_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_grab_keyboard_event(void* self, void* event);
void q_graphicswidget_ungrab_keyboard_event(void* self, void* event);
void q_graphicswidget_on_ungrab_keyboard_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_qbase_ungrab_keyboard_event(void* self, void* event);
const char* q_graphicswidget_tr2(const char* s, const char* c);
const char* q_graphicswidget_tr3(const char* s, const char* c, int n);
int32_t q_graphicswidget_grab_shortcut2(void* self, void* sequence, int64_t context);
void q_graphicswidget_set_shortcut_enabled2(void* self, int id, bool enabled);
void q_graphicswidget_set_shortcut_auto_repeat2(void* self, int id, bool enabled);
void q_graphicswidget_set_attribute2(void* self, int64_t attribute, bool on);
void q_graphicswidget_grab_gesture(void* self, int64_t typeVal);
void q_graphicswidget_ungrab_gesture(void* self, int64_t typeVal);
void q_graphicswidget_parent_changed(void* self);
void q_graphicswidget_on_parent_changed(void* self, void (*slot)(void*));
void q_graphicswidget_opacity_changed(void* self);
void q_graphicswidget_on_opacity_changed(void* self, void (*slot)(void*));
void q_graphicswidget_visible_changed(void* self);
void q_graphicswidget_on_visible_changed(void* self, void (*slot)(void*));
void q_graphicswidget_enabled_changed(void* self);
void q_graphicswidget_on_enabled_changed(void* self, void (*slot)(void*));
void q_graphicswidget_x_changed(void* self);
void q_graphicswidget_on_x_changed(void* self, void (*slot)(void*));
void q_graphicswidget_y_changed(void* self);
void q_graphicswidget_on_y_changed(void* self, void (*slot)(void*));
void q_graphicswidget_z_changed(void* self);
void q_graphicswidget_on_z_changed(void* self, void (*slot)(void*));
void q_graphicswidget_rotation_changed(void* self);
void q_graphicswidget_on_rotation_changed(void* self, void (*slot)(void*));
void q_graphicswidget_scale_changed(void* self);
void q_graphicswidget_on_scale_changed(void* self, void (*slot)(void*));
void q_graphicswidget_children_changed(void* self);
void q_graphicswidget_on_children_changed(void* self, void (*slot)(void*));
void q_graphicswidget_width_changed(void* self);
void q_graphicswidget_on_width_changed(void* self, void (*slot)(void*));
void q_graphicswidget_height_changed(void* self);
void q_graphicswidget_on_height_changed(void* self, void (*slot)(void*));
void q_graphicswidget_grab_gesture2(void* self, int64_t typeVal, int64_t flags);
const char* q_graphicswidget_object_name(void* self);
void q_graphicswidget_set_object_name(void* self, const char* name);
bool q_graphicswidget_is_widget_type(void* self);
bool q_graphicswidget_is_window_type(void* self);
bool q_graphicswidget_is_quick_item_type(void* self);
bool q_graphicswidget_signals_blocked(void* self);
bool q_graphicswidget_block_signals(void* self, bool b);
QThread* q_graphicswidget_thread(void* self);
void q_graphicswidget_move_to_thread(void* self, void* thread);
int32_t q_graphicswidget_start_timer(void* self, int interval);
void q_graphicswidget_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicswidget_children(void* self);
void q_graphicswidget_set_parent(void* self, void* parent);
void q_graphicswidget_install_event_filter(void* self, void* filterObj);
void q_graphicswidget_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicswidget_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicswidget_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicswidget_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicswidget_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicswidget_dump_object_tree(void* self);
void q_graphicswidget_dump_object_info(void* self);
bool q_graphicswidget_set_property(void* self, const char* name, void* value);
QVariant* q_graphicswidget_property(void* self, const char* name);
const char** q_graphicswidget_dynamic_property_names(void* self);
QBindingStorage* q_graphicswidget_binding_storage(void* self);
QBindingStorage* q_graphicswidget_binding_storage2(void* self);
void q_graphicswidget_destroyed(void* self);
void q_graphicswidget_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicswidget_parent(void* self);
bool q_graphicswidget_inherits(void* self, const char* classname);
void q_graphicswidget_delete_later(void* self);
int32_t q_graphicswidget_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicswidget_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicswidget_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicswidget_destroyed1(void* self, void* param1);
void q_graphicswidget_on_destroyed1(void* self, void (*slot)(void*, void*));
QGraphicsScene* q_graphicswidget_scene(void* self);
QGraphicsItem* q_graphicswidget_parent_item(void* self);
QGraphicsItem* q_graphicswidget_top_level_item(void* self);
QGraphicsObject* q_graphicswidget_parent_object(void* self);
QGraphicsWidget* q_graphicswidget_parent_widget(void* self);
QGraphicsWidget* q_graphicswidget_top_level_widget(void* self);
QGraphicsWidget* q_graphicswidget_window(void* self);
QGraphicsItem* q_graphicswidget_panel(void* self);
void q_graphicswidget_set_parent_item(void* self, void* parent);
libqt_list /* of QGraphicsItem* */ q_graphicswidget_child_items(void* self);
bool q_graphicswidget_is_widget(void* self);
bool q_graphicswidget_is_window(void* self);
bool q_graphicswidget_is_panel(void* self);
QGraphicsObject* q_graphicswidget_to_graphics_object(void* self);
QGraphicsObject* q_graphicswidget_to_graphics_object2(void* self);
QGraphicsItemGroup* q_graphicswidget_group(void* self);
void q_graphicswidget_set_group(void* self, void* group);
int64_t q_graphicswidget_flags(void* self);
void q_graphicswidget_set_flag(void* self, int64_t flag);
void q_graphicswidget_set_flags(void* self, int64_t flags);
int64_t q_graphicswidget_cache_mode(void* self);
void q_graphicswidget_set_cache_mode(void* self, int64_t mode);
int64_t q_graphicswidget_panel_modality(void* self);
void q_graphicswidget_set_panel_modality(void* self, int64_t panelModality);
bool q_graphicswidget_is_blocked_by_modal_panel(void* self);
const char* q_graphicswidget_tool_tip(void* self);
void q_graphicswidget_set_tool_tip(void* self, const char* toolTip);
QCursor* q_graphicswidget_cursor(void* self);
void q_graphicswidget_set_cursor(void* self, void* cursor);
bool q_graphicswidget_has_cursor(void* self);
void q_graphicswidget_unset_cursor(void* self);
bool q_graphicswidget_is_visible(void* self);
bool q_graphicswidget_is_visible_to(void* self, void* parent);
void q_graphicswidget_set_visible(void* self, bool visible);
void q_graphicswidget_hide(void* self);
void q_graphicswidget_show(void* self);
bool q_graphicswidget_is_enabled(void* self);
void q_graphicswidget_set_enabled(void* self, bool enabled);
bool q_graphicswidget_is_selected(void* self);
void q_graphicswidget_set_selected(void* self, bool selected);
bool q_graphicswidget_accept_drops(void* self);
void q_graphicswidget_set_accept_drops(void* self, bool on);
double q_graphicswidget_opacity(void* self);
double q_graphicswidget_effective_opacity(void* self);
void q_graphicswidget_set_opacity(void* self, double opacity);
QGraphicsEffect* q_graphicswidget_graphics_effect(void* self);
void q_graphicswidget_set_graphics_effect(void* self, void* effect);
int64_t q_graphicswidget_accepted_mouse_buttons(void* self);
void q_graphicswidget_set_accepted_mouse_buttons(void* self, int64_t buttons);
bool q_graphicswidget_accept_hover_events(void* self);
void q_graphicswidget_set_accept_hover_events(void* self, bool enabled);
bool q_graphicswidget_accept_touch_events(void* self);
void q_graphicswidget_set_accept_touch_events(void* self, bool enabled);
bool q_graphicswidget_filters_child_events(void* self);
void q_graphicswidget_set_filters_child_events(void* self, bool enabled);
bool q_graphicswidget_handles_child_events(void* self);
void q_graphicswidget_set_handles_child_events(void* self, bool enabled);
bool q_graphicswidget_is_active(void* self);
void q_graphicswidget_set_active(void* self, bool active);
bool q_graphicswidget_has_focus(void* self);
void q_graphicswidget_set_focus(void* self);
void q_graphicswidget_clear_focus(void* self);
QGraphicsItem* q_graphicswidget_focus_proxy(void* self);
void q_graphicswidget_set_focus_proxy(void* self, void* item);
QGraphicsItem* q_graphicswidget_focus_item(void* self);
QGraphicsItem* q_graphicswidget_focus_scope_item(void* self);
void q_graphicswidget_grab_mouse(void* self);
void q_graphicswidget_ungrab_mouse(void* self);
void q_graphicswidget_grab_keyboard(void* self);
void q_graphicswidget_ungrab_keyboard(void* self);
QPointF* q_graphicswidget_pos(void* self);
double q_graphicswidget_x(void* self);
void q_graphicswidget_set_x(void* self, double x);
double q_graphicswidget_y(void* self);
void q_graphicswidget_set_y(void* self, double y);
QPointF* q_graphicswidget_scene_pos(void* self);
void q_graphicswidget_set_pos(void* self, void* pos);
void q_graphicswidget_set_pos2(void* self, double x, double y);
void q_graphicswidget_move_by(void* self, double dx, double dy);
void q_graphicswidget_ensure_visible(void* self);
void q_graphicswidget_ensure_visible2(void* self, double x, double y, double w, double h);
QTransform* q_graphicswidget_transform(void* self);
QTransform* q_graphicswidget_scene_transform(void* self);
QTransform* q_graphicswidget_device_transform(void* self, void* viewportTransform);
QTransform* q_graphicswidget_item_transform(void* self, void* other);
void q_graphicswidget_set_transform(void* self, void* matrix);
void q_graphicswidget_reset_transform(void* self);
void q_graphicswidget_set_rotation(void* self, double angle);
double q_graphicswidget_rotation(void* self);
void q_graphicswidget_set_scale(void* self, double scale);
double q_graphicswidget_scale(void* self);
libqt_list /* of QGraphicsTransform* */ q_graphicswidget_transformations(void* self);
void q_graphicswidget_set_transformations(void* self, void* transformations[]);
QPointF* q_graphicswidget_transform_origin_point(void* self);
void q_graphicswidget_set_transform_origin_point(void* self, void* origin);
void q_graphicswidget_set_transform_origin_point2(void* self, double ax, double ay);
double q_graphicswidget_z_value(void* self);
void q_graphicswidget_set_z_value(void* self, double z);
void q_graphicswidget_stack_before(void* self, void* sibling);
QRectF* q_graphicswidget_children_bounding_rect(void* self);
QRectF* q_graphicswidget_scene_bounding_rect(void* self);
bool q_graphicswidget_is_clipped(void* self);
QPainterPath* q_graphicswidget_clip_path(void* self);
libqt_list /* of QGraphicsItem* */ q_graphicswidget_colliding_items(void* self);
bool q_graphicswidget_is_obscured(void* self);
bool q_graphicswidget_is_obscured2(void* self, double x, double y, double w, double h);
QRegion* q_graphicswidget_bounding_region(void* self, void* itemToDeviceTransform);
double q_graphicswidget_bounding_region_granularity(void* self);
void q_graphicswidget_set_bounding_region_granularity(void* self, double granularity);
void q_graphicswidget_update(void* self);
void q_graphicswidget_update2(void* self, double x, double y, double width, double height);
void q_graphicswidget_scroll(void* self, double dx, double dy);
QPointF* q_graphicswidget_map_to_item(void* self, void* item, void* point);
QPointF* q_graphicswidget_map_to_parent(void* self, void* point);
QPointF* q_graphicswidget_map_to_scene(void* self, void* point);
QRectF* q_graphicswidget_map_rect_to_item(void* self, void* item, void* rect);
QRectF* q_graphicswidget_map_rect_to_parent(void* self, void* rect);
QRectF* q_graphicswidget_map_rect_to_scene(void* self, void* rect);
QPainterPath* q_graphicswidget_map_to_item4(void* self, void* item, void* path);
QPainterPath* q_graphicswidget_map_to_parent_with_path(void* self, void* path);
QPainterPath* q_graphicswidget_map_to_scene_with_path(void* self, void* path);
QPointF* q_graphicswidget_map_from_item(void* self, void* item, void* point);
QPointF* q_graphicswidget_map_from_parent(void* self, void* point);
QPointF* q_graphicswidget_map_from_scene(void* self, void* point);
QRectF* q_graphicswidget_map_rect_from_item(void* self, void* item, void* rect);
QRectF* q_graphicswidget_map_rect_from_parent(void* self, void* rect);
QRectF* q_graphicswidget_map_rect_from_scene(void* self, void* rect);
QPainterPath* q_graphicswidget_map_from_item4(void* self, void* item, void* path);
QPainterPath* q_graphicswidget_map_from_parent_with_path(void* self, void* path);
QPainterPath* q_graphicswidget_map_from_scene_with_path(void* self, void* path);
QPointF* q_graphicswidget_map_to_item5(void* self, void* item, double x, double y);
QPointF* q_graphicswidget_map_to_parent2(void* self, double x, double y);
QPointF* q_graphicswidget_map_to_scene2(void* self, double x, double y);
QRectF* q_graphicswidget_map_rect_to_item2(void* self, void* item, double x, double y, double w, double h);
QRectF* q_graphicswidget_map_rect_to_parent2(void* self, double x, double y, double w, double h);
QRectF* q_graphicswidget_map_rect_to_scene2(void* self, double x, double y, double w, double h);
QPointF* q_graphicswidget_map_from_item5(void* self, void* item, double x, double y);
QPointF* q_graphicswidget_map_from_parent2(void* self, double x, double y);
QPointF* q_graphicswidget_map_from_scene2(void* self, double x, double y);
QRectF* q_graphicswidget_map_rect_from_item2(void* self, void* item, double x, double y, double w, double h);
QRectF* q_graphicswidget_map_rect_from_parent2(void* self, double x, double y, double w, double h);
QRectF* q_graphicswidget_map_rect_from_scene2(void* self, double x, double y, double w, double h);
bool q_graphicswidget_is_ancestor_of(void* self, void* child);
QGraphicsItem* q_graphicswidget_common_ancestor_item(void* self, void* other);
bool q_graphicswidget_is_under_mouse(void* self);
QVariant* q_graphicswidget_data(void* self, int key);
void q_graphicswidget_set_data(void* self, int key, void* value);
int64_t q_graphicswidget_input_method_hints(void* self);
void q_graphicswidget_set_input_method_hints(void* self, int64_t hints);
void q_graphicswidget_install_scene_event_filter(void* self, void* filterItem);
void q_graphicswidget_remove_scene_event_filter(void* self, void* filterItem);
void q_graphicswidget_set_flag2(void* self, int64_t flag, bool enabled);
void q_graphicswidget_set_cache_mode2(void* self, int64_t mode, void* cacheSize);
void q_graphicswidget_set_focus1(void* self, int64_t focusReason);
void q_graphicswidget_ensure_visible1(void* self, void* rect);
void q_graphicswidget_ensure_visible22(void* self, void* rect, int xmargin);
void q_graphicswidget_ensure_visible3(void* self, void* rect, int xmargin, int ymargin);
void q_graphicswidget_ensure_visible5(void* self, double x, double y, double w, double h, int xmargin);
void q_graphicswidget_ensure_visible6(void* self, double x, double y, double w, double h, int xmargin, int ymargin);
QTransform* q_graphicswidget_item_transform2(void* self, void* other, bool* ok);
void q_graphicswidget_set_transform2(void* self, void* matrix, bool combine);
libqt_list /* of QGraphicsItem* */ q_graphicswidget_colliding_items1(void* self, int64_t mode);
bool q_graphicswidget_is_obscured1(void* self, void* rect);
void q_graphicswidget_update1(void* self, void* rect);
void q_graphicswidget_scroll3(void* self, double dx, double dy, void* rect);
void q_graphicswidget_set_size_policy(void* self, void* policy);
void q_graphicswidget_set_size_policy2(void* self, int64_t hPolicy, int64_t vPolicy);
QSizePolicy* q_graphicswidget_size_policy(void* self);
void q_graphicswidget_set_minimum_size(void* self, void* size);
void q_graphicswidget_set_minimum_size2(void* self, double w, double h);
QSizeF* q_graphicswidget_minimum_size(void* self);
void q_graphicswidget_set_minimum_width(void* self, double width);
double q_graphicswidget_minimum_width(void* self);
void q_graphicswidget_set_minimum_height(void* self, double height);
double q_graphicswidget_minimum_height(void* self);
void q_graphicswidget_set_preferred_size(void* self, void* size);
void q_graphicswidget_set_preferred_size2(void* self, double w, double h);
QSizeF* q_graphicswidget_preferred_size(void* self);
void q_graphicswidget_set_preferred_width(void* self, double width);
double q_graphicswidget_preferred_width(void* self);
void q_graphicswidget_set_preferred_height(void* self, double height);
double q_graphicswidget_preferred_height(void* self);
void q_graphicswidget_set_maximum_size(void* self, void* size);
void q_graphicswidget_set_maximum_size2(void* self, double w, double h);
QSizeF* q_graphicswidget_maximum_size(void* self);
void q_graphicswidget_set_maximum_width(void* self, double width);
double q_graphicswidget_maximum_width(void* self);
void q_graphicswidget_set_maximum_height(void* self, double height);
double q_graphicswidget_maximum_height(void* self);
QRectF* q_graphicswidget_geometry(void* self);
QRectF* q_graphicswidget_contents_rect(void* self);
QSizeF* q_graphicswidget_effective_size_hint(void* self, int64_t which);
QGraphicsLayoutItem* q_graphicswidget_parent_layout_item(void* self);
void q_graphicswidget_set_parent_layout_item(void* self, void* parent);
bool q_graphicswidget_is_layout(void* self);
QGraphicsItem* q_graphicswidget_graphics_item(void* self);
bool q_graphicswidget_owned_by_layout(void* self);
void q_graphicswidget_set_size_policy3(void* self, int64_t hPolicy, int64_t vPolicy, int64_t controlType);
QSizeF* q_graphicswidget_effective_size_hint2(void* self, int64_t which, void* constraint);
bool q_graphicswidget_event_filter(void* self, void* watched, void* event);
bool q_graphicswidget_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicswidget_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicswidget_timer_event(void* self, void* event);
void q_graphicswidget_qbase_timer_event(void* self, void* event);
void q_graphicswidget_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_child_event(void* self, void* event);
void q_graphicswidget_qbase_child_event(void* self, void* event);
void q_graphicswidget_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_custom_event(void* self, void* event);
void q_graphicswidget_qbase_custom_event(void* self, void* event);
void q_graphicswidget_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_connect_notify(void* self, void* signal);
void q_graphicswidget_qbase_connect_notify(void* self, void* signal);
void q_graphicswidget_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicswidget_disconnect_notify(void* self, void* signal);
void q_graphicswidget_qbase_disconnect_notify(void* self, void* signal);
void q_graphicswidget_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicswidget_advance(void* self, int phase);
void q_graphicswidget_qbase_advance(void* self, int phase);
void q_graphicswidget_on_advance(void* self, void (*slot)(void*, int));
bool q_graphicswidget_contains(void* self, void* point);
bool q_graphicswidget_qbase_contains(void* self, void* point);
void q_graphicswidget_on_contains(void* self, bool (*slot)(void*, void*));
bool q_graphicswidget_collides_with_item(void* self, void* other, int64_t mode);
bool q_graphicswidget_qbase_collides_with_item(void* self, void* other, int64_t mode);
void q_graphicswidget_on_collides_with_item(void* self, bool (*slot)(void*, void*, int64_t));
bool q_graphicswidget_collides_with_path(void* self, void* path, int64_t mode);
bool q_graphicswidget_qbase_collides_with_path(void* self, void* path, int64_t mode);
void q_graphicswidget_on_collides_with_path(void* self, bool (*slot)(void*, void*, int64_t));
bool q_graphicswidget_is_obscured_by(void* self, void* item);
bool q_graphicswidget_qbase_is_obscured_by(void* self, void* item);
void q_graphicswidget_on_is_obscured_by(void* self, bool (*slot)(void*, void*));
QPainterPath* q_graphicswidget_opaque_area(void* self);
QPainterPath* q_graphicswidget_qbase_opaque_area(void* self);
void q_graphicswidget_on_opaque_area(void* self, QPainterPath* (*slot)());
bool q_graphicswidget_scene_event_filter(void* self, void* watched, void* event);
bool q_graphicswidget_qbase_scene_event_filter(void* self, void* watched, void* event);
void q_graphicswidget_on_scene_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicswidget_context_menu_event(void* self, void* event);
void q_graphicswidget_qbase_context_menu_event(void* self, void* event);
void q_graphicswidget_on_context_menu_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_drag_enter_event(void* self, void* event);
void q_graphicswidget_qbase_drag_enter_event(void* self, void* event);
void q_graphicswidget_on_drag_enter_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_drag_leave_event(void* self, void* event);
void q_graphicswidget_qbase_drag_leave_event(void* self, void* event);
void q_graphicswidget_on_drag_leave_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_drag_move_event(void* self, void* event);
void q_graphicswidget_qbase_drag_move_event(void* self, void* event);
void q_graphicswidget_on_drag_move_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_drop_event(void* self, void* event);
void q_graphicswidget_qbase_drop_event(void* self, void* event);
void q_graphicswidget_on_drop_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_hover_enter_event(void* self, void* event);
void q_graphicswidget_qbase_hover_enter_event(void* self, void* event);
void q_graphicswidget_on_hover_enter_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_key_press_event(void* self, void* event);
void q_graphicswidget_qbase_key_press_event(void* self, void* event);
void q_graphicswidget_on_key_press_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_key_release_event(void* self, void* event);
void q_graphicswidget_qbase_key_release_event(void* self, void* event);
void q_graphicswidget_on_key_release_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_mouse_press_event(void* self, void* event);
void q_graphicswidget_qbase_mouse_press_event(void* self, void* event);
void q_graphicswidget_on_mouse_press_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_mouse_move_event(void* self, void* event);
void q_graphicswidget_qbase_mouse_move_event(void* self, void* event);
void q_graphicswidget_on_mouse_move_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_mouse_release_event(void* self, void* event);
void q_graphicswidget_qbase_mouse_release_event(void* self, void* event);
void q_graphicswidget_on_mouse_release_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_mouse_double_click_event(void* self, void* event);
void q_graphicswidget_qbase_mouse_double_click_event(void* self, void* event);
void q_graphicswidget_on_mouse_double_click_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_wheel_event(void* self, void* event);
void q_graphicswidget_qbase_wheel_event(void* self, void* event);
void q_graphicswidget_on_wheel_event(void* self, void (*slot)(void*, void*));
void q_graphicswidget_input_method_event(void* self, void* event);
void q_graphicswidget_qbase_input_method_event(void* self, void* event);
void q_graphicswidget_on_input_method_event(void* self, void (*slot)(void*, void*));
QVariant* q_graphicswidget_input_method_query(void* self, int64_t query);
QVariant* q_graphicswidget_qbase_input_method_query(void* self, int64_t query);
void q_graphicswidget_on_input_method_query(void* self, QVariant* (*slot)(void*, int64_t));
bool q_graphicswidget_supports_extension(void* self, int64_t extension);
bool q_graphicswidget_qbase_supports_extension(void* self, int64_t extension);
void q_graphicswidget_on_supports_extension(void* self, bool (*slot)(void*, int64_t));
void q_graphicswidget_set_extension(void* self, int64_t extension, void* variant);
void q_graphicswidget_qbase_set_extension(void* self, int64_t extension, void* variant);
void q_graphicswidget_on_set_extension(void* self, void (*slot)(void*, int64_t, void*));
QVariant* q_graphicswidget_extension(void* self, void* variant);
QVariant* q_graphicswidget_qbase_extension(void* self, void* variant);
void q_graphicswidget_on_extension(void* self, QVariant* (*slot)(void*, void*));
bool q_graphicswidget_is_empty(void* self);
bool q_graphicswidget_qbase_is_empty(void* self);
void q_graphicswidget_on_is_empty(void* self, bool (*slot)());
void q_graphicswidget_update_micro_focus(void* self);
void q_graphicswidget_qbase_update_micro_focus(void* self);
void q_graphicswidget_on_update_micro_focus(void* self, void (*slot)());
QObject* q_graphicswidget_sender(void* self);
QObject* q_graphicswidget_qbase_sender(void* self);
void q_graphicswidget_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicswidget_sender_signal_index(void* self);
int32_t q_graphicswidget_qbase_sender_signal_index(void* self);
void q_graphicswidget_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicswidget_receivers(void* self, const char* signal);
int32_t q_graphicswidget_qbase_receivers(void* self, const char* signal);
void q_graphicswidget_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicswidget_is_signal_connected(void* self, void* signal);
bool q_graphicswidget_qbase_is_signal_connected(void* self, void* signal);
void q_graphicswidget_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicswidget_add_to_index(void* self);
void q_graphicswidget_qbase_add_to_index(void* self);
void q_graphicswidget_on_add_to_index(void* self, void (*slot)());
void q_graphicswidget_remove_from_index(void* self);
void q_graphicswidget_qbase_remove_from_index(void* self);
void q_graphicswidget_on_remove_from_index(void* self, void (*slot)());
void q_graphicswidget_prepare_geometry_change(void* self);
void q_graphicswidget_qbase_prepare_geometry_change(void* self);
void q_graphicswidget_on_prepare_geometry_change(void* self, void (*slot)());
void q_graphicswidget_set_graphics_item(void* self, void* item);
void q_graphicswidget_qbase_set_graphics_item(void* self, void* item);
void q_graphicswidget_on_set_graphics_item(void* self, void (*slot)(void*, void*));
void q_graphicswidget_set_owned_by_layout(void* self, bool ownedByLayout);
void q_graphicswidget_qbase_set_owned_by_layout(void* self, bool ownedByLayout);
void q_graphicswidget_on_set_owned_by_layout(void* self, void (*slot)(void*, bool));
void q_graphicswidget_delete(void* self);

/// https://doc.qt.io/qt-6/qgraphicswidget.html#types

typedef enum {
    QGRAPHICSWIDGET__TYPE = 11
} QGraphicsWidget__;

#endif
