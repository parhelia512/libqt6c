#pragma once
#ifndef SRCQT6C_LIBQINPUTDIALOG_H
#define SRCQT6C_LIBQINPUTDIALOG_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqaction.h"
#include "libqevent.h"
#include "libqanystringview.h"
#include "libqbackingstore.h"
#include "libqbindingstorage.h"
#include "libqbitmap.h"
#include "libqcursor.h"
#include "libqdialog.h"
#include "libqfont.h"
#include "libqfontinfo.h"
#include "libqfontmetrics.h"
#include "libqgraphicseffect.h"
#include "libqgraphicsproxywidget.h"
#include "libqicon.h"
#include "libqkeysequence.h"
#include "libqlayout.h"
#include "libqlocale.h"
#include "libqmargins.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include "libqpaintdevice.h"
#include "libqpaintengine.h"
#include "libqpainter.h"
#include "libqpalette.h"
#include "libqpixmap.h"
#include "libqpoint.h"
#include "libqrect.h"
#include "libqregion.h"
#include "libqscreen.h"
#include "libqsize.h"
#include "libqsizepolicy.h"
#include <string.h>
#include "libqstyle.h"
#include "libqthread.h"
#include "libqvariant.h"
#include "libqwidget.h"
#include "libqwindow.h"

QInputDialog* q_inputdialog_new(void* parent);
QInputDialog* q_inputdialog_new2();
QInputDialog* q_inputdialog_new3(void* parent, int64_t flags);
QMetaObject* q_inputdialog_meta_object(void* self);
void* q_inputdialog_metacast(void* self, const char* param1);
int32_t q_inputdialog_metacall(void* self, int64_t param1, int param2, void* param3);
void q_inputdialog_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_inputdialog_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_inputdialog_tr(const char* s);
void q_inputdialog_set_input_mode(void* self, int64_t mode);
int64_t q_inputdialog_input_mode(void* self);
void q_inputdialog_set_label_text(void* self, const char* text);
const char* q_inputdialog_label_text(void* self);
void q_inputdialog_set_option(void* self, int64_t option);
bool q_inputdialog_test_option(void* self, int64_t option);
void q_inputdialog_set_options(void* self, int64_t options);
int64_t q_inputdialog_options(void* self);
void q_inputdialog_set_text_value(void* self, const char* text);
const char* q_inputdialog_text_value(void* self);
void q_inputdialog_set_text_echo_mode(void* self, int64_t mode);
int64_t q_inputdialog_text_echo_mode(void* self);
void q_inputdialog_set_combo_box_editable(void* self, bool editable);
bool q_inputdialog_is_combo_box_editable(void* self);
void q_inputdialog_set_combo_box_items(void* self, const char* items[]);
const char** q_inputdialog_combo_box_items(void* self);
void q_inputdialog_set_int_value(void* self, int value);
int32_t q_inputdialog_int_value(void* self);
void q_inputdialog_set_int_minimum(void* self, int min);
int32_t q_inputdialog_int_minimum(void* self);
void q_inputdialog_set_int_maximum(void* self, int max);
int32_t q_inputdialog_int_maximum(void* self);
void q_inputdialog_set_int_range(void* self, int min, int max);
void q_inputdialog_set_int_step(void* self, int step);
int32_t q_inputdialog_int_step(void* self);
void q_inputdialog_set_double_value(void* self, double value);
double q_inputdialog_double_value(void* self);
void q_inputdialog_set_double_minimum(void* self, double min);
double q_inputdialog_double_minimum(void* self);
void q_inputdialog_set_double_maximum(void* self, double max);
double q_inputdialog_double_maximum(void* self);
void q_inputdialog_set_double_range(void* self, double min, double max);
void q_inputdialog_set_double_decimals(void* self, int decimals);
int32_t q_inputdialog_double_decimals(void* self);
void q_inputdialog_set_ok_button_text(void* self, const char* text);
const char* q_inputdialog_ok_button_text(void* self);
void q_inputdialog_set_cancel_button_text(void* self, const char* text);
const char* q_inputdialog_cancel_button_text(void* self);
QSize* q_inputdialog_minimum_size_hint(void* self);
void q_inputdialog_on_minimum_size_hint(void* self, QSize* (*slot)());
QSize* q_inputdialog_qbase_minimum_size_hint(void* self);
QSize* q_inputdialog_size_hint(void* self);
void q_inputdialog_on_size_hint(void* self, QSize* (*slot)());
QSize* q_inputdialog_qbase_size_hint(void* self);
void q_inputdialog_set_visible(void* self, bool visible);
void q_inputdialog_on_set_visible(void* self, void (*slot)(void*, bool));
void q_inputdialog_qbase_set_visible(void* self, bool visible);
const char* q_inputdialog_get_text(void* parent, const char* title, const char* label);
const char* q_inputdialog_get_multi_line_text(void* parent, const char* title, const char* label);
const char* q_inputdialog_get_item(void* parent, const char* title, const char* label, const char* items[]);
int32_t q_inputdialog_get_int(void* parent, const char* title, const char* label);
double q_inputdialog_get_double(void* parent, const char* title, const char* label);
void q_inputdialog_set_double_step(void* self, double step);
double q_inputdialog_double_step(void* self);
void q_inputdialog_text_value_changed(void* self, const char* text);
void q_inputdialog_on_text_value_changed(void* self, void (*slot)(void*, const char*));
void q_inputdialog_text_value_selected(void* self, const char* text);
void q_inputdialog_on_text_value_selected(void* self, void (*slot)(void*, const char*));
void q_inputdialog_int_value_changed(void* self, int value);
void q_inputdialog_on_int_value_changed(void* self, void (*slot)(void*, int));
void q_inputdialog_int_value_selected(void* self, int value);
void q_inputdialog_on_int_value_selected(void* self, void (*slot)(void*, int));
void q_inputdialog_double_value_changed(void* self, double value);
void q_inputdialog_on_double_value_changed(void* self, void (*slot)(void*, double));
void q_inputdialog_double_value_selected(void* self, double value);
void q_inputdialog_on_double_value_selected(void* self, void (*slot)(void*, double));
void q_inputdialog_done(void* self, int result);
void q_inputdialog_on_done(void* self, void (*slot)(void*, int));
void q_inputdialog_qbase_done(void* self, int result);
const char* q_inputdialog_tr2(const char* s, const char* c);
const char* q_inputdialog_tr3(const char* s, const char* c, int n);
void q_inputdialog_set_option2(void* self, int64_t option, bool on);
const char* q_inputdialog_get_text4(void* parent, const char* title, const char* label, int64_t echo);
const char* q_inputdialog_get_text5(void* parent, const char* title, const char* label, int64_t echo, const char* text);
const char* q_inputdialog_get_text6(void* parent, const char* title, const char* label, int64_t echo, const char* text, bool* ok);
const char* q_inputdialog_get_text7(void* parent, const char* title, const char* label, int64_t echo, const char* text, bool* ok, int64_t flags);
const char* q_inputdialog_get_text8(void* parent, const char* title, const char* label, int64_t echo, const char* text, bool* ok, int64_t flags, int64_t inputMethodHints);
const char* q_inputdialog_get_multi_line_text4(void* parent, const char* title, const char* label, const char* text);
const char* q_inputdialog_get_multi_line_text5(void* parent, const char* title, const char* label, const char* text, bool* ok);
const char* q_inputdialog_get_multi_line_text6(void* parent, const char* title, const char* label, const char* text, bool* ok, int64_t flags);
const char* q_inputdialog_get_multi_line_text7(void* parent, const char* title, const char* label, const char* text, bool* ok, int64_t flags, int64_t inputMethodHints);
const char* q_inputdialog_get_item5(void* parent, const char* title, const char* label, const char* items[], int current);
const char* q_inputdialog_get_item6(void* parent, const char* title, const char* label, const char* items[], int current, bool editable);
const char* q_inputdialog_get_item7(void* parent, const char* title, const char* label, const char* items[], int current, bool editable, bool* ok);
const char* q_inputdialog_get_item8(void* parent, const char* title, const char* label, const char* items[], int current, bool editable, bool* ok, int64_t flags);
const char* q_inputdialog_get_item9(void* parent, const char* title, const char* label, const char* items[], int current, bool editable, bool* ok, int64_t flags, int64_t inputMethodHints);
int32_t q_inputdialog_get_int4(void* parent, const char* title, const char* label, int value);
int32_t q_inputdialog_get_int5(void* parent, const char* title, const char* label, int value, int minValue);
int32_t q_inputdialog_get_int6(void* parent, const char* title, const char* label, int value, int minValue, int maxValue);
int32_t q_inputdialog_get_int7(void* parent, const char* title, const char* label, int value, int minValue, int maxValue, int step);
int32_t q_inputdialog_get_int8(void* parent, const char* title, const char* label, int value, int minValue, int maxValue, int step, bool* ok);
int32_t q_inputdialog_get_int9(void* parent, const char* title, const char* label, int value, int minValue, int maxValue, int step, bool* ok, int64_t flags);
double q_inputdialog_get_double4(void* parent, const char* title, const char* label, double value);
double q_inputdialog_get_double5(void* parent, const char* title, const char* label, double value, double minValue);
double q_inputdialog_get_double6(void* parent, const char* title, const char* label, double value, double minValue, double maxValue);
double q_inputdialog_get_double7(void* parent, const char* title, const char* label, double value, double minValue, double maxValue, int decimals);
double q_inputdialog_get_double8(void* parent, const char* title, const char* label, double value, double minValue, double maxValue, int decimals, bool* ok);
double q_inputdialog_get_double9(void* parent, const char* title, const char* label, double value, double minValue, double maxValue, int decimals, bool* ok, int64_t flags);
double q_inputdialog_get_double10(void* parent, const char* title, const char* label, double value, double minValue, double maxValue, int decimals, bool* ok, int64_t flags, double step);
int32_t q_inputdialog_result(void* self);
void q_inputdialog_set_size_grip_enabled(void* self, bool sizeGripEnabled);
bool q_inputdialog_is_size_grip_enabled(void* self);
void q_inputdialog_set_modal(void* self, bool modal);
void q_inputdialog_set_result(void* self, int r);
void q_inputdialog_finished(void* self, int result);
void q_inputdialog_on_finished(void* self, void (*slot)(void*, int));
void q_inputdialog_accepted(void* self);
void q_inputdialog_on_accepted(void* self, void (*slot)(void*));
void q_inputdialog_rejected(void* self);
void q_inputdialog_on_rejected(void* self, void (*slot)(void*));
uintptr_t q_inputdialog_win_id(void* self);
void q_inputdialog_create_win_id(void* self);
uintptr_t q_inputdialog_internal_win_id(void* self);
uintptr_t q_inputdialog_effective_win_id(void* self);
QStyle* q_inputdialog_style(void* self);
void q_inputdialog_set_style(void* self, void* style);
bool q_inputdialog_is_top_level(void* self);
bool q_inputdialog_is_window(void* self);
bool q_inputdialog_is_modal(void* self);
int64_t q_inputdialog_window_modality(void* self);
void q_inputdialog_set_window_modality(void* self, int64_t windowModality);
bool q_inputdialog_is_enabled(void* self);
bool q_inputdialog_is_enabled_to(void* self, void* param1);
void q_inputdialog_set_enabled(void* self, bool enabled);
void q_inputdialog_set_disabled(void* self, bool disabled);
void q_inputdialog_set_window_modified(void* self, bool windowModified);
QRect* q_inputdialog_frame_geometry(void* self);
QRect* q_inputdialog_geometry(void* self);
QRect* q_inputdialog_normal_geometry(void* self);
int32_t q_inputdialog_x(void* self);
int32_t q_inputdialog_y(void* self);
QPoint* q_inputdialog_pos(void* self);
QSize* q_inputdialog_frame_size(void* self);
QSize* q_inputdialog_size(void* self);
int32_t q_inputdialog_width(void* self);
int32_t q_inputdialog_height(void* self);
QRect* q_inputdialog_rect(void* self);
QRect* q_inputdialog_children_rect(void* self);
QRegion* q_inputdialog_children_region(void* self);
QSize* q_inputdialog_minimum_size(void* self);
QSize* q_inputdialog_maximum_size(void* self);
int32_t q_inputdialog_minimum_width(void* self);
int32_t q_inputdialog_minimum_height(void* self);
int32_t q_inputdialog_maximum_width(void* self);
int32_t q_inputdialog_maximum_height(void* self);
void q_inputdialog_set_minimum_size(void* self, void* minimumSize);
void q_inputdialog_set_minimum_size2(void* self, int minw, int minh);
void q_inputdialog_set_maximum_size(void* self, void* maximumSize);
void q_inputdialog_set_maximum_size2(void* self, int maxw, int maxh);
void q_inputdialog_set_minimum_width(void* self, int minw);
void q_inputdialog_set_minimum_height(void* self, int minh);
void q_inputdialog_set_maximum_width(void* self, int maxw);
void q_inputdialog_set_maximum_height(void* self, int maxh);
QSize* q_inputdialog_size_increment(void* self);
void q_inputdialog_set_size_increment(void* self, void* sizeIncrement);
void q_inputdialog_set_size_increment2(void* self, int w, int h);
QSize* q_inputdialog_base_size(void* self);
void q_inputdialog_set_base_size(void* self, void* baseSize);
void q_inputdialog_set_base_size2(void* self, int basew, int baseh);
void q_inputdialog_set_fixed_size(void* self, void* fixedSize);
void q_inputdialog_set_fixed_size2(void* self, int w, int h);
void q_inputdialog_set_fixed_width(void* self, int w);
void q_inputdialog_set_fixed_height(void* self, int h);
QPointF* q_inputdialog_map_to_global(void* self, void* param1);
QPoint* q_inputdialog_map_to_global_with_q_point(void* self, void* param1);
QPointF* q_inputdialog_map_from_global(void* self, void* param1);
QPoint* q_inputdialog_map_from_global_with_q_point(void* self, void* param1);
QPointF* q_inputdialog_map_to_parent(void* self, void* param1);
QPoint* q_inputdialog_map_to_parent_with_q_point(void* self, void* param1);
QPointF* q_inputdialog_map_from_parent(void* self, void* param1);
QPoint* q_inputdialog_map_from_parent_with_q_point(void* self, void* param1);
QPointF* q_inputdialog_map_to(void* self, void* param1, void* param2);
QPoint* q_inputdialog_map_to2(void* self, void* param1, void* param2);
QPointF* q_inputdialog_map_from(void* self, void* param1, void* param2);
QPoint* q_inputdialog_map_from2(void* self, void* param1, void* param2);
QWidget* q_inputdialog_window(void* self);
QWidget* q_inputdialog_native_parent_widget(void* self);
QWidget* q_inputdialog_top_level_widget(void* self);
QPalette* q_inputdialog_palette(void* self);
void q_inputdialog_set_palette(void* self, void* palette);
void q_inputdialog_set_background_role(void* self, int64_t backgroundRole);
int64_t q_inputdialog_background_role(void* self);
void q_inputdialog_set_foreground_role(void* self, int64_t foregroundRole);
int64_t q_inputdialog_foreground_role(void* self);
QFont* q_inputdialog_font(void* self);
void q_inputdialog_set_font(void* self, void* font);
QFontMetrics* q_inputdialog_font_metrics(void* self);
QFontInfo* q_inputdialog_font_info(void* self);
QCursor* q_inputdialog_cursor(void* self);
void q_inputdialog_set_cursor(void* self, void* cursor);
void q_inputdialog_unset_cursor(void* self);
void q_inputdialog_set_mouse_tracking(void* self, bool enable);
bool q_inputdialog_has_mouse_tracking(void* self);
bool q_inputdialog_under_mouse(void* self);
void q_inputdialog_set_tablet_tracking(void* self, bool enable);
bool q_inputdialog_has_tablet_tracking(void* self);
void q_inputdialog_set_mask(void* self, void* mask);
void q_inputdialog_set_mask_with_mask(void* self, void* mask);
QRegion* q_inputdialog_mask(void* self);
void q_inputdialog_clear_mask(void* self);
void q_inputdialog_render(void* self, void* target);
void q_inputdialog_render_with_painter(void* self, void* painter);
QPixmap* q_inputdialog_grab(void* self);
QGraphicsEffect* q_inputdialog_graphics_effect(void* self);
void q_inputdialog_set_graphics_effect(void* self, void* effect);
void q_inputdialog_grab_gesture(void* self, int64_t typeVal);
void q_inputdialog_ungrab_gesture(void* self, int64_t typeVal);
void q_inputdialog_set_window_title(void* self, const char* windowTitle);
void q_inputdialog_set_style_sheet(void* self, const char* styleSheet);
const char* q_inputdialog_style_sheet(void* self);
const char* q_inputdialog_window_title(void* self);
void q_inputdialog_set_window_icon(void* self, void* icon);
QIcon* q_inputdialog_window_icon(void* self);
void q_inputdialog_set_window_icon_text(void* self, const char* windowIconText);
const char* q_inputdialog_window_icon_text(void* self);
void q_inputdialog_set_window_role(void* self, const char* windowRole);
const char* q_inputdialog_window_role(void* self);
void q_inputdialog_set_window_file_path(void* self, const char* filePath);
const char* q_inputdialog_window_file_path(void* self);
void q_inputdialog_set_window_opacity(void* self, double level);
double q_inputdialog_window_opacity(void* self);
bool q_inputdialog_is_window_modified(void* self);
void q_inputdialog_set_tool_tip(void* self, const char* toolTip);
const char* q_inputdialog_tool_tip(void* self);
void q_inputdialog_set_tool_tip_duration(void* self, int msec);
int32_t q_inputdialog_tool_tip_duration(void* self);
void q_inputdialog_set_status_tip(void* self, const char* statusTip);
const char* q_inputdialog_status_tip(void* self);
void q_inputdialog_set_whats_this(void* self, const char* whatsThis);
const char* q_inputdialog_whats_this(void* self);
const char* q_inputdialog_accessible_name(void* self);
void q_inputdialog_set_accessible_name(void* self, const char* name);
const char* q_inputdialog_accessible_description(void* self);
void q_inputdialog_set_accessible_description(void* self, const char* description);
void q_inputdialog_set_layout_direction(void* self, int64_t direction);
int64_t q_inputdialog_layout_direction(void* self);
void q_inputdialog_unset_layout_direction(void* self);
void q_inputdialog_set_locale(void* self, void* locale);
QLocale* q_inputdialog_locale(void* self);
void q_inputdialog_unset_locale(void* self);
bool q_inputdialog_is_right_to_left(void* self);
bool q_inputdialog_is_left_to_right(void* self);
void q_inputdialog_set_focus(void* self);
bool q_inputdialog_is_active_window(void* self);
void q_inputdialog_activate_window(void* self);
void q_inputdialog_clear_focus(void* self);
void q_inputdialog_set_focus_with_reason(void* self, int64_t reason);
int64_t q_inputdialog_focus_policy(void* self);
void q_inputdialog_set_focus_policy(void* self, int64_t policy);
bool q_inputdialog_has_focus(void* self);
void q_inputdialog_set_tab_order(void* param1, void* param2);
void q_inputdialog_set_focus_proxy(void* self, void* focusProxy);
QWidget* q_inputdialog_focus_proxy(void* self);
int64_t q_inputdialog_context_menu_policy(void* self);
void q_inputdialog_set_context_menu_policy(void* self, int64_t policy);
void q_inputdialog_grab_mouse(void* self);
void q_inputdialog_grab_mouse_with_q_cursor(void* self, void* param1);
void q_inputdialog_release_mouse(void* self);
void q_inputdialog_grab_keyboard(void* self);
void q_inputdialog_release_keyboard(void* self);
int32_t q_inputdialog_grab_shortcut(void* self, void* key);
void q_inputdialog_release_shortcut(void* self, int id);
void q_inputdialog_set_shortcut_enabled(void* self, int id);
void q_inputdialog_set_shortcut_auto_repeat(void* self, int id);
QWidget* q_inputdialog_mouse_grabber();
QWidget* q_inputdialog_keyboard_grabber();
bool q_inputdialog_updates_enabled(void* self);
void q_inputdialog_set_updates_enabled(void* self, bool enable);
QGraphicsProxyWidget* q_inputdialog_graphics_proxy_widget(void* self);
void q_inputdialog_update(void* self);
void q_inputdialog_repaint(void* self);
void q_inputdialog_update2(void* self, int x, int y, int w, int h);
void q_inputdialog_update_with_q_rect(void* self, void* param1);
void q_inputdialog_update_with_q_region(void* self, void* param1);
void q_inputdialog_repaint2(void* self, int x, int y, int w, int h);
void q_inputdialog_repaint_with_q_rect(void* self, void* param1);
void q_inputdialog_repaint_with_q_region(void* self, void* param1);
void q_inputdialog_set_hidden(void* self, bool hidden);
void q_inputdialog_show(void* self);
void q_inputdialog_hide(void* self);
void q_inputdialog_show_minimized(void* self);
void q_inputdialog_show_maximized(void* self);
void q_inputdialog_show_full_screen(void* self);
void q_inputdialog_show_normal(void* self);
bool q_inputdialog_close(void* self);
void q_inputdialog_raise(void* self);
void q_inputdialog_lower(void* self);
void q_inputdialog_stack_under(void* self, void* param1);
void q_inputdialog_move(void* self, int x, int y);
void q_inputdialog_move_with_q_point(void* self, void* param1);
void q_inputdialog_resize(void* self, int w, int h);
void q_inputdialog_resize_with_q_size(void* self, void* param1);
void q_inputdialog_set_geometry(void* self, int x, int y, int w, int h);
void q_inputdialog_set_geometry_with_geometry(void* self, void* geometry);
char* q_inputdialog_save_geometry(void* self);
bool q_inputdialog_restore_geometry(void* self, const char* geometry);
void q_inputdialog_adjust_size(void* self);
bool q_inputdialog_is_visible(void* self);
bool q_inputdialog_is_visible_to(void* self, void* param1);
bool q_inputdialog_is_hidden(void* self);
bool q_inputdialog_is_minimized(void* self);
bool q_inputdialog_is_maximized(void* self);
bool q_inputdialog_is_full_screen(void* self);
int64_t q_inputdialog_window_state(void* self);
void q_inputdialog_set_window_state(void* self, int64_t state);
void q_inputdialog_override_window_state(void* self, int64_t state);
QSizePolicy* q_inputdialog_size_policy(void* self);
void q_inputdialog_set_size_policy(void* self, void* sizePolicy);
void q_inputdialog_set_size_policy2(void* self, int64_t horizontal, int64_t vertical);
QRegion* q_inputdialog_visible_region(void* self);
void q_inputdialog_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_inputdialog_set_contents_margins_with_margins(void* self, void* margins);
QMargins* q_inputdialog_contents_margins(void* self);
QRect* q_inputdialog_contents_rect(void* self);
QLayout* q_inputdialog_layout(void* self);
void q_inputdialog_set_layout(void* self, void* layout);
void q_inputdialog_update_geometry(void* self);
void q_inputdialog_set_parent(void* self, void* parent);
void q_inputdialog_set_parent2(void* self, void* parent, int64_t f);
void q_inputdialog_scroll(void* self, int dx, int dy);
void q_inputdialog_scroll2(void* self, int dx, int dy, void* param3);
QWidget* q_inputdialog_focus_widget(void* self);
QWidget* q_inputdialog_next_in_focus_chain(void* self);
QWidget* q_inputdialog_previous_in_focus_chain(void* self);
bool q_inputdialog_accept_drops(void* self);
void q_inputdialog_set_accept_drops(void* self, bool on);
void q_inputdialog_add_action(void* self, void* action);
void q_inputdialog_add_actions(void* self, void* actions[]);
void q_inputdialog_insert_actions(void* self, void* before, void* actions[]);
void q_inputdialog_insert_action(void* self, void* before, void* action);
void q_inputdialog_remove_action(void* self, void* action);
libqt_list /* of QAction* */ q_inputdialog_actions(void* self);
QAction* q_inputdialog_add_action_with_text(void* self, const char* text);
QAction* q_inputdialog_add_action2(void* self, void* icon, const char* text);
QAction* q_inputdialog_add_action3(void* self, const char* text, void* shortcut);
QAction* q_inputdialog_add_action4(void* self, void* icon, const char* text, void* shortcut);
QWidget* q_inputdialog_parent_widget(void* self);
void q_inputdialog_set_window_flags(void* self, int64_t typeVal);
int64_t q_inputdialog_window_flags(void* self);
void q_inputdialog_set_window_flag(void* self, int64_t param1);
void q_inputdialog_override_window_flags(void* self, int64_t typeVal);
int64_t q_inputdialog_window_type(void* self);
QWidget* q_inputdialog_find(uint64_t param1);
QWidget* q_inputdialog_child_at(void* self, int x, int y);
QWidget* q_inputdialog_child_at_with_q_point(void* self, void* p);
void q_inputdialog_set_attribute(void* self, int64_t param1);
bool q_inputdialog_test_attribute(void* self, int64_t param1);
void q_inputdialog_ensure_polished(void* self);
bool q_inputdialog_is_ancestor_of(void* self, void* child);
bool q_inputdialog_auto_fill_background(void* self);
void q_inputdialog_set_auto_fill_background(void* self, bool enabled);
QBackingStore* q_inputdialog_backing_store(void* self);
QWindow* q_inputdialog_window_handle(void* self);
QScreen* q_inputdialog_screen(void* self);
void q_inputdialog_set_screen(void* self, void* screen);
QWidget* q_inputdialog_create_window_container(void* window);
void q_inputdialog_window_title_changed(void* self, const char* title);
void q_inputdialog_on_window_title_changed(void* self, void (*slot)(void*, const char*));
void q_inputdialog_window_icon_changed(void* self, void* icon);
void q_inputdialog_on_window_icon_changed(void* self, void (*slot)(void*, void*));
void q_inputdialog_window_icon_text_changed(void* self, const char* iconText);
void q_inputdialog_on_window_icon_text_changed(void* self, void (*slot)(void*, const char*));
void q_inputdialog_custom_context_menu_requested(void* self, void* pos);
void q_inputdialog_on_custom_context_menu_requested(void* self, void (*slot)(void*, void*));
int64_t q_inputdialog_input_method_hints(void* self);
void q_inputdialog_set_input_method_hints(void* self, int64_t hints);
void q_inputdialog_render2(void* self, void* target, void* targetOffset);
void q_inputdialog_render3(void* self, void* target, void* targetOffset, void* sourceRegion);
void q_inputdialog_render4(void* self, void* target, void* targetOffset, void* sourceRegion, int64_t renderFlags);
void q_inputdialog_render22(void* self, void* painter, void* targetOffset);
void q_inputdialog_render32(void* self, void* painter, void* targetOffset, void* sourceRegion);
void q_inputdialog_render42(void* self, void* painter, void* targetOffset, void* sourceRegion, int64_t renderFlags);
QPixmap* q_inputdialog_grab1(void* self, void* rectangle);
void q_inputdialog_grab_gesture2(void* self, int64_t typeVal, int64_t flags);
int32_t q_inputdialog_grab_shortcut2(void* self, void* key, int64_t context);
void q_inputdialog_set_shortcut_enabled2(void* self, int id, bool enable);
void q_inputdialog_set_shortcut_auto_repeat2(void* self, int id, bool enable);
void q_inputdialog_set_window_flag2(void* self, int64_t param1, bool on);
void q_inputdialog_set_attribute2(void* self, int64_t param1, bool on);
QWidget* q_inputdialog_create_window_container2(void* window, void* parent);
QWidget* q_inputdialog_create_window_container3(void* window, void* parent, int64_t flags);
const char* q_inputdialog_object_name(void* self);
void q_inputdialog_set_object_name(void* self, const char* name);
bool q_inputdialog_is_widget_type(void* self);
bool q_inputdialog_is_window_type(void* self);
bool q_inputdialog_is_quick_item_type(void* self);
bool q_inputdialog_signals_blocked(void* self);
bool q_inputdialog_block_signals(void* self, bool b);
QThread* q_inputdialog_thread(void* self);
void q_inputdialog_move_to_thread(void* self, void* thread);
int32_t q_inputdialog_start_timer(void* self, int interval);
void q_inputdialog_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_inputdialog_children(void* self);
void q_inputdialog_install_event_filter(void* self, void* filterObj);
void q_inputdialog_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_inputdialog_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_inputdialog_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_inputdialog_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_inputdialog_disconnect_with_q_meta_object_connection(void* param1);
void q_inputdialog_dump_object_tree(void* self);
void q_inputdialog_dump_object_info(void* self);
bool q_inputdialog_set_property(void* self, const char* name, void* value);
QVariant* q_inputdialog_property(void* self, const char* name);
const char** q_inputdialog_dynamic_property_names(void* self);
QBindingStorage* q_inputdialog_binding_storage(void* self);
QBindingStorage* q_inputdialog_binding_storage2(void* self);
void q_inputdialog_destroyed(void* self);
void q_inputdialog_on_destroyed(void* self, void (*slot)(void*));
QObject* q_inputdialog_parent(void* self);
bool q_inputdialog_inherits(void* self, const char* classname);
void q_inputdialog_delete_later(void* self);
int32_t q_inputdialog_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_inputdialog_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_inputdialog_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_inputdialog_destroyed1(void* self, void* param1);
void q_inputdialog_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_inputdialog_painting_active(void* self);
int32_t q_inputdialog_width_m_m(void* self);
int32_t q_inputdialog_height_m_m(void* self);
int32_t q_inputdialog_logical_dpi_x(void* self);
int32_t q_inputdialog_logical_dpi_y(void* self);
int32_t q_inputdialog_physical_dpi_x(void* self);
int32_t q_inputdialog_physical_dpi_y(void* self);
double q_inputdialog_device_pixel_ratio(void* self);
double q_inputdialog_device_pixel_ratio_f(void* self);
int32_t q_inputdialog_color_count(void* self);
int32_t q_inputdialog_depth(void* self);
double q_inputdialog_device_pixel_ratio_f_scale();
void q_inputdialog_open(void* self);
void q_inputdialog_qbase_open(void* self);
void q_inputdialog_on_open(void* self, void (*slot)());
int32_t q_inputdialog_exec(void* self);
int32_t q_inputdialog_qbase_exec(void* self);
void q_inputdialog_on_exec(void* self, int32_t (*slot)());
void q_inputdialog_accept(void* self);
void q_inputdialog_qbase_accept(void* self);
void q_inputdialog_on_accept(void* self, void (*slot)());
void q_inputdialog_reject(void* self);
void q_inputdialog_qbase_reject(void* self);
void q_inputdialog_on_reject(void* self, void (*slot)());
void q_inputdialog_key_press_event(void* self, void* param1);
void q_inputdialog_qbase_key_press_event(void* self, void* param1);
void q_inputdialog_on_key_press_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_close_event(void* self, void* param1);
void q_inputdialog_qbase_close_event(void* self, void* param1);
void q_inputdialog_on_close_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_show_event(void* self, void* param1);
void q_inputdialog_qbase_show_event(void* self, void* param1);
void q_inputdialog_on_show_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_resize_event(void* self, void* param1);
void q_inputdialog_qbase_resize_event(void* self, void* param1);
void q_inputdialog_on_resize_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_context_menu_event(void* self, void* param1);
void q_inputdialog_qbase_context_menu_event(void* self, void* param1);
void q_inputdialog_on_context_menu_event(void* self, void (*slot)(void*, void*));
bool q_inputdialog_event_filter(void* self, void* param1, void* param2);
bool q_inputdialog_qbase_event_filter(void* self, void* param1, void* param2);
void q_inputdialog_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
int32_t q_inputdialog_dev_type(void* self);
int32_t q_inputdialog_qbase_dev_type(void* self);
void q_inputdialog_on_dev_type(void* self, int32_t (*slot)());
int32_t q_inputdialog_height_for_width(void* self, int param1);
int32_t q_inputdialog_qbase_height_for_width(void* self, int param1);
void q_inputdialog_on_height_for_width(void* self, int32_t (*slot)(void*, int));
bool q_inputdialog_has_height_for_width(void* self);
bool q_inputdialog_qbase_has_height_for_width(void* self);
void q_inputdialog_on_has_height_for_width(void* self, bool (*slot)());
QPaintEngine* q_inputdialog_paint_engine(void* self);
QPaintEngine* q_inputdialog_qbase_paint_engine(void* self);
void q_inputdialog_on_paint_engine(void* self, QPaintEngine* (*slot)());
bool q_inputdialog_event(void* self, void* event);
bool q_inputdialog_qbase_event(void* self, void* event);
void q_inputdialog_on_event(void* self, bool (*slot)(void*, void*));
void q_inputdialog_mouse_press_event(void* self, void* event);
void q_inputdialog_qbase_mouse_press_event(void* self, void* event);
void q_inputdialog_on_mouse_press_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_mouse_release_event(void* self, void* event);
void q_inputdialog_qbase_mouse_release_event(void* self, void* event);
void q_inputdialog_on_mouse_release_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_mouse_double_click_event(void* self, void* event);
void q_inputdialog_qbase_mouse_double_click_event(void* self, void* event);
void q_inputdialog_on_mouse_double_click_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_mouse_move_event(void* self, void* event);
void q_inputdialog_qbase_mouse_move_event(void* self, void* event);
void q_inputdialog_on_mouse_move_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_wheel_event(void* self, void* event);
void q_inputdialog_qbase_wheel_event(void* self, void* event);
void q_inputdialog_on_wheel_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_key_release_event(void* self, void* event);
void q_inputdialog_qbase_key_release_event(void* self, void* event);
void q_inputdialog_on_key_release_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_focus_in_event(void* self, void* event);
void q_inputdialog_qbase_focus_in_event(void* self, void* event);
void q_inputdialog_on_focus_in_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_focus_out_event(void* self, void* event);
void q_inputdialog_qbase_focus_out_event(void* self, void* event);
void q_inputdialog_on_focus_out_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_enter_event(void* self, void* event);
void q_inputdialog_qbase_enter_event(void* self, void* event);
void q_inputdialog_on_enter_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_leave_event(void* self, void* event);
void q_inputdialog_qbase_leave_event(void* self, void* event);
void q_inputdialog_on_leave_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_paint_event(void* self, void* event);
void q_inputdialog_qbase_paint_event(void* self, void* event);
void q_inputdialog_on_paint_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_move_event(void* self, void* event);
void q_inputdialog_qbase_move_event(void* self, void* event);
void q_inputdialog_on_move_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_tablet_event(void* self, void* event);
void q_inputdialog_qbase_tablet_event(void* self, void* event);
void q_inputdialog_on_tablet_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_action_event(void* self, void* event);
void q_inputdialog_qbase_action_event(void* self, void* event);
void q_inputdialog_on_action_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_drag_enter_event(void* self, void* event);
void q_inputdialog_qbase_drag_enter_event(void* self, void* event);
void q_inputdialog_on_drag_enter_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_drag_move_event(void* self, void* event);
void q_inputdialog_qbase_drag_move_event(void* self, void* event);
void q_inputdialog_on_drag_move_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_drag_leave_event(void* self, void* event);
void q_inputdialog_qbase_drag_leave_event(void* self, void* event);
void q_inputdialog_on_drag_leave_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_drop_event(void* self, void* event);
void q_inputdialog_qbase_drop_event(void* self, void* event);
void q_inputdialog_on_drop_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_hide_event(void* self, void* event);
void q_inputdialog_qbase_hide_event(void* self, void* event);
void q_inputdialog_on_hide_event(void* self, void (*slot)(void*, void*));
bool q_inputdialog_native_event(void* self, const char* eventType, void* message, intptr_t* result);
bool q_inputdialog_qbase_native_event(void* self, const char* eventType, void* message, intptr_t* result);
void q_inputdialog_on_native_event(void* self, bool (*slot)(void*, const char*, void*, intptr_t*));
void q_inputdialog_change_event(void* self, void* param1);
void q_inputdialog_qbase_change_event(void* self, void* param1);
void q_inputdialog_on_change_event(void* self, void (*slot)(void*, void*));
int32_t q_inputdialog_metric(void* self, int64_t param1);
int32_t q_inputdialog_qbase_metric(void* self, int64_t param1);
void q_inputdialog_on_metric(void* self, int32_t (*slot)(void*, int64_t));
void q_inputdialog_init_painter(void* self, void* painter);
void q_inputdialog_qbase_init_painter(void* self, void* painter);
void q_inputdialog_on_init_painter(void* self, void (*slot)(void*, void*));
QPaintDevice* q_inputdialog_redirected(void* self, void* offset);
QPaintDevice* q_inputdialog_qbase_redirected(void* self, void* offset);
void q_inputdialog_on_redirected(void* self, QPaintDevice* (*slot)(void*, void*));
QPainter* q_inputdialog_shared_painter(void* self);
QPainter* q_inputdialog_qbase_shared_painter(void* self);
void q_inputdialog_on_shared_painter(void* self, QPainter* (*slot)());
void q_inputdialog_input_method_event(void* self, void* param1);
void q_inputdialog_qbase_input_method_event(void* self, void* param1);
void q_inputdialog_on_input_method_event(void* self, void (*slot)(void*, void*));
QVariant* q_inputdialog_input_method_query(void* self, int64_t param1);
QVariant* q_inputdialog_qbase_input_method_query(void* self, int64_t param1);
void q_inputdialog_on_input_method_query(void* self, QVariant* (*slot)(void*, int64_t));
bool q_inputdialog_focus_next_prev_child(void* self, bool next);
bool q_inputdialog_qbase_focus_next_prev_child(void* self, bool next);
void q_inputdialog_on_focus_next_prev_child(void* self, bool (*slot)(void*, bool));
void q_inputdialog_timer_event(void* self, void* event);
void q_inputdialog_qbase_timer_event(void* self, void* event);
void q_inputdialog_on_timer_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_child_event(void* self, void* event);
void q_inputdialog_qbase_child_event(void* self, void* event);
void q_inputdialog_on_child_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_custom_event(void* self, void* event);
void q_inputdialog_qbase_custom_event(void* self, void* event);
void q_inputdialog_on_custom_event(void* self, void (*slot)(void*, void*));
void q_inputdialog_connect_notify(void* self, void* signal);
void q_inputdialog_qbase_connect_notify(void* self, void* signal);
void q_inputdialog_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_inputdialog_disconnect_notify(void* self, void* signal);
void q_inputdialog_qbase_disconnect_notify(void* self, void* signal);
void q_inputdialog_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_inputdialog_adjust_position(void* self, void* param1);
void q_inputdialog_qbase_adjust_position(void* self, void* param1);
void q_inputdialog_on_adjust_position(void* self, void (*slot)(void*, void*));
void q_inputdialog_update_micro_focus(void* self);
void q_inputdialog_qbase_update_micro_focus(void* self);
void q_inputdialog_on_update_micro_focus(void* self, void (*slot)());
void q_inputdialog_create(void* self);
void q_inputdialog_qbase_create(void* self);
void q_inputdialog_on_create(void* self, void (*slot)());
void q_inputdialog_destroy(void* self);
void q_inputdialog_qbase_destroy(void* self);
void q_inputdialog_on_destroy(void* self, void (*slot)());
bool q_inputdialog_focus_next_child(void* self);
bool q_inputdialog_qbase_focus_next_child(void* self);
void q_inputdialog_on_focus_next_child(void* self, bool (*slot)());
bool q_inputdialog_focus_previous_child(void* self);
bool q_inputdialog_qbase_focus_previous_child(void* self);
void q_inputdialog_on_focus_previous_child(void* self, bool (*slot)());
QObject* q_inputdialog_sender(void* self);
QObject* q_inputdialog_qbase_sender(void* self);
void q_inputdialog_on_sender(void* self, QObject* (*slot)());
int32_t q_inputdialog_sender_signal_index(void* self);
int32_t q_inputdialog_qbase_sender_signal_index(void* self);
void q_inputdialog_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_inputdialog_receivers(void* self, const char* signal);
int32_t q_inputdialog_qbase_receivers(void* self, const char* signal);
void q_inputdialog_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_inputdialog_is_signal_connected(void* self, void* signal);
bool q_inputdialog_qbase_is_signal_connected(void* self, void* signal);
void q_inputdialog_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_inputdialog_delete(void* self);

/// https://doc.qt.io/qt-6/qinputdialog.html#types

typedef enum {
    QINPUTDIALOG_INPUTDIALOGOPTION_NOBUTTONS = 1,
    QINPUTDIALOG_INPUTDIALOGOPTION_USELISTVIEWFORCOMBOBOXITEMS = 2,
    QINPUTDIALOG_INPUTDIALOGOPTION_USEPLAINTEXTEDITFORTEXTINPUT = 4
} QInputDialog__InputDialogOption;

typedef enum {
    QINPUTDIALOG_INPUTMODE_TEXTINPUT = 0,
    QINPUTDIALOG_INPUTMODE_INTINPUT = 1,
    QINPUTDIALOG_INPUTMODE_DOUBLEINPUT = 2
} QInputDialog__InputMode;

#endif
