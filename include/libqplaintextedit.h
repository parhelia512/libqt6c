#pragma once
#ifndef SRCQT6C_LIBQPLAINTEXTEDIT_H
#define SRCQT6C_LIBQPLAINTEXTEDIT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqabstractscrollarea.h"
#include "libqabstracttextdocumentlayout.h"
#include "libqaction.h"
#include "libqevent.h"
#include "libqanystringview.h"
#include "libqbackingstore.h"
#include "libqbindingstorage.h"
#include "libqbitmap.h"
#include "libqcursor.h"
#include "libqfont.h"
#include "libqfontinfo.h"
#include "libqfontmetrics.h"
#include "libqframe.h"
#include "libqgraphicseffect.h"
#include "libqgraphicsproxywidget.h"
#include "libqicon.h"
#include "libqkeysequence.h"
#include "libqlayout.h"
#include "libqlocale.h"
#include "libqmargins.h"
#include "libqmenu.h"
#include "libqmetaobject.h"
#include "libqmimedata.h"
#include "libqobject.h"
#include "libqpagedpaintdevice.h"
#include "libqpaintdevice.h"
#include "libqpaintengine.h"
#include "libqpainter.h"
#include "libqpalette.h"
#include "libqpixmap.h"
#include "libqpoint.h"
#include "libqrect.h"
#include "libqregion.h"
#include "libqregularexpression.h"
#include "libqscreen.h"
#include "libqscrollbar.h"
#include "libqsize.h"
#include "libqsizepolicy.h"
#include <string.h>
#include "libqstyle.h"
#include "libqstyleoption.h"
#include "libqtextobject.h"
#include "libqtextformat.h"
#include "libqtextcursor.h"
#include "libqtextdocument.h"
#include "libqtextlayout.h"
#include "libqthread.h"
#include "libqurl.h"
#include "libqvariant.h"
#include "libqwidget.h"
#include "libqwindow.h"

QPlainTextEdit* q_plaintextedit_new(void* parent);
QPlainTextEdit* q_plaintextedit_new2();
QPlainTextEdit* q_plaintextedit_new3(const char* text);
QPlainTextEdit* q_plaintextedit_new4(const char* text, void* parent);
QMetaObject* q_plaintextedit_meta_object(void* self);
void* q_plaintextedit_metacast(void* self, const char* param1);
int32_t q_plaintextedit_metacall(void* self, int64_t param1, int param2, void* param3);
void q_plaintextedit_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_plaintextedit_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_plaintextedit_tr(const char* s);
void q_plaintextedit_set_document(void* self, void* document);
QTextDocument* q_plaintextedit_document(void* self);
void q_plaintextedit_set_placeholder_text(void* self, const char* placeholderText);
const char* q_plaintextedit_placeholder_text(void* self);
void q_plaintextedit_set_text_cursor(void* self, void* cursor);
QTextCursor* q_plaintextedit_text_cursor(void* self);
bool q_plaintextedit_is_read_only(void* self);
void q_plaintextedit_set_read_only(void* self, bool ro);
void q_plaintextedit_set_text_interaction_flags(void* self, int64_t flags);
int64_t q_plaintextedit_text_interaction_flags(void* self);
void q_plaintextedit_merge_current_char_format(void* self, void* modifier);
void q_plaintextedit_set_current_char_format(void* self, void* format);
QTextCharFormat* q_plaintextedit_current_char_format(void* self);
bool q_plaintextedit_tab_changes_focus(void* self);
void q_plaintextedit_set_tab_changes_focus(void* self, bool b);
void q_plaintextedit_set_document_title(void* self, const char* title);
const char* q_plaintextedit_document_title(void* self);
bool q_plaintextedit_is_undo_redo_enabled(void* self);
void q_plaintextedit_set_undo_redo_enabled(void* self, bool enable);
void q_plaintextedit_set_maximum_block_count(void* self, int maximum);
int32_t q_plaintextedit_maximum_block_count(void* self);
int64_t q_plaintextedit_line_wrap_mode(void* self);
void q_plaintextedit_set_line_wrap_mode(void* self, int64_t mode);
int64_t q_plaintextedit_word_wrap_mode(void* self);
void q_plaintextedit_set_word_wrap_mode(void* self, int64_t policy);
void q_plaintextedit_set_background_visible(void* self, bool visible);
bool q_plaintextedit_background_visible(void* self);
void q_plaintextedit_set_center_on_scroll(void* self, bool enabled);
bool q_plaintextedit_center_on_scroll(void* self);
bool q_plaintextedit_find(void* self, const char* exp);
bool q_plaintextedit_find_with_exp(void* self, void* exp);
const char* q_plaintextedit_to_plain_text(void* self);
void q_plaintextedit_ensure_cursor_visible(void* self);
QVariant* q_plaintextedit_load_resource(void* self, int typeVal, void* name);
void q_plaintextedit_on_load_resource(void* self, QVariant* (*slot)(void*, int, void*));
QVariant* q_plaintextedit_qbase_load_resource(void* self, int typeVal, void* name);
QMenu* q_plaintextedit_create_standard_context_menu(void* self);
QMenu* q_plaintextedit_create_standard_context_menu_with_position(void* self, void* position);
QTextCursor* q_plaintextedit_cursor_for_position(void* self, void* pos);
QRect* q_plaintextedit_cursor_rect(void* self, void* cursor);
QRect* q_plaintextedit_cursor_rect2(void* self);
const char* q_plaintextedit_anchor_at(void* self, void* pos);
bool q_plaintextedit_overwrite_mode(void* self);
void q_plaintextedit_set_overwrite_mode(void* self, bool overwrite);
double q_plaintextedit_tab_stop_distance(void* self);
void q_plaintextedit_set_tab_stop_distance(void* self, double distance);
int32_t q_plaintextedit_cursor_width(void* self);
void q_plaintextedit_set_cursor_width(void* self, int width);
void q_plaintextedit_set_extra_selections(void* self, void* selections[]);
libqt_list /* of QTextEdit__ExtraSelection* */ q_plaintextedit_extra_selections(void* self);
void q_plaintextedit_move_cursor(void* self, int64_t operation);
bool q_plaintextedit_can_paste(void* self);
void q_plaintextedit_print(void* self, void* printer);
int32_t q_plaintextedit_block_count(void* self);
QVariant* q_plaintextedit_input_method_query(void* self, int64_t property);
void q_plaintextedit_on_input_method_query(void* self, QVariant* (*slot)(void*, int64_t));
QVariant* q_plaintextedit_qbase_input_method_query(void* self, int64_t property);
QVariant* q_plaintextedit_input_method_query2(void* self, int64_t query, void* argument);
void q_plaintextedit_set_plain_text(void* self, const char* text);
void q_plaintextedit_cut(void* self);
void q_plaintextedit_copy(void* self);
void q_plaintextedit_paste(void* self);
void q_plaintextedit_undo(void* self);
void q_plaintextedit_redo(void* self);
void q_plaintextedit_clear(void* self);
void q_plaintextedit_select_all(void* self);
void q_plaintextedit_insert_plain_text(void* self, const char* text);
void q_plaintextedit_append_plain_text(void* self, const char* text);
void q_plaintextedit_append_html(void* self, const char* html);
void q_plaintextedit_center_cursor(void* self);
void q_plaintextedit_zoom_in(void* self);
void q_plaintextedit_zoom_out(void* self);
void q_plaintextedit_text_changed(void* self);
void q_plaintextedit_on_text_changed(void* self, void (*slot)(void*));
void q_plaintextedit_undo_available(void* self, bool b);
void q_plaintextedit_on_undo_available(void* self, void (*slot)(void*, bool));
void q_plaintextedit_redo_available(void* self, bool b);
void q_plaintextedit_on_redo_available(void* self, void (*slot)(void*, bool));
void q_plaintextedit_copy_available(void* self, bool b);
void q_plaintextedit_on_copy_available(void* self, void (*slot)(void*, bool));
void q_plaintextedit_selection_changed(void* self);
void q_plaintextedit_on_selection_changed(void* self, void (*slot)(void*));
void q_plaintextedit_cursor_position_changed(void* self);
void q_plaintextedit_on_cursor_position_changed(void* self, void (*slot)(void*));
void q_plaintextedit_update_request(void* self, void* rect, int dy);
void q_plaintextedit_on_update_request(void* self, void (*slot)(void*, void*, int));
void q_plaintextedit_block_count_changed(void* self, int newBlockCount);
void q_plaintextedit_on_block_count_changed(void* self, void (*slot)(void*, int));
void q_plaintextedit_modification_changed(void* self, bool param1);
void q_plaintextedit_on_modification_changed(void* self, void (*slot)(void*, bool));
bool q_plaintextedit_event(void* self, void* e);
void q_plaintextedit_on_event(void* self, bool (*slot)(void*, void*));
bool q_plaintextedit_qbase_event(void* self, void* e);
void q_plaintextedit_timer_event(void* self, void* e);
void q_plaintextedit_on_timer_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_timer_event(void* self, void* e);
void q_plaintextedit_key_press_event(void* self, void* e);
void q_plaintextedit_on_key_press_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_key_press_event(void* self, void* e);
void q_plaintextedit_key_release_event(void* self, void* e);
void q_plaintextedit_on_key_release_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_key_release_event(void* self, void* e);
void q_plaintextedit_resize_event(void* self, void* e);
void q_plaintextedit_on_resize_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_resize_event(void* self, void* e);
void q_plaintextedit_paint_event(void* self, void* e);
void q_plaintextedit_on_paint_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_paint_event(void* self, void* e);
void q_plaintextedit_mouse_press_event(void* self, void* e);
void q_plaintextedit_on_mouse_press_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_mouse_press_event(void* self, void* e);
void q_plaintextedit_mouse_move_event(void* self, void* e);
void q_plaintextedit_on_mouse_move_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_mouse_move_event(void* self, void* e);
void q_plaintextedit_mouse_release_event(void* self, void* e);
void q_plaintextedit_on_mouse_release_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_mouse_release_event(void* self, void* e);
void q_plaintextedit_mouse_double_click_event(void* self, void* e);
void q_plaintextedit_on_mouse_double_click_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_mouse_double_click_event(void* self, void* e);
bool q_plaintextedit_focus_next_prev_child(void* self, bool next);
void q_plaintextedit_on_focus_next_prev_child(void* self, bool (*slot)(void*, bool));
bool q_plaintextedit_qbase_focus_next_prev_child(void* self, bool next);
void q_plaintextedit_context_menu_event(void* self, void* e);
void q_plaintextedit_on_context_menu_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_context_menu_event(void* self, void* e);
void q_plaintextedit_drag_enter_event(void* self, void* e);
void q_plaintextedit_on_drag_enter_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_drag_enter_event(void* self, void* e);
void q_plaintextedit_drag_leave_event(void* self, void* e);
void q_plaintextedit_on_drag_leave_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_drag_leave_event(void* self, void* e);
void q_plaintextedit_drag_move_event(void* self, void* e);
void q_plaintextedit_on_drag_move_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_drag_move_event(void* self, void* e);
void q_plaintextedit_drop_event(void* self, void* e);
void q_plaintextedit_on_drop_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_drop_event(void* self, void* e);
void q_plaintextedit_focus_in_event(void* self, void* e);
void q_plaintextedit_on_focus_in_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_focus_in_event(void* self, void* e);
void q_plaintextedit_focus_out_event(void* self, void* e);
void q_plaintextedit_on_focus_out_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_focus_out_event(void* self, void* e);
void q_plaintextedit_show_event(void* self, void* param1);
void q_plaintextedit_on_show_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_show_event(void* self, void* param1);
void q_plaintextedit_change_event(void* self, void* e);
void q_plaintextedit_on_change_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_change_event(void* self, void* e);
void q_plaintextedit_wheel_event(void* self, void* e);
void q_plaintextedit_on_wheel_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_wheel_event(void* self, void* e);
QMimeData* q_plaintextedit_create_mime_data_from_selection(void* self);
void q_plaintextedit_on_create_mime_data_from_selection(void* self, QMimeData* (*slot)());
QMimeData* q_plaintextedit_qbase_create_mime_data_from_selection(void* self);
bool q_plaintextedit_can_insert_from_mime_data(void* self, void* source);
void q_plaintextedit_on_can_insert_from_mime_data(void* self, bool (*slot)(void*, void*));
bool q_plaintextedit_qbase_can_insert_from_mime_data(void* self, void* source);
void q_plaintextedit_insert_from_mime_data(void* self, void* source);
void q_plaintextedit_on_insert_from_mime_data(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_insert_from_mime_data(void* self, void* source);
void q_plaintextedit_input_method_event(void* self, void* param1);
void q_plaintextedit_on_input_method_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_input_method_event(void* self, void* param1);
void q_plaintextedit_scroll_contents_by(void* self, int dx, int dy);
void q_plaintextedit_on_scroll_contents_by(void* self, void (*slot)(void*, int, int));
void q_plaintextedit_qbase_scroll_contents_by(void* self, int dx, int dy);
void q_plaintextedit_do_set_text_cursor(void* self, void* cursor);
void q_plaintextedit_on_do_set_text_cursor(void* self, void (*slot)(void*, void*));
void q_plaintextedit_qbase_do_set_text_cursor(void* self, void* cursor);
QTextBlock* q_plaintextedit_first_visible_block(void* self);
void q_plaintextedit_on_first_visible_block(void* self, QTextBlock* (*slot)());
QTextBlock* q_plaintextedit_qbase_first_visible_block(void* self);
QPointF* q_plaintextedit_content_offset(void* self);
void q_plaintextedit_on_content_offset(void* self, QPointF* (*slot)());
QPointF* q_plaintextedit_qbase_content_offset(void* self);
QRectF* q_plaintextedit_block_bounding_rect(void* self, void* block);
void q_plaintextedit_on_block_bounding_rect(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_plaintextedit_qbase_block_bounding_rect(void* self, void* block);
QRectF* q_plaintextedit_block_bounding_geometry(void* self, void* block);
void q_plaintextedit_on_block_bounding_geometry(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_plaintextedit_qbase_block_bounding_geometry(void* self, void* block);
QAbstractTextDocumentLayout__PaintContext* q_plaintextedit_get_paint_context(void* self);
void q_plaintextedit_on_get_paint_context(void* self, QAbstractTextDocumentLayout__PaintContext* (*slot)());
QAbstractTextDocumentLayout__PaintContext* q_plaintextedit_qbase_get_paint_context(void* self);
void q_plaintextedit_zoom_in_f(void* self, float range);
void q_plaintextedit_on_zoom_in_f(void* self, void (*slot)(void*, float));
void q_plaintextedit_qbase_zoom_in_f(void* self, float range);
const char* q_plaintextedit_tr2(const char* s, const char* c);
const char* q_plaintextedit_tr3(const char* s, const char* c, int n);
bool q_plaintextedit_find2(void* self, const char* exp, int64_t options);
bool q_plaintextedit_find22(void* self, void* exp, int64_t options);
void q_plaintextedit_move_cursor2(void* self, int64_t operation, int64_t mode);
void q_plaintextedit_zoom_in1(void* self, int range);
void q_plaintextedit_zoom_out1(void* self, int range);
int64_t q_plaintextedit_vertical_scroll_bar_policy(void* self);
void q_plaintextedit_set_vertical_scroll_bar_policy(void* self, int64_t verticalScrollBarPolicy);
QScrollBar* q_plaintextedit_vertical_scroll_bar(void* self);
void q_plaintextedit_set_vertical_scroll_bar(void* self, void* scrollbar);
int64_t q_plaintextedit_horizontal_scroll_bar_policy(void* self);
void q_plaintextedit_set_horizontal_scroll_bar_policy(void* self, int64_t horizontalScrollBarPolicy);
QScrollBar* q_plaintextedit_horizontal_scroll_bar(void* self);
void q_plaintextedit_set_horizontal_scroll_bar(void* self, void* scrollbar);
QWidget* q_plaintextedit_corner_widget(void* self);
void q_plaintextedit_set_corner_widget(void* self, void* widget);
void q_plaintextedit_add_scroll_bar_widget(void* self, void* widget, int64_t alignment);
libqt_list /* of QWidget* */ q_plaintextedit_scroll_bar_widgets(void* self, int64_t alignment);
QWidget* q_plaintextedit_viewport(void* self);
void q_plaintextedit_set_viewport(void* self, void* widget);
QSize* q_plaintextedit_maximum_viewport_size(void* self);
int64_t q_plaintextedit_size_adjust_policy(void* self);
void q_plaintextedit_set_size_adjust_policy(void* self, int64_t policy);
int32_t q_plaintextedit_frame_style(void* self);
void q_plaintextedit_set_frame_style(void* self, int frameStyle);
int32_t q_plaintextedit_frame_width(void* self);
int64_t q_plaintextedit_frame_shape(void* self);
void q_plaintextedit_set_frame_shape(void* self, int64_t frameShape);
int64_t q_plaintextedit_frame_shadow(void* self);
void q_plaintextedit_set_frame_shadow(void* self, int64_t frameShadow);
int32_t q_plaintextedit_line_width(void* self);
void q_plaintextedit_set_line_width(void* self, int lineWidth);
int32_t q_plaintextedit_mid_line_width(void* self);
void q_plaintextedit_set_mid_line_width(void* self, int midLineWidth);
QRect* q_plaintextedit_frame_rect(void* self);
void q_plaintextedit_set_frame_rect(void* self, void* frameRect);
uintptr_t q_plaintextedit_win_id(void* self);
void q_plaintextedit_create_win_id(void* self);
uintptr_t q_plaintextedit_internal_win_id(void* self);
uintptr_t q_plaintextedit_effective_win_id(void* self);
QStyle* q_plaintextedit_style(void* self);
void q_plaintextedit_set_style(void* self, void* style);
bool q_plaintextedit_is_top_level(void* self);
bool q_plaintextedit_is_window(void* self);
bool q_plaintextedit_is_modal(void* self);
int64_t q_plaintextedit_window_modality(void* self);
void q_plaintextedit_set_window_modality(void* self, int64_t windowModality);
bool q_plaintextedit_is_enabled(void* self);
bool q_plaintextedit_is_enabled_to(void* self, void* param1);
void q_plaintextedit_set_enabled(void* self, bool enabled);
void q_plaintextedit_set_disabled(void* self, bool disabled);
void q_plaintextedit_set_window_modified(void* self, bool windowModified);
QRect* q_plaintextedit_frame_geometry(void* self);
QRect* q_plaintextedit_geometry(void* self);
QRect* q_plaintextedit_normal_geometry(void* self);
int32_t q_plaintextedit_x(void* self);
int32_t q_plaintextedit_y(void* self);
QPoint* q_plaintextedit_pos(void* self);
QSize* q_plaintextedit_frame_size(void* self);
QSize* q_plaintextedit_size(void* self);
int32_t q_plaintextedit_width(void* self);
int32_t q_plaintextedit_height(void* self);
QRect* q_plaintextedit_rect(void* self);
QRect* q_plaintextedit_children_rect(void* self);
QRegion* q_plaintextedit_children_region(void* self);
QSize* q_plaintextedit_minimum_size(void* self);
QSize* q_plaintextedit_maximum_size(void* self);
int32_t q_plaintextedit_minimum_width(void* self);
int32_t q_plaintextedit_minimum_height(void* self);
int32_t q_plaintextedit_maximum_width(void* self);
int32_t q_plaintextedit_maximum_height(void* self);
void q_plaintextedit_set_minimum_size(void* self, void* minimumSize);
void q_plaintextedit_set_minimum_size2(void* self, int minw, int minh);
void q_plaintextedit_set_maximum_size(void* self, void* maximumSize);
void q_plaintextedit_set_maximum_size2(void* self, int maxw, int maxh);
void q_plaintextedit_set_minimum_width(void* self, int minw);
void q_plaintextedit_set_minimum_height(void* self, int minh);
void q_plaintextedit_set_maximum_width(void* self, int maxw);
void q_plaintextedit_set_maximum_height(void* self, int maxh);
QSize* q_plaintextedit_size_increment(void* self);
void q_plaintextedit_set_size_increment(void* self, void* sizeIncrement);
void q_plaintextedit_set_size_increment2(void* self, int w, int h);
QSize* q_plaintextedit_base_size(void* self);
void q_plaintextedit_set_base_size(void* self, void* baseSize);
void q_plaintextedit_set_base_size2(void* self, int basew, int baseh);
void q_plaintextedit_set_fixed_size(void* self, void* fixedSize);
void q_plaintextedit_set_fixed_size2(void* self, int w, int h);
void q_plaintextedit_set_fixed_width(void* self, int w);
void q_plaintextedit_set_fixed_height(void* self, int h);
QPointF* q_plaintextedit_map_to_global(void* self, void* param1);
QPoint* q_plaintextedit_map_to_global_with_q_point(void* self, void* param1);
QPointF* q_plaintextedit_map_from_global(void* self, void* param1);
QPoint* q_plaintextedit_map_from_global_with_q_point(void* self, void* param1);
QPointF* q_plaintextedit_map_to_parent(void* self, void* param1);
QPoint* q_plaintextedit_map_to_parent_with_q_point(void* self, void* param1);
QPointF* q_plaintextedit_map_from_parent(void* self, void* param1);
QPoint* q_plaintextedit_map_from_parent_with_q_point(void* self, void* param1);
QPointF* q_plaintextedit_map_to(void* self, void* param1, void* param2);
QPoint* q_plaintextedit_map_to2(void* self, void* param1, void* param2);
QPointF* q_plaintextedit_map_from(void* self, void* param1, void* param2);
QPoint* q_plaintextedit_map_from2(void* self, void* param1, void* param2);
QWidget* q_plaintextedit_window(void* self);
QWidget* q_plaintextedit_native_parent_widget(void* self);
QWidget* q_plaintextedit_top_level_widget(void* self);
QPalette* q_plaintextedit_palette(void* self);
void q_plaintextedit_set_palette(void* self, void* palette);
void q_plaintextedit_set_background_role(void* self, int64_t backgroundRole);
int64_t q_plaintextedit_background_role(void* self);
void q_plaintextedit_set_foreground_role(void* self, int64_t foregroundRole);
int64_t q_plaintextedit_foreground_role(void* self);
QFont* q_plaintextedit_font(void* self);
void q_plaintextedit_set_font(void* self, void* font);
QFontMetrics* q_plaintextedit_font_metrics(void* self);
QFontInfo* q_plaintextedit_font_info(void* self);
QCursor* q_plaintextedit_cursor(void* self);
void q_plaintextedit_set_cursor(void* self, void* cursor);
void q_plaintextedit_unset_cursor(void* self);
void q_plaintextedit_set_mouse_tracking(void* self, bool enable);
bool q_plaintextedit_has_mouse_tracking(void* self);
bool q_plaintextedit_under_mouse(void* self);
void q_plaintextedit_set_tablet_tracking(void* self, bool enable);
bool q_plaintextedit_has_tablet_tracking(void* self);
void q_plaintextedit_set_mask(void* self, void* mask);
void q_plaintextedit_set_mask_with_mask(void* self, void* mask);
QRegion* q_plaintextedit_mask(void* self);
void q_plaintextedit_clear_mask(void* self);
void q_plaintextedit_render(void* self, void* target);
void q_plaintextedit_render_with_painter(void* self, void* painter);
QPixmap* q_plaintextedit_grab(void* self);
QGraphicsEffect* q_plaintextedit_graphics_effect(void* self);
void q_plaintextedit_set_graphics_effect(void* self, void* effect);
void q_plaintextedit_grab_gesture(void* self, int64_t typeVal);
void q_plaintextedit_ungrab_gesture(void* self, int64_t typeVal);
void q_plaintextedit_set_window_title(void* self, const char* windowTitle);
void q_plaintextedit_set_style_sheet(void* self, const char* styleSheet);
const char* q_plaintextedit_style_sheet(void* self);
const char* q_plaintextedit_window_title(void* self);
void q_plaintextedit_set_window_icon(void* self, void* icon);
QIcon* q_plaintextedit_window_icon(void* self);
void q_plaintextedit_set_window_icon_text(void* self, const char* windowIconText);
const char* q_plaintextedit_window_icon_text(void* self);
void q_plaintextedit_set_window_role(void* self, const char* windowRole);
const char* q_plaintextedit_window_role(void* self);
void q_plaintextedit_set_window_file_path(void* self, const char* filePath);
const char* q_plaintextedit_window_file_path(void* self);
void q_plaintextedit_set_window_opacity(void* self, double level);
double q_plaintextedit_window_opacity(void* self);
bool q_plaintextedit_is_window_modified(void* self);
void q_plaintextedit_set_tool_tip(void* self, const char* toolTip);
const char* q_plaintextedit_tool_tip(void* self);
void q_plaintextedit_set_tool_tip_duration(void* self, int msec);
int32_t q_plaintextedit_tool_tip_duration(void* self);
void q_plaintextedit_set_status_tip(void* self, const char* statusTip);
const char* q_plaintextedit_status_tip(void* self);
void q_plaintextedit_set_whats_this(void* self, const char* whatsThis);
const char* q_plaintextedit_whats_this(void* self);
const char* q_plaintextedit_accessible_name(void* self);
void q_plaintextedit_set_accessible_name(void* self, const char* name);
const char* q_plaintextedit_accessible_description(void* self);
void q_plaintextedit_set_accessible_description(void* self, const char* description);
void q_plaintextedit_set_layout_direction(void* self, int64_t direction);
int64_t q_plaintextedit_layout_direction(void* self);
void q_plaintextedit_unset_layout_direction(void* self);
void q_plaintextedit_set_locale(void* self, void* locale);
QLocale* q_plaintextedit_locale(void* self);
void q_plaintextedit_unset_locale(void* self);
bool q_plaintextedit_is_right_to_left(void* self);
bool q_plaintextedit_is_left_to_right(void* self);
void q_plaintextedit_set_focus(void* self);
bool q_plaintextedit_is_active_window(void* self);
void q_plaintextedit_activate_window(void* self);
void q_plaintextedit_clear_focus(void* self);
void q_plaintextedit_set_focus_with_reason(void* self, int64_t reason);
int64_t q_plaintextedit_focus_policy(void* self);
void q_plaintextedit_set_focus_policy(void* self, int64_t policy);
bool q_plaintextedit_has_focus(void* self);
void q_plaintextedit_set_tab_order(void* param1, void* param2);
void q_plaintextedit_set_focus_proxy(void* self, void* focusProxy);
QWidget* q_plaintextedit_focus_proxy(void* self);
int64_t q_plaintextedit_context_menu_policy(void* self);
void q_plaintextedit_set_context_menu_policy(void* self, int64_t policy);
void q_plaintextedit_grab_mouse(void* self);
void q_plaintextedit_grab_mouse_with_q_cursor(void* self, void* param1);
void q_plaintextedit_release_mouse(void* self);
void q_plaintextedit_grab_keyboard(void* self);
void q_plaintextedit_release_keyboard(void* self);
int32_t q_plaintextedit_grab_shortcut(void* self, void* key);
void q_plaintextedit_release_shortcut(void* self, int id);
void q_plaintextedit_set_shortcut_enabled(void* self, int id);
void q_plaintextedit_set_shortcut_auto_repeat(void* self, int id);
QWidget* q_plaintextedit_mouse_grabber();
QWidget* q_plaintextedit_keyboard_grabber();
bool q_plaintextedit_updates_enabled(void* self);
void q_plaintextedit_set_updates_enabled(void* self, bool enable);
QGraphicsProxyWidget* q_plaintextedit_graphics_proxy_widget(void* self);
void q_plaintextedit_update(void* self);
void q_plaintextedit_repaint(void* self);
void q_plaintextedit_update2(void* self, int x, int y, int w, int h);
void q_plaintextedit_update_with_q_rect(void* self, void* param1);
void q_plaintextedit_update_with_q_region(void* self, void* param1);
void q_plaintextedit_repaint2(void* self, int x, int y, int w, int h);
void q_plaintextedit_repaint_with_q_rect(void* self, void* param1);
void q_plaintextedit_repaint_with_q_region(void* self, void* param1);
void q_plaintextedit_set_hidden(void* self, bool hidden);
void q_plaintextedit_show(void* self);
void q_plaintextedit_hide(void* self);
void q_plaintextedit_show_minimized(void* self);
void q_plaintextedit_show_maximized(void* self);
void q_plaintextedit_show_full_screen(void* self);
void q_plaintextedit_show_normal(void* self);
bool q_plaintextedit_close(void* self);
void q_plaintextedit_raise(void* self);
void q_plaintextedit_lower(void* self);
void q_plaintextedit_stack_under(void* self, void* param1);
void q_plaintextedit_move(void* self, int x, int y);
void q_plaintextedit_move_with_q_point(void* self, void* param1);
void q_plaintextedit_resize(void* self, int w, int h);
void q_plaintextedit_resize_with_q_size(void* self, void* param1);
void q_plaintextedit_set_geometry(void* self, int x, int y, int w, int h);
void q_plaintextedit_set_geometry_with_geometry(void* self, void* geometry);
char* q_plaintextedit_save_geometry(void* self);
bool q_plaintextedit_restore_geometry(void* self, const char* geometry);
void q_plaintextedit_adjust_size(void* self);
bool q_plaintextedit_is_visible(void* self);
bool q_plaintextedit_is_visible_to(void* self, void* param1);
bool q_plaintextedit_is_hidden(void* self);
bool q_plaintextedit_is_minimized(void* self);
bool q_plaintextedit_is_maximized(void* self);
bool q_plaintextedit_is_full_screen(void* self);
int64_t q_plaintextedit_window_state(void* self);
void q_plaintextedit_set_window_state(void* self, int64_t state);
void q_plaintextedit_override_window_state(void* self, int64_t state);
QSizePolicy* q_plaintextedit_size_policy(void* self);
void q_plaintextedit_set_size_policy(void* self, void* sizePolicy);
void q_plaintextedit_set_size_policy2(void* self, int64_t horizontal, int64_t vertical);
QRegion* q_plaintextedit_visible_region(void* self);
void q_plaintextedit_set_contents_margins(void* self, int left, int top, int right, int bottom);
void q_plaintextedit_set_contents_margins_with_margins(void* self, void* margins);
QMargins* q_plaintextedit_contents_margins(void* self);
QRect* q_plaintextedit_contents_rect(void* self);
QLayout* q_plaintextedit_layout(void* self);
void q_plaintextedit_set_layout(void* self, void* layout);
void q_plaintextedit_update_geometry(void* self);
void q_plaintextedit_set_parent(void* self, void* parent);
void q_plaintextedit_set_parent2(void* self, void* parent, int64_t f);
void q_plaintextedit_scroll(void* self, int dx, int dy);
void q_plaintextedit_scroll2(void* self, int dx, int dy, void* param3);
QWidget* q_plaintextedit_focus_widget(void* self);
QWidget* q_plaintextedit_next_in_focus_chain(void* self);
QWidget* q_plaintextedit_previous_in_focus_chain(void* self);
bool q_plaintextedit_accept_drops(void* self);
void q_plaintextedit_set_accept_drops(void* self, bool on);
void q_plaintextedit_add_action(void* self, void* action);
void q_plaintextedit_add_actions(void* self, void* actions[]);
void q_plaintextedit_insert_actions(void* self, void* before, void* actions[]);
void q_plaintextedit_insert_action(void* self, void* before, void* action);
void q_plaintextedit_remove_action(void* self, void* action);
libqt_list /* of QAction* */ q_plaintextedit_actions(void* self);
QAction* q_plaintextedit_add_action_with_text(void* self, const char* text);
QAction* q_plaintextedit_add_action2(void* self, void* icon, const char* text);
QAction* q_plaintextedit_add_action3(void* self, const char* text, void* shortcut);
QAction* q_plaintextedit_add_action4(void* self, void* icon, const char* text, void* shortcut);
QWidget* q_plaintextedit_parent_widget(void* self);
void q_plaintextedit_set_window_flags(void* self, int64_t typeVal);
int64_t q_plaintextedit_window_flags(void* self);
void q_plaintextedit_set_window_flag(void* self, int64_t param1);
void q_plaintextedit_override_window_flags(void* self, int64_t typeVal);
int64_t q_plaintextedit_window_type(void* self);
QWidget* q_plaintextedit_child_at(void* self, int x, int y);
QWidget* q_plaintextedit_child_at_with_q_point(void* self, void* p);
void q_plaintextedit_set_attribute(void* self, int64_t param1);
bool q_plaintextedit_test_attribute(void* self, int64_t param1);
void q_plaintextedit_ensure_polished(void* self);
bool q_plaintextedit_is_ancestor_of(void* self, void* child);
bool q_plaintextedit_auto_fill_background(void* self);
void q_plaintextedit_set_auto_fill_background(void* self, bool enabled);
QBackingStore* q_plaintextedit_backing_store(void* self);
QWindow* q_plaintextedit_window_handle(void* self);
QScreen* q_plaintextedit_screen(void* self);
void q_plaintextedit_set_screen(void* self, void* screen);
QWidget* q_plaintextedit_create_window_container(void* window);
void q_plaintextedit_window_title_changed(void* self, const char* title);
void q_plaintextedit_on_window_title_changed(void* self, void (*slot)(void*, const char*));
void q_plaintextedit_window_icon_changed(void* self, void* icon);
void q_plaintextedit_on_window_icon_changed(void* self, void (*slot)(void*, void*));
void q_plaintextedit_window_icon_text_changed(void* self, const char* iconText);
void q_plaintextedit_on_window_icon_text_changed(void* self, void (*slot)(void*, const char*));
void q_plaintextedit_custom_context_menu_requested(void* self, void* pos);
void q_plaintextedit_on_custom_context_menu_requested(void* self, void (*slot)(void*, void*));
int64_t q_plaintextedit_input_method_hints(void* self);
void q_plaintextedit_set_input_method_hints(void* self, int64_t hints);
void q_plaintextedit_render2(void* self, void* target, void* targetOffset);
void q_plaintextedit_render3(void* self, void* target, void* targetOffset, void* sourceRegion);
void q_plaintextedit_render4(void* self, void* target, void* targetOffset, void* sourceRegion, int64_t renderFlags);
void q_plaintextedit_render22(void* self, void* painter, void* targetOffset);
void q_plaintextedit_render32(void* self, void* painter, void* targetOffset, void* sourceRegion);
void q_plaintextedit_render42(void* self, void* painter, void* targetOffset, void* sourceRegion, int64_t renderFlags);
QPixmap* q_plaintextedit_grab1(void* self, void* rectangle);
void q_plaintextedit_grab_gesture2(void* self, int64_t typeVal, int64_t flags);
int32_t q_plaintextedit_grab_shortcut2(void* self, void* key, int64_t context);
void q_plaintextedit_set_shortcut_enabled2(void* self, int id, bool enable);
void q_plaintextedit_set_shortcut_auto_repeat2(void* self, int id, bool enable);
void q_plaintextedit_set_window_flag2(void* self, int64_t param1, bool on);
void q_plaintextedit_set_attribute2(void* self, int64_t param1, bool on);
QWidget* q_plaintextedit_create_window_container2(void* window, void* parent);
QWidget* q_plaintextedit_create_window_container3(void* window, void* parent, int64_t flags);
const char* q_plaintextedit_object_name(void* self);
void q_plaintextedit_set_object_name(void* self, const char* name);
bool q_plaintextedit_is_widget_type(void* self);
bool q_plaintextedit_is_window_type(void* self);
bool q_plaintextedit_is_quick_item_type(void* self);
bool q_plaintextedit_signals_blocked(void* self);
bool q_plaintextedit_block_signals(void* self, bool b);
QThread* q_plaintextedit_thread(void* self);
void q_plaintextedit_move_to_thread(void* self, void* thread);
int32_t q_plaintextedit_start_timer(void* self, int interval);
void q_plaintextedit_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_plaintextedit_children(void* self);
void q_plaintextedit_install_event_filter(void* self, void* filterObj);
void q_plaintextedit_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_plaintextedit_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_plaintextedit_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_plaintextedit_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_plaintextedit_disconnect_with_q_meta_object_connection(void* param1);
void q_plaintextedit_dump_object_tree(void* self);
void q_plaintextedit_dump_object_info(void* self);
bool q_plaintextedit_set_property(void* self, const char* name, void* value);
QVariant* q_plaintextedit_property(void* self, const char* name);
const char** q_plaintextedit_dynamic_property_names(void* self);
QBindingStorage* q_plaintextedit_binding_storage(void* self);
QBindingStorage* q_plaintextedit_binding_storage2(void* self);
void q_plaintextedit_destroyed(void* self);
void q_plaintextedit_on_destroyed(void* self, void (*slot)(void*));
QObject* q_plaintextedit_parent(void* self);
bool q_plaintextedit_inherits(void* self, const char* classname);
void q_plaintextedit_delete_later(void* self);
int32_t q_plaintextedit_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_plaintextedit_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_plaintextedit_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_plaintextedit_destroyed1(void* self, void* param1);
void q_plaintextedit_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_plaintextedit_painting_active(void* self);
int32_t q_plaintextedit_width_m_m(void* self);
int32_t q_plaintextedit_height_m_m(void* self);
int32_t q_plaintextedit_logical_dpi_x(void* self);
int32_t q_plaintextedit_logical_dpi_y(void* self);
int32_t q_plaintextedit_physical_dpi_x(void* self);
int32_t q_plaintextedit_physical_dpi_y(void* self);
double q_plaintextedit_device_pixel_ratio(void* self);
double q_plaintextedit_device_pixel_ratio_f(void* self);
int32_t q_plaintextedit_color_count(void* self);
int32_t q_plaintextedit_depth(void* self);
double q_plaintextedit_device_pixel_ratio_f_scale();
QSize* q_plaintextedit_minimum_size_hint(void* self);
QSize* q_plaintextedit_qbase_minimum_size_hint(void* self);
void q_plaintextedit_on_minimum_size_hint(void* self, QSize* (*slot)());
QSize* q_plaintextedit_size_hint(void* self);
QSize* q_plaintextedit_qbase_size_hint(void* self);
void q_plaintextedit_on_size_hint(void* self, QSize* (*slot)());
void q_plaintextedit_setup_viewport(void* self, void* viewport);
void q_plaintextedit_qbase_setup_viewport(void* self, void* viewport);
void q_plaintextedit_on_setup_viewport(void* self, void (*slot)(void*, void*));
bool q_plaintextedit_event_filter(void* self, void* param1, void* param2);
bool q_plaintextedit_qbase_event_filter(void* self, void* param1, void* param2);
void q_plaintextedit_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
bool q_plaintextedit_viewport_event(void* self, void* param1);
bool q_plaintextedit_qbase_viewport_event(void* self, void* param1);
void q_plaintextedit_on_viewport_event(void* self, bool (*slot)(void*, void*));
QSize* q_plaintextedit_viewport_size_hint(void* self);
QSize* q_plaintextedit_qbase_viewport_size_hint(void* self);
void q_plaintextedit_on_viewport_size_hint(void* self, QSize* (*slot)());
void q_plaintextedit_init_style_option(void* self, void* option);
void q_plaintextedit_qbase_init_style_option(void* self, void* option);
void q_plaintextedit_on_init_style_option(void* self, void (*slot)(void*, void*));
int32_t q_plaintextedit_dev_type(void* self);
int32_t q_plaintextedit_qbase_dev_type(void* self);
void q_plaintextedit_on_dev_type(void* self, int32_t (*slot)());
void q_plaintextedit_set_visible(void* self, bool visible);
void q_plaintextedit_qbase_set_visible(void* self, bool visible);
void q_plaintextedit_on_set_visible(void* self, void (*slot)(void*, bool));
int32_t q_plaintextedit_height_for_width(void* self, int param1);
int32_t q_plaintextedit_qbase_height_for_width(void* self, int param1);
void q_plaintextedit_on_height_for_width(void* self, int32_t (*slot)(void*, int));
bool q_plaintextedit_has_height_for_width(void* self);
bool q_plaintextedit_qbase_has_height_for_width(void* self);
void q_plaintextedit_on_has_height_for_width(void* self, bool (*slot)());
QPaintEngine* q_plaintextedit_paint_engine(void* self);
QPaintEngine* q_plaintextedit_qbase_paint_engine(void* self);
void q_plaintextedit_on_paint_engine(void* self, QPaintEngine* (*slot)());
void q_plaintextedit_enter_event(void* self, void* event);
void q_plaintextedit_qbase_enter_event(void* self, void* event);
void q_plaintextedit_on_enter_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_leave_event(void* self, void* event);
void q_plaintextedit_qbase_leave_event(void* self, void* event);
void q_plaintextedit_on_leave_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_move_event(void* self, void* event);
void q_plaintextedit_qbase_move_event(void* self, void* event);
void q_plaintextedit_on_move_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_close_event(void* self, void* event);
void q_plaintextedit_qbase_close_event(void* self, void* event);
void q_plaintextedit_on_close_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_tablet_event(void* self, void* event);
void q_plaintextedit_qbase_tablet_event(void* self, void* event);
void q_plaintextedit_on_tablet_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_action_event(void* self, void* event);
void q_plaintextedit_qbase_action_event(void* self, void* event);
void q_plaintextedit_on_action_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_hide_event(void* self, void* event);
void q_plaintextedit_qbase_hide_event(void* self, void* event);
void q_plaintextedit_on_hide_event(void* self, void (*slot)(void*, void*));
bool q_plaintextedit_native_event(void* self, const char* eventType, void* message, intptr_t* result);
bool q_plaintextedit_qbase_native_event(void* self, const char* eventType, void* message, intptr_t* result);
void q_plaintextedit_on_native_event(void* self, bool (*slot)(void*, const char*, void*, intptr_t*));
int32_t q_plaintextedit_metric(void* self, int64_t param1);
int32_t q_plaintextedit_qbase_metric(void* self, int64_t param1);
void q_plaintextedit_on_metric(void* self, int32_t (*slot)(void*, int64_t));
void q_plaintextedit_init_painter(void* self, void* painter);
void q_plaintextedit_qbase_init_painter(void* self, void* painter);
void q_plaintextedit_on_init_painter(void* self, void (*slot)(void*, void*));
QPaintDevice* q_plaintextedit_redirected(void* self, void* offset);
QPaintDevice* q_plaintextedit_qbase_redirected(void* self, void* offset);
void q_plaintextedit_on_redirected(void* self, QPaintDevice* (*slot)(void*, void*));
QPainter* q_plaintextedit_shared_painter(void* self);
QPainter* q_plaintextedit_qbase_shared_painter(void* self);
void q_plaintextedit_on_shared_painter(void* self, QPainter* (*slot)());
void q_plaintextedit_child_event(void* self, void* event);
void q_plaintextedit_qbase_child_event(void* self, void* event);
void q_plaintextedit_on_child_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_custom_event(void* self, void* event);
void q_plaintextedit_qbase_custom_event(void* self, void* event);
void q_plaintextedit_on_custom_event(void* self, void (*slot)(void*, void*));
void q_plaintextedit_connect_notify(void* self, void* signal);
void q_plaintextedit_qbase_connect_notify(void* self, void* signal);
void q_plaintextedit_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_plaintextedit_disconnect_notify(void* self, void* signal);
void q_plaintextedit_qbase_disconnect_notify(void* self, void* signal);
void q_plaintextedit_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_plaintextedit_set_viewport_margins(void* self, int left, int top, int right, int bottom);
void q_plaintextedit_qbase_set_viewport_margins(void* self, int left, int top, int right, int bottom);
void q_plaintextedit_on_set_viewport_margins(void* self, void (*slot)(void*, int, int, int, int));
QMargins* q_plaintextedit_viewport_margins(void* self);
QMargins* q_plaintextedit_qbase_viewport_margins(void* self);
void q_plaintextedit_on_viewport_margins(void* self, QMargins* (*slot)());
void q_plaintextedit_draw_frame(void* self, void* param1);
void q_plaintextedit_qbase_draw_frame(void* self, void* param1);
void q_plaintextedit_on_draw_frame(void* self, void (*slot)(void*, void*));
void q_plaintextedit_update_micro_focus(void* self);
void q_plaintextedit_qbase_update_micro_focus(void* self);
void q_plaintextedit_on_update_micro_focus(void* self, void (*slot)());
void q_plaintextedit_create(void* self);
void q_plaintextedit_qbase_create(void* self);
void q_plaintextedit_on_create(void* self, void (*slot)());
void q_plaintextedit_destroy(void* self);
void q_plaintextedit_qbase_destroy(void* self);
void q_plaintextedit_on_destroy(void* self, void (*slot)());
bool q_plaintextedit_focus_next_child(void* self);
bool q_plaintextedit_qbase_focus_next_child(void* self);
void q_plaintextedit_on_focus_next_child(void* self, bool (*slot)());
bool q_plaintextedit_focus_previous_child(void* self);
bool q_plaintextedit_qbase_focus_previous_child(void* self);
void q_plaintextedit_on_focus_previous_child(void* self, bool (*slot)());
QObject* q_plaintextedit_sender(void* self);
QObject* q_plaintextedit_qbase_sender(void* self);
void q_plaintextedit_on_sender(void* self, QObject* (*slot)());
int32_t q_plaintextedit_sender_signal_index(void* self);
int32_t q_plaintextedit_qbase_sender_signal_index(void* self);
void q_plaintextedit_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_plaintextedit_receivers(void* self, const char* signal);
int32_t q_plaintextedit_qbase_receivers(void* self, const char* signal);
void q_plaintextedit_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_plaintextedit_is_signal_connected(void* self, void* signal);
bool q_plaintextedit_qbase_is_signal_connected(void* self, void* signal);
void q_plaintextedit_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_plaintextedit_delete(void* self);

QPlainTextDocumentLayout* q_plaintextdocumentlayout_new(void* document);
QMetaObject* q_plaintextdocumentlayout_meta_object(void* self);
void* q_plaintextdocumentlayout_metacast(void* self, const char* param1);
int32_t q_plaintextdocumentlayout_metacall(void* self, int64_t param1, int param2, void* param3);
void q_plaintextdocumentlayout_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_plaintextdocumentlayout_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_plaintextdocumentlayout_tr(const char* s);
void q_plaintextdocumentlayout_draw(void* self, void* param1, void* param2);
void q_plaintextdocumentlayout_on_draw(void* self, void (*slot)(void*, void*, void*));
void q_plaintextdocumentlayout_qbase_draw(void* self, void* param1, void* param2);
int32_t q_plaintextdocumentlayout_hit_test(void* self, void* param1, int64_t param2);
void q_plaintextdocumentlayout_on_hit_test(void* self, int32_t (*slot)(void*, void*, int64_t));
int32_t q_plaintextdocumentlayout_qbase_hit_test(void* self, void* param1, int64_t param2);
int32_t q_plaintextdocumentlayout_page_count(void* self);
void q_plaintextdocumentlayout_on_page_count(void* self, int32_t (*slot)());
int32_t q_plaintextdocumentlayout_qbase_page_count(void* self);
QSizeF* q_plaintextdocumentlayout_document_size(void* self);
void q_plaintextdocumentlayout_on_document_size(void* self, QSizeF* (*slot)());
QSizeF* q_plaintextdocumentlayout_qbase_document_size(void* self);
QRectF* q_plaintextdocumentlayout_frame_bounding_rect(void* self, void* param1);
void q_plaintextdocumentlayout_on_frame_bounding_rect(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_plaintextdocumentlayout_qbase_frame_bounding_rect(void* self, void* param1);
QRectF* q_plaintextdocumentlayout_block_bounding_rect(void* self, void* block);
void q_plaintextdocumentlayout_on_block_bounding_rect(void* self, QRectF* (*slot)(void*, void*));
QRectF* q_plaintextdocumentlayout_qbase_block_bounding_rect(void* self, void* block);
void q_plaintextdocumentlayout_ensure_block_layout(void* self, void* block);
void q_plaintextdocumentlayout_set_cursor_width(void* self, int width);
int32_t q_plaintextdocumentlayout_cursor_width(void* self);
void q_plaintextdocumentlayout_request_update(void* self);
void q_plaintextdocumentlayout_document_changed(void* self, int from, int param2, int charsAdded);
void q_plaintextdocumentlayout_on_document_changed(void* self, void (*slot)(void*, int, int, int));
void q_plaintextdocumentlayout_qbase_document_changed(void* self, int from, int param2, int charsAdded);
const char* q_plaintextdocumentlayout_tr2(const char* s, const char* c);
const char* q_plaintextdocumentlayout_tr3(const char* s, const char* c, int n);
const char* q_plaintextdocumentlayout_anchor_at(void* self, void* pos);
const char* q_plaintextdocumentlayout_image_at(void* self, void* pos);
QTextFormat* q_plaintextdocumentlayout_format_at(void* self, void* pos);
QTextBlock* q_plaintextdocumentlayout_block_with_marker_at(void* self, void* pos);
void q_plaintextdocumentlayout_set_paint_device(void* self, void* device);
QPaintDevice* q_plaintextdocumentlayout_paint_device(void* self);
QTextDocument* q_plaintextdocumentlayout_document(void* self);
void q_plaintextdocumentlayout_register_handler(void* self, int objectType, void* component);
void q_plaintextdocumentlayout_unregister_handler(void* self, int objectType);
QTextObjectInterface* q_plaintextdocumentlayout_handler_for_object(void* self, int objectType);
void q_plaintextdocumentlayout_update(void* self);
void q_plaintextdocumentlayout_on_update(void* self, void (*slot)(void*));
void q_plaintextdocumentlayout_update_block(void* self, void* block);
void q_plaintextdocumentlayout_on_update_block(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_document_size_changed(void* self, void* newSize);
void q_plaintextdocumentlayout_on_document_size_changed(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_page_count_changed(void* self, int newPages);
void q_plaintextdocumentlayout_on_page_count_changed(void* self, void (*slot)(void*, int));
void q_plaintextdocumentlayout_unregister_handler2(void* self, int objectType, void* component);
void q_plaintextdocumentlayout_update1(void* self, void* param1);
void q_plaintextdocumentlayout_on_update1(void* self, void (*slot)(void*, void*));
const char* q_plaintextdocumentlayout_object_name(void* self);
void q_plaintextdocumentlayout_set_object_name(void* self, const char* name);
bool q_plaintextdocumentlayout_is_widget_type(void* self);
bool q_plaintextdocumentlayout_is_window_type(void* self);
bool q_plaintextdocumentlayout_is_quick_item_type(void* self);
bool q_plaintextdocumentlayout_signals_blocked(void* self);
bool q_plaintextdocumentlayout_block_signals(void* self, bool b);
QThread* q_plaintextdocumentlayout_thread(void* self);
void q_plaintextdocumentlayout_move_to_thread(void* self, void* thread);
int32_t q_plaintextdocumentlayout_start_timer(void* self, int interval);
void q_plaintextdocumentlayout_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_plaintextdocumentlayout_children(void* self);
void q_plaintextdocumentlayout_set_parent(void* self, void* parent);
void q_plaintextdocumentlayout_install_event_filter(void* self, void* filterObj);
void q_plaintextdocumentlayout_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_plaintextdocumentlayout_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_plaintextdocumentlayout_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_plaintextdocumentlayout_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_plaintextdocumentlayout_disconnect_with_q_meta_object_connection(void* param1);
void q_plaintextdocumentlayout_dump_object_tree(void* self);
void q_plaintextdocumentlayout_dump_object_info(void* self);
bool q_plaintextdocumentlayout_set_property(void* self, const char* name, void* value);
QVariant* q_plaintextdocumentlayout_property(void* self, const char* name);
const char** q_plaintextdocumentlayout_dynamic_property_names(void* self);
QBindingStorage* q_plaintextdocumentlayout_binding_storage(void* self);
QBindingStorage* q_plaintextdocumentlayout_binding_storage2(void* self);
void q_plaintextdocumentlayout_destroyed(void* self);
void q_plaintextdocumentlayout_on_destroyed(void* self, void (*slot)(void*));
QObject* q_plaintextdocumentlayout_parent(void* self);
bool q_plaintextdocumentlayout_inherits(void* self, const char* classname);
void q_plaintextdocumentlayout_delete_later(void* self);
int32_t q_plaintextdocumentlayout_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_plaintextdocumentlayout_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_plaintextdocumentlayout_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_plaintextdocumentlayout_destroyed1(void* self, void* param1);
void q_plaintextdocumentlayout_on_destroyed1(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_resize_inline_object(void* self, void* item, int posInDocument, void* format);
void q_plaintextdocumentlayout_qbase_resize_inline_object(void* self, void* item, int posInDocument, void* format);
void q_plaintextdocumentlayout_on_resize_inline_object(void* self, void (*slot)(void*, void*, int, void*));
void q_plaintextdocumentlayout_position_inline_object(void* self, void* item, int posInDocument, void* format);
void q_plaintextdocumentlayout_qbase_position_inline_object(void* self, void* item, int posInDocument, void* format);
void q_plaintextdocumentlayout_on_position_inline_object(void* self, void (*slot)(void*, void*, int, void*));
void q_plaintextdocumentlayout_draw_inline_object(void* self, void* painter, void* rect, void* object, int posInDocument, void* format);
void q_plaintextdocumentlayout_qbase_draw_inline_object(void* self, void* painter, void* rect, void* object, int posInDocument, void* format);
void q_plaintextdocumentlayout_on_draw_inline_object(void* self, void (*slot)(void*, void*, void*, void*, int, void*));
bool q_plaintextdocumentlayout_event(void* self, void* event);
bool q_plaintextdocumentlayout_qbase_event(void* self, void* event);
void q_plaintextdocumentlayout_on_event(void* self, bool (*slot)(void*, void*));
bool q_plaintextdocumentlayout_event_filter(void* self, void* watched, void* event);
bool q_plaintextdocumentlayout_qbase_event_filter(void* self, void* watched, void* event);
void q_plaintextdocumentlayout_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_plaintextdocumentlayout_timer_event(void* self, void* event);
void q_plaintextdocumentlayout_qbase_timer_event(void* self, void* event);
void q_plaintextdocumentlayout_on_timer_event(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_child_event(void* self, void* event);
void q_plaintextdocumentlayout_qbase_child_event(void* self, void* event);
void q_plaintextdocumentlayout_on_child_event(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_custom_event(void* self, void* event);
void q_plaintextdocumentlayout_qbase_custom_event(void* self, void* event);
void q_plaintextdocumentlayout_on_custom_event(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_connect_notify(void* self, void* signal);
void q_plaintextdocumentlayout_qbase_connect_notify(void* self, void* signal);
void q_plaintextdocumentlayout_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_plaintextdocumentlayout_disconnect_notify(void* self, void* signal);
void q_plaintextdocumentlayout_qbase_disconnect_notify(void* self, void* signal);
void q_plaintextdocumentlayout_on_disconnect_notify(void* self, void (*slot)(void*, void*));
int32_t q_plaintextdocumentlayout_format_index(void* self, int pos);
int32_t q_plaintextdocumentlayout_qbase_format_index(void* self, int pos);
void q_plaintextdocumentlayout_on_format_index(void* self, int32_t (*slot)(void*, int));
QTextCharFormat* q_plaintextdocumentlayout_format(void* self, int pos);
QTextCharFormat* q_plaintextdocumentlayout_qbase_format(void* self, int pos);
void q_plaintextdocumentlayout_on_format(void* self, QTextCharFormat* (*slot)(void*, int));
QObject* q_plaintextdocumentlayout_sender(void* self);
QObject* q_plaintextdocumentlayout_qbase_sender(void* self);
void q_plaintextdocumentlayout_on_sender(void* self, QObject* (*slot)());
int32_t q_plaintextdocumentlayout_sender_signal_index(void* self);
int32_t q_plaintextdocumentlayout_qbase_sender_signal_index(void* self);
void q_plaintextdocumentlayout_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_plaintextdocumentlayout_receivers(void* self, const char* signal);
int32_t q_plaintextdocumentlayout_qbase_receivers(void* self, const char* signal);
void q_plaintextdocumentlayout_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_plaintextdocumentlayout_is_signal_connected(void* self, void* signal);
bool q_plaintextdocumentlayout_qbase_is_signal_connected(void* self, void* signal);
void q_plaintextdocumentlayout_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_plaintextdocumentlayout_delete(void* self);

/// https://doc.qt.io/qt-6/qplaintextedit.html#types

typedef enum {
    QPLAINTEXTEDIT_LINEWRAPMODE_NOWRAP = 0,
    QPLAINTEXTEDIT_LINEWRAPMODE_WIDGETWIDTH = 1
} QPlainTextEdit__LineWrapMode;

#endif
