#pragma once
#ifndef SRCQT6C_LIBQGRAPHICSTRANSFORM_H
#define SRCQT6C_LIBQGRAPHICSTRANSFORM_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "libqttypedefs.h"

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#include "libqanystringview.h"
#include "libqbindingstorage.h"
#include "libqevent.h"
#include "libqmatrix4x4.h"
#include "libqmetaobject.h"
#include "libqobject.h"
#include <string.h>
#include "libqthread.h"
#include "libqvariant.h"
#include "libqvectornd.h"

QGraphicsTransform* q_graphicstransform_new();
QGraphicsTransform* q_graphicstransform_new2(void* parent);
QMetaObject* q_graphicstransform_meta_object(void* self);
void* q_graphicstransform_metacast(void* self, const char* param1);
int32_t q_graphicstransform_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicstransform_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicstransform_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicstransform_tr(const char* s);
void q_graphicstransform_apply_to(void* self, void* matrix);
void q_graphicstransform_on_apply_to(void* self, void (*slot)(void*, void*));
void q_graphicstransform_qbase_apply_to(void* self, void* matrix);
void q_graphicstransform_update(void* self);
void q_graphicstransform_on_update(void* self, void (*slot)());
void q_graphicstransform_qbase_update(void* self);
const char* q_graphicstransform_tr2(const char* s, const char* c);
const char* q_graphicstransform_tr3(const char* s, const char* c, int n);
const char* q_graphicstransform_object_name(void* self);
void q_graphicstransform_set_object_name(void* self, const char* name);
bool q_graphicstransform_is_widget_type(void* self);
bool q_graphicstransform_is_window_type(void* self);
bool q_graphicstransform_is_quick_item_type(void* self);
bool q_graphicstransform_signals_blocked(void* self);
bool q_graphicstransform_block_signals(void* self, bool b);
QThread* q_graphicstransform_thread(void* self);
void q_graphicstransform_move_to_thread(void* self, void* thread);
int32_t q_graphicstransform_start_timer(void* self, int interval);
void q_graphicstransform_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicstransform_children(void* self);
void q_graphicstransform_set_parent(void* self, void* parent);
void q_graphicstransform_install_event_filter(void* self, void* filterObj);
void q_graphicstransform_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicstransform_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicstransform_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicstransform_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicstransform_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicstransform_dump_object_tree(void* self);
void q_graphicstransform_dump_object_info(void* self);
bool q_graphicstransform_set_property(void* self, const char* name, void* value);
QVariant* q_graphicstransform_property(void* self, const char* name);
const char** q_graphicstransform_dynamic_property_names(void* self);
QBindingStorage* q_graphicstransform_binding_storage(void* self);
QBindingStorage* q_graphicstransform_binding_storage2(void* self);
void q_graphicstransform_destroyed(void* self);
void q_graphicstransform_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicstransform_parent(void* self);
bool q_graphicstransform_inherits(void* self, const char* classname);
void q_graphicstransform_delete_later(void* self);
int32_t q_graphicstransform_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicstransform_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicstransform_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicstransform_destroyed1(void* self, void* param1);
void q_graphicstransform_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_graphicstransform_event(void* self, void* event);
bool q_graphicstransform_qbase_event(void* self, void* event);
void q_graphicstransform_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicstransform_event_filter(void* self, void* watched, void* event);
bool q_graphicstransform_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicstransform_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicstransform_timer_event(void* self, void* event);
void q_graphicstransform_qbase_timer_event(void* self, void* event);
void q_graphicstransform_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicstransform_child_event(void* self, void* event);
void q_graphicstransform_qbase_child_event(void* self, void* event);
void q_graphicstransform_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicstransform_custom_event(void* self, void* event);
void q_graphicstransform_qbase_custom_event(void* self, void* event);
void q_graphicstransform_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicstransform_connect_notify(void* self, void* signal);
void q_graphicstransform_qbase_connect_notify(void* self, void* signal);
void q_graphicstransform_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicstransform_disconnect_notify(void* self, void* signal);
void q_graphicstransform_qbase_disconnect_notify(void* self, void* signal);
void q_graphicstransform_on_disconnect_notify(void* self, void (*slot)(void*, void*));
QObject* q_graphicstransform_sender(void* self);
QObject* q_graphicstransform_qbase_sender(void* self);
void q_graphicstransform_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicstransform_sender_signal_index(void* self);
int32_t q_graphicstransform_qbase_sender_signal_index(void* self);
void q_graphicstransform_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicstransform_receivers(void* self, const char* signal);
int32_t q_graphicstransform_qbase_receivers(void* self, const char* signal);
void q_graphicstransform_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicstransform_is_signal_connected(void* self, void* signal);
bool q_graphicstransform_qbase_is_signal_connected(void* self, void* signal);
void q_graphicstransform_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicstransform_delete(void* self);

QGraphicsScale* q_graphicsscale_new();
QGraphicsScale* q_graphicsscale_new2(void* parent);
QMetaObject* q_graphicsscale_meta_object(void* self);
void* q_graphicsscale_metacast(void* self, const char* param1);
int32_t q_graphicsscale_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicsscale_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicsscale_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicsscale_tr(const char* s);
QVector3D* q_graphicsscale_origin(void* self);
void q_graphicsscale_set_origin(void* self, void* point);
double q_graphicsscale_x_scale(void* self);
void q_graphicsscale_set_x_scale(void* self, double xScale);
double q_graphicsscale_y_scale(void* self);
void q_graphicsscale_set_y_scale(void* self, double yScale);
double q_graphicsscale_z_scale(void* self);
void q_graphicsscale_set_z_scale(void* self, double zScale);
void q_graphicsscale_apply_to(void* self, void* matrix);
void q_graphicsscale_on_apply_to(void* self, void (*slot)(void*, void*));
void q_graphicsscale_qbase_apply_to(void* self, void* matrix);
void q_graphicsscale_origin_changed(void* self);
void q_graphicsscale_on_origin_changed(void* self, void (*slot)(void*));
void q_graphicsscale_x_scale_changed(void* self);
void q_graphicsscale_on_x_scale_changed(void* self, void (*slot)(void*));
void q_graphicsscale_y_scale_changed(void* self);
void q_graphicsscale_on_y_scale_changed(void* self, void (*slot)(void*));
void q_graphicsscale_z_scale_changed(void* self);
void q_graphicsscale_on_z_scale_changed(void* self, void (*slot)(void*));
void q_graphicsscale_scale_changed(void* self);
void q_graphicsscale_on_scale_changed(void* self, void (*slot)(void*));
const char* q_graphicsscale_tr2(const char* s, const char* c);
const char* q_graphicsscale_tr3(const char* s, const char* c, int n);
const char* q_graphicsscale_object_name(void* self);
void q_graphicsscale_set_object_name(void* self, const char* name);
bool q_graphicsscale_is_widget_type(void* self);
bool q_graphicsscale_is_window_type(void* self);
bool q_graphicsscale_is_quick_item_type(void* self);
bool q_graphicsscale_signals_blocked(void* self);
bool q_graphicsscale_block_signals(void* self, bool b);
QThread* q_graphicsscale_thread(void* self);
void q_graphicsscale_move_to_thread(void* self, void* thread);
int32_t q_graphicsscale_start_timer(void* self, int interval);
void q_graphicsscale_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicsscale_children(void* self);
void q_graphicsscale_set_parent(void* self, void* parent);
void q_graphicsscale_install_event_filter(void* self, void* filterObj);
void q_graphicsscale_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicsscale_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicsscale_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicsscale_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicsscale_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicsscale_dump_object_tree(void* self);
void q_graphicsscale_dump_object_info(void* self);
bool q_graphicsscale_set_property(void* self, const char* name, void* value);
QVariant* q_graphicsscale_property(void* self, const char* name);
const char** q_graphicsscale_dynamic_property_names(void* self);
QBindingStorage* q_graphicsscale_binding_storage(void* self);
QBindingStorage* q_graphicsscale_binding_storage2(void* self);
void q_graphicsscale_destroyed(void* self);
void q_graphicsscale_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicsscale_parent(void* self);
bool q_graphicsscale_inherits(void* self, const char* classname);
void q_graphicsscale_delete_later(void* self);
int32_t q_graphicsscale_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicsscale_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicsscale_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicsscale_destroyed1(void* self, void* param1);
void q_graphicsscale_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_graphicsscale_event(void* self, void* event);
bool q_graphicsscale_qbase_event(void* self, void* event);
void q_graphicsscale_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicsscale_event_filter(void* self, void* watched, void* event);
bool q_graphicsscale_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicsscale_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicsscale_timer_event(void* self, void* event);
void q_graphicsscale_qbase_timer_event(void* self, void* event);
void q_graphicsscale_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicsscale_child_event(void* self, void* event);
void q_graphicsscale_qbase_child_event(void* self, void* event);
void q_graphicsscale_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicsscale_custom_event(void* self, void* event);
void q_graphicsscale_qbase_custom_event(void* self, void* event);
void q_graphicsscale_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicsscale_connect_notify(void* self, void* signal);
void q_graphicsscale_qbase_connect_notify(void* self, void* signal);
void q_graphicsscale_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsscale_disconnect_notify(void* self, void* signal);
void q_graphicsscale_qbase_disconnect_notify(void* self, void* signal);
void q_graphicsscale_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsscale_update(void* self);
void q_graphicsscale_qbase_update(void* self);
void q_graphicsscale_on_update(void* self, void (*slot)());
QObject* q_graphicsscale_sender(void* self);
QObject* q_graphicsscale_qbase_sender(void* self);
void q_graphicsscale_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicsscale_sender_signal_index(void* self);
int32_t q_graphicsscale_qbase_sender_signal_index(void* self);
void q_graphicsscale_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicsscale_receivers(void* self, const char* signal);
int32_t q_graphicsscale_qbase_receivers(void* self, const char* signal);
void q_graphicsscale_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicsscale_is_signal_connected(void* self, void* signal);
bool q_graphicsscale_qbase_is_signal_connected(void* self, void* signal);
void q_graphicsscale_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicsscale_delete(void* self);

QGraphicsRotation* q_graphicsrotation_new();
QGraphicsRotation* q_graphicsrotation_new2(void* parent);
QMetaObject* q_graphicsrotation_meta_object(void* self);
void* q_graphicsrotation_metacast(void* self, const char* param1);
int32_t q_graphicsrotation_metacall(void* self, int64_t param1, int param2, void* param3);
void q_graphicsrotation_on_metacall(void* self, int32_t (*slot)(void*, int64_t, int, void*));
int32_t q_graphicsrotation_qbase_metacall(void* self, int64_t param1, int param2, void* param3);
const char* q_graphicsrotation_tr(const char* s);
QVector3D* q_graphicsrotation_origin(void* self);
void q_graphicsrotation_set_origin(void* self, void* point);
double q_graphicsrotation_angle(void* self);
void q_graphicsrotation_set_angle(void* self, double angle);
QVector3D* q_graphicsrotation_axis(void* self);
void q_graphicsrotation_set_axis(void* self, void* axis);
void q_graphicsrotation_set_axis_with_axis(void* self, int64_t axis);
void q_graphicsrotation_apply_to(void* self, void* matrix);
void q_graphicsrotation_on_apply_to(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_qbase_apply_to(void* self, void* matrix);
void q_graphicsrotation_origin_changed(void* self);
void q_graphicsrotation_on_origin_changed(void* self, void (*slot)(void*));
void q_graphicsrotation_angle_changed(void* self);
void q_graphicsrotation_on_angle_changed(void* self, void (*slot)(void*));
void q_graphicsrotation_axis_changed(void* self);
void q_graphicsrotation_on_axis_changed(void* self, void (*slot)(void*));
const char* q_graphicsrotation_tr2(const char* s, const char* c);
const char* q_graphicsrotation_tr3(const char* s, const char* c, int n);
const char* q_graphicsrotation_object_name(void* self);
void q_graphicsrotation_set_object_name(void* self, const char* name);
bool q_graphicsrotation_is_widget_type(void* self);
bool q_graphicsrotation_is_window_type(void* self);
bool q_graphicsrotation_is_quick_item_type(void* self);
bool q_graphicsrotation_signals_blocked(void* self);
bool q_graphicsrotation_block_signals(void* self, bool b);
QThread* q_graphicsrotation_thread(void* self);
void q_graphicsrotation_move_to_thread(void* self, void* thread);
int32_t q_graphicsrotation_start_timer(void* self, int interval);
void q_graphicsrotation_kill_timer(void* self, int id);
libqt_list /* of QObject* */ q_graphicsrotation_children(void* self);
void q_graphicsrotation_set_parent(void* self, void* parent);
void q_graphicsrotation_install_event_filter(void* self, void* filterObj);
void q_graphicsrotation_remove_event_filter(void* self, void* obj);
QMetaObject__Connection* q_graphicsrotation_connect(void* sender, void* signal, void* receiver, void* method);
QMetaObject__Connection* q_graphicsrotation_connect2(void* self, void* sender, const char* signal, const char* member);
bool q_graphicsrotation_disconnect(void* sender, void* signal, void* receiver, void* member);
bool q_graphicsrotation_disconnect_with_q_meta_object_connection(void* param1);
void q_graphicsrotation_dump_object_tree(void* self);
void q_graphicsrotation_dump_object_info(void* self);
bool q_graphicsrotation_set_property(void* self, const char* name, void* value);
QVariant* q_graphicsrotation_property(void* self, const char* name);
const char** q_graphicsrotation_dynamic_property_names(void* self);
QBindingStorage* q_graphicsrotation_binding_storage(void* self);
QBindingStorage* q_graphicsrotation_binding_storage2(void* self);
void q_graphicsrotation_destroyed(void* self);
void q_graphicsrotation_on_destroyed(void* self, void (*slot)(void*));
QObject* q_graphicsrotation_parent(void* self);
bool q_graphicsrotation_inherits(void* self, const char* classname);
void q_graphicsrotation_delete_later(void* self);
int32_t q_graphicsrotation_start_timer2(void* self, int interval, int64_t timerType);
QMetaObject__Connection* q_graphicsrotation_connect5(void* sender, void* signal, void* receiver, void* method, int64_t typeVal);
QMetaObject__Connection* q_graphicsrotation_connect4(void* self, void* sender, const char* signal, const char* member, int64_t typeVal);
void q_graphicsrotation_destroyed1(void* self, void* param1);
void q_graphicsrotation_on_destroyed1(void* self, void (*slot)(void*, void*));
bool q_graphicsrotation_event(void* self, void* event);
bool q_graphicsrotation_qbase_event(void* self, void* event);
void q_graphicsrotation_on_event(void* self, bool (*slot)(void*, void*));
bool q_graphicsrotation_event_filter(void* self, void* watched, void* event);
bool q_graphicsrotation_qbase_event_filter(void* self, void* watched, void* event);
void q_graphicsrotation_on_event_filter(void* self, bool (*slot)(void*, void*, void*));
void q_graphicsrotation_timer_event(void* self, void* event);
void q_graphicsrotation_qbase_timer_event(void* self, void* event);
void q_graphicsrotation_on_timer_event(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_child_event(void* self, void* event);
void q_graphicsrotation_qbase_child_event(void* self, void* event);
void q_graphicsrotation_on_child_event(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_custom_event(void* self, void* event);
void q_graphicsrotation_qbase_custom_event(void* self, void* event);
void q_graphicsrotation_on_custom_event(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_connect_notify(void* self, void* signal);
void q_graphicsrotation_qbase_connect_notify(void* self, void* signal);
void q_graphicsrotation_on_connect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_disconnect_notify(void* self, void* signal);
void q_graphicsrotation_qbase_disconnect_notify(void* self, void* signal);
void q_graphicsrotation_on_disconnect_notify(void* self, void (*slot)(void*, void*));
void q_graphicsrotation_update(void* self);
void q_graphicsrotation_qbase_update(void* self);
void q_graphicsrotation_on_update(void* self, void (*slot)());
QObject* q_graphicsrotation_sender(void* self);
QObject* q_graphicsrotation_qbase_sender(void* self);
void q_graphicsrotation_on_sender(void* self, QObject* (*slot)());
int32_t q_graphicsrotation_sender_signal_index(void* self);
int32_t q_graphicsrotation_qbase_sender_signal_index(void* self);
void q_graphicsrotation_on_sender_signal_index(void* self, int32_t (*slot)());
int32_t q_graphicsrotation_receivers(void* self, const char* signal);
int32_t q_graphicsrotation_qbase_receivers(void* self, const char* signal);
void q_graphicsrotation_on_receivers(void* self, int32_t (*slot)(void*, const char*));
bool q_graphicsrotation_is_signal_connected(void* self, void* signal);
bool q_graphicsrotation_qbase_is_signal_connected(void* self, void* signal);
void q_graphicsrotation_on_is_signal_connected(void* self, bool (*slot)(void*, void*));
void q_graphicsrotation_delete(void* self);

#endif
